[{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":null,"dir":"","previous_headings":"","what":"CLAUDE.md","title":"CLAUDE.md","text":"file provides guidance Claude Code (claude.ai/code) working code repository.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"project-overview","dir":"","previous_headings":"","what":"Project Overview","title":"CLAUDE.md","text":"jjstatsplot, R package wraps ggstatsplot functions use module jamovi. provides point--click statistical visualizations jamovi’s GUI maintaining R’s statistical power.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"three-layer-jamovi-integration","dir":"","previous_headings":"Architecture","what":"Three-Layer jamovi Integration","title":"CLAUDE.md","text":"analysis follows consistent pattern: - R/jj[name].b.R - R6 class implementing backend logic - R/jj[name].h.R - Auto-generated helper classes (edit manually) - jamovi/jj[name]..yaml - Analysis definition (parameters, options) - jamovi/jj[name].u.yaml - User interface definition - jamovi/jj[name].r.yaml - Results definition","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"r6-class-structure","dir":"","previous_headings":"Architecture","what":"R6 Class Structure","title":"CLAUDE.md","text":"backend class inherits jj[name]Base → jmvcore::Analysis implements: - .init() - Setup plot dimensions grouping logic - .run() - Main analysis error handling data validation - .plot() - Primary plot using ggstatsplot functions - .plot2() - Secondary grouped plots (grouping variable specified)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"dual-mode-operation","dir":"","previous_headings":"Architecture","what":"Dual-Mode Operation","title":"CLAUDE.md","text":"analyses support: - Simple Mode: Single dependent variable analysis - Grouped Mode: Multiple dependent variables grouping factor - Logic checks length(self$options$dep) !.null(self$options$grvar)","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"standard-r-package-development","dir":"","previous_headings":"Development Commands","what":"Standard R Package Development","title":"CLAUDE.md","text":"","code":"# Generate documentation devtools::document()  # Check package compliance devtools::check()  # Install locally devtools::install()  # Load for development devtools::load_all()"},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"testing","dir":"","previous_headings":"Development Commands","what":"Testing","title":"CLAUDE.md","text":"","code":"# Run R CMD check (GitHub Actions uses this) rcmdcheck::rcmdcheck()  # No formal unit test framework - relies on R CMD check"},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"building-and-installation","dir":"","previous_headings":"Development Commands","what":"Building and Installation","title":"CLAUDE.md","text":"","code":"# Build package tarball devtools::build()  # Build jamovi module (.jmo file) jmvtools::install()  # Creates jjstatsplot.jmo in build/R4.4.2-macos/"},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"jamovi-module-development","dir":"","previous_headings":"Development Commands","what":"jamovi Module Development","title":"CLAUDE.md","text":".h.R files auto-generated jamovi compiler .yaml files Never edit .h.R files manually modifying .yaml files, jamovi regenerate .h.R files Main module definition jamovi/0000.yaml New analyses require .b.R backend corresponding ..yaml, .u.yaml, .r.yaml files Use jmvtools::create() scaffold new analysis templates","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"package-dependencies","dir":"","previous_headings":"","what":"Package Dependencies","title":"CLAUDE.md","text":"Core Framework: - jmvcore (jamovi core) - R6 (OOP system) - ggstatsplot (main statistical plotting engine) Key Plotting: ggplot2, ggalluvial, ggside, ggcorrplot, ggdist, ggridges, ggrain ggforce (hull plots), waffle (waffle charts), arcdiagram, easyalluvial ggsegmentedtotalbar (segmented bar charts) Statistical: PMCMRplus, WRS2, BayesFactor, effectsize, performance moments (distribution moments)","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"core-statistical-plots","dir":"","previous_headings":"Analysis Types","what":"Core Statistical Plots","title":"CLAUDE.md","text":"jjhistostats - Histograms statistical annotations jjscatterstats - Scatter plots regression details jjcorrmat - Correlation matrices jjbetweenstats - -groups comparisons (box-violin plots) jjdotplotstats - Dot charts summary statistics jjbarstats - Bar charts categorical data jjpiestats - Pie charts jjwithinstats - Within-groups comparisons (repeated measures) jjwaffle - Waffle charts distributions","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"advancedadditional-plots","dir":"","previous_headings":"Analysis Types","what":"Advanced/Additional Plots","title":"CLAUDE.md","text":"advancedraincloud - Enhanced raincloud plots longitudinal support hullplot - Hull plots cluster group visualization using ggforce jjarcdiagram - Arc diagrams network/flow visualization jjridges - Ridge plots distribution comparisons jjsegmentedtotalbar - Segmented bar charts totals linechart - Line charts trends time lollipop - Lollipop charts ranked data raincloud - Basic raincloud plots (distribution + individual points) statsplot2 - Extended statistical plotting functionality","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"plot-size-management","dir":"","previous_headings":"Key Patterns","what":"Plot Size Management","title":"CLAUDE.md","text":"","code":"# In .init(), set dynamic plot sizes based on data deplen <- length(self$options$dep) self$results$plot$setSize(600, deplen * 450)  # For grouped plots num_levels <- nlevels(as.factor(mydata[[grvar]])) self$results$plot2$setSize(num_levels * 600, deplen * 450)"},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"data-preparation-pattern","dir":"","previous_headings":"Key Patterns","what":"Data Preparation Pattern","title":"CLAUDE.md","text":"","code":"# Standard data preparation with caching .prepareData = function(force_refresh = FALSE) {     if (!is.null(private$.processedData) && !force_refresh) {         return(private$.processedData)     }          mydata <- self$data     # Convert to numeric     vars <- self$options$dep     for (var in vars) {         mydata[[var]] <- jmvcore::toNumeric(mydata[[var]])     }     # Remove NA values     mydata <- jmvcore::naOmit(mydata)          private$.processedData <- mydata     return(mydata) }"},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"error-handling","dir":"","previous_headings":"Key Patterns","what":"Error Handling","title":"CLAUDE.md","text":"Always check required variables running analysis Use glue::glue() user-friendly error messages Return early helpful guidance data missing Wrap ggstatsplot calls tryCatch blocks","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"theme-support","dir":"","previous_headings":"Key Patterns","what":"Theme Support","title":"CLAUDE.md","text":"Supports jamovi-style themes original ggstatsplot themes Theme selection handled jamovi UI options Theme applied via self$options$theme parameter","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"file-organization","dir":"","previous_headings":"","what":"File Organization","title":"CLAUDE.md","text":"jj*.b.R - Backend implementations (18 analyses) jj*.h.R - Auto-generated helpers utils.R - Utility functions 0000.yaml - Main module configuration jj*..yaml - Analysis definitions jj*.u.yaml - UI definitions jj*.r.yaml - Results definitions man/ - Generated documentation (roxygen2) data/ - Example datasets (histopathology.rda) vignettes/ - Package tutorials (40+ files) inst/i18n/ - Internationalization support build/ - Build artifacts jamovi module files","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"testing-strategy","dir":"","previous_headings":"","what":"Testing Strategy","title":"CLAUDE.md","text":"package uses GitHub Actions R-CMD-check macOS Windows. Tests automatically skip commits containing “WIP” message.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"progress-feedback","dir":"","previous_headings":"Important Implementation Notes","what":"Progress Feedback","title":"CLAUDE.md","text":"analysis provides user feedback via self$results$todo$setContent() data preparation analysis phases.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"result-structure","dir":"","previous_headings":"Important Implementation Notes","what":"Result Structure","title":"CLAUDE.md","text":"self$results$plot - Primary plot output self$results$plot2 - Secondary grouped plots (applicable) self$results$todo - Progress/status messages","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/CLAUDE.html","id":"common-pitfalls-to-avoid","dir":"","previous_headings":"Important Implementation Notes","what":"Common Pitfalls to Avoid","title":"CLAUDE.md","text":"Never edit .h.R files (regenerated automatically) Always use jmvcore::toNumeric() numeric conversion Use jmvcore::naOmit() NA handling Check required variables analysis Set plot sizes dynamically based data dimensions","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"jjstatsplot provides comprehensive statistical visualization tools specifically designed clinical research pathology studies. Built powerful ggstatsplot package, offers publication-ready plots integrated statistical testing, making complex data analysis accessible clinical researchers. Learning Objectives: Master statistical visualization clinical data analysis Learn publication-ready plot creation integrated statistics Apply appropriate statistical tests different data types Understand clinical interpretation statistical visualizations Implement quality control reproducible reporting workflows","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"module-overview","dir":"Articles","previous_headings":"Introduction","what":"Module Overview","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"jjstatsplot encompasses four main areas statistical visualization:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"categorical-data-analysis","dir":"Articles","previous_headings":"Introduction > Module Overview","what":"1. Categorical Data Analysis","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Bar Charts: Group comparisons chi-square testing Pie Charts: Proportion visualization categorical outcomes Dot Plots: Summary statistics confidence intervals Mosaic Plots: Multi-dimensional categorical relationships","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"continuous-data-analysis","dir":"Articles","previous_headings":"Introduction > Module Overview","what":"2. Continuous Data Analysis","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Box-Violin Plots: Distribution comparisons groups Histograms: Distribution analysis normality testing Density Plots: Smooth distribution visualization Within-Subject Comparisons: Paired data analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"correlation-and-association","dir":"Articles","previous_headings":"Introduction > Module Overview","what":"3. Correlation and Association","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Scatter Plots: Relationship visualization regression Correlation Matrices: Multi-variable association analysis Heatmaps: Pattern recognition large datasets Network Plots: Complex relationship visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"advanced-visualizations","dir":"Articles","previous_headings":"Introduction > Module Overview","what":"4. Advanced Visualizations","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Ridge Plots: Multiple distribution comparisons Raincloud Plots: Combined distribution individual points Forest Plots: Meta-analysis effect size visualization Sankey Diagrams: Flow pathway analysis","code":"library(jjstatsplot) library(dplyr) library(ggplot2)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"clinical-data-examples","dir":"Articles","previous_headings":"Getting Started","what":"Clinical Data Examples","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"’ll demonstrate jjstatsplot functions using clinical pathology datasets represent real-world scenarios.","code":"# Load clinical pathology datasets data(histopathology) data(breast_cancer_data) data(ihc_molecular_comprehensive)  # Prepare clinical variables for analysis clinical_data <- histopathology %>%   mutate(     # Convert variables to appropriate types     Grade = factor(Grade, levels = 1:3, labels = c(\"Grade 1\", \"Grade 2\", \"Grade 3\")),     TStage = factor(TStage),     Group = factor(Group),     LVI = factor(LVI, levels = c(\"FALSE\", \"TRUE\"), labels = c(\"Absent\", \"Present\")),     Age_Group = factor(ifelse(Age >= 65, \"≥65 years\", \"<65 years\")),          # Create clinical outcome variables     High_Risk = factor(ifelse(Grade == \"Grade 3\" | TStage %in% c(\"T3\", \"T4\"),                               \"High Risk\", \"Low Risk\")),     Recurrence_Risk = factor(case_when(       Grade == \"Grade 1\" & TStage %in% c(\"T1\", \"T2\") ~ \"Low\",       Grade == \"Grade 2\" ~ \"Intermediate\",        Grade == \"Grade 3\" | TStage %in% c(\"T3\", \"T4\") ~ \"High\",       TRUE ~ \"Intermediate\"     ), levels = c(\"Low\", \"Intermediate\", \"High\"))   )  cat(\"Clinical Dataset Overview:\\n\") cat(\"Patients:\", nrow(clinical_data), \"\\n\") cat(\"Variables:\", ncol(clinical_data), \"\\n\")  # Variable summary clinical_summary <- clinical_data %>%   summarise(     median_age = median(Age, na.rm = TRUE),     grade3_pct = round(mean(Grade == \"Grade 3\", na.rm = TRUE) * 100, 1),     lvi_present_pct = round(mean(LVI == \"Present\", na.rm = TRUE) * 100, 1),     high_risk_pct = round(mean(High_Risk == \"High Risk\", na.rm = TRUE) * 100, 1)   )  print(\"Clinical Characteristics:\") print(clinical_summary)"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"bar-charts-for-group-comparisons","dir":"Articles","previous_headings":"Core Visualization Functions > 1. Categorical Data Visualization","what":"Bar Charts for Group Comparisons","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Essential comparing categorical outcomes treatment groups.","code":"# Bar Chart Example - Tumor Grade by Treatment Group # In jamovi: JJStatsPlot > Categorical > Bar Charts  cat(\"Bar Chart Analysis - Tumor Grade by Treatment Group\\n\") cat(\"==================================================\\n\\n\")  # Basic bar chart with statistical testing grade_by_group <- jjbarstats(   data = clinical_data,   dep = \"Grade\",              # Dependent variable (outcome)   group = \"Group\",            # Grouping variable (treatment)   title = \"Tumor Grade Distribution by Treatment Group\",   subtitle = \"Chi-square test for independence\",   xlab = \"Treatment Group\",   ylab = \"Count\" )  # Results interpretation cat(\"Statistical Test: Chi-square test of independence\\n\") cat(\"Null Hypothesis: Grade distribution is independent of treatment group\\n\") cat(\"Alternative: Grade distribution differs between treatment groups\\n\\n\")  # Clinical interpretation guidelines cat(\"Clinical Interpretation Guidelines:\\n\") cat(\"- Low-grade tumors (Grade 1-2): Better prognosis, less aggressive\\n\") cat(\"- High-grade tumors (Grade 3): Poorer prognosis, more aggressive\\n\") cat(\"- Treatment group differences may indicate selection bias or treatment effect\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"pie-charts-for-proportion-visualization","dir":"Articles","previous_headings":"Core Visualization Functions > 1. Categorical Data Visualization","what":"Pie Charts for Proportion Visualization","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Useful showing composition categorical variables.","code":"# Pie Chart Example - Recurrence Risk Distribution # In jamovi: JJStatsPlot > Categorical > Pie Charts  cat(\"Pie Chart Analysis - Recurrence Risk Distribution\\n\") cat(\"================================================\\n\\n\")  recurrence_pie <- jjpiestats(   data = clinical_data,   dep = \"Recurrence_Risk\",   title = \"Patient Distribution by Recurrence Risk\",   subtitle = \"Low, Intermediate, and High Risk Categories\" )  # Risk stratification summary risk_distribution <- table(clinical_data$Recurrence_Risk) risk_percentages <- round(prop.table(risk_distribution) * 100, 1)  cat(\"Recurrence Risk Distribution:\\n\") for(i in 1:length(risk_distribution)) {   cat(paste0(names(risk_distribution)[i], \": \", risk_distribution[i],              \" patients (\", risk_percentages[i], \"%)\\n\")) }  cat(\"\\nClinical Utility:\\n\") cat(\"- Risk stratification guides treatment intensity\\n\") cat(\"- High-risk patients may benefit from adjuvant therapy\\n\") cat(\"- Low-risk patients may be candidates for de-escalation\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"box-violin-plots-for-group-comparisons","dir":"Articles","previous_headings":"Core Visualization Functions > 2. Continuous Data Visualization","what":"Box-Violin Plots for Group Comparisons","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Standard approach comparing continuous variables groups.","code":"# Box-Violin Plot Example - Age by Risk Group # In jamovi: JJStatsPlot > Continuous > Between Groups  cat(\"Box-Violin Plot Analysis - Age by Risk Group\\n\") cat(\"============================================\\n\\n\")  age_by_risk <- jjbetweenstats(   data = clinical_data,   dep = \"Age\",                    # Continuous outcome variable   group = \"High_Risk\",            # Grouping variable   type = \"parametric\",            # Statistical test type   pairwise.comparisons = TRUE,    # Post-hoc comparisons   title = \"Age Distribution by Risk Category\",   subtitle = \"Two-sample t-test with effect size\",   xlab = \"Risk Category\",   ylab = \"Age (years)\" )  # Effect size interpretation cat(\"Statistical Analysis:\\n\") cat(\"Test: Two-sample t-test (parametric)\\n\") cat(\"Effect size: Cohen's d\\n\") cat(\"Assumptions: Normality, equal variances\\n\\n\")  cat(\"Effect Size Interpretation (Cohen's d):\\n\") cat(\"- Small effect: d = 0.2\\n\") cat(\"- Medium effect: d = 0.5\\n\") cat(\"- Large effect: d = 0.8\\n\\n\")  cat(\"Clinical Relevance:\\n\") cat(\"- Age may be a confounding factor in risk assessment\\n\") cat(\"- Older patients may have different treatment tolerability\\n\") cat(\"- Age-adjusted analysis may be necessary\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"histograms-with-statistical-testing","dir":"Articles","previous_headings":"Core Visualization Functions > 2. Continuous Data Visualization","what":"Histograms with Statistical Testing","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Evaluate distribution characteristics test theoretical distributions.","code":"# Histogram Example - Age Distribution Analysis # In jamovi: JJStatsPlot > Continuous > Histograms  cat(\"Histogram Analysis - Age Distribution\\n\") cat(\"====================================\\n\\n\")  age_histogram <- jjhistostats(   data = clinical_data,   dep = \"Age\",   test.value = 65,               # Test against clinically relevant age   type = \"parametric\",   normal.curve = TRUE,           # Overlay normal distribution   title = \"Patient Age Distribution\",   subtitle = \"One-sample t-test against age 65\",   xlab = \"Age (years)\",   binwidth = 5 )  # Distribution characteristics age_stats <- clinical_data %>%   summarise(     n = sum(!is.na(Age)),     mean_age = round(mean(Age, na.rm = TRUE), 1),     median_age = median(Age, na.rm = TRUE),     sd_age = round(sd(Age, na.rm = TRUE), 1),     min_age = min(Age, na.rm = TRUE),     max_age = max(Age, na.rm = TRUE),     elderly_pct = round(mean(Age >= 65, na.rm = TRUE) * 100, 1)   )  cat(\"Age Distribution Summary:\\n\") cat(\"Sample size:\", age_stats$n, \"\\n\") cat(\"Mean age:\", age_stats$mean_age, \"years\\n\") cat(\"Median age:\", age_stats$median_age, \"years\\n\") cat(\"Standard deviation:\", age_stats$sd_age, \"years\\n\") cat(\"Age range:\", age_stats$min_age, \"-\", age_stats$max_age, \"years\\n\") cat(\"Elderly patients (≥65):\", age_stats$elderly_pct, \"%\\n\\n\")  cat(\"Clinical Implications:\\n\") cat(\"- Patient age distribution affects generalizability\\n\") cat(\"- Elderly patients may require modified treatment protocols\\n\") cat(\"- Age-related comorbidities impact treatment selection\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"scatter-plots-with-regression-analysis","dir":"Articles","previous_headings":"Core Visualization Functions > 3. Correlation and Association Analysis","what":"Scatter Plots with Regression Analysis","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Examine relationships continuous variables.","code":"# Scatter Plot Example - Biomarker Correlation # In jamovi: JJStatsPlot > Correlation > Scatter Plots  cat(\"Scatter Plot Analysis - Biomarker Correlation\\n\") cat(\"=============================================\\n\\n\")  # Using measurement variables from histopathology data biomarker_scatter <- jjscatterstats(   data = clinical_data,   x = \"MeasurementA\",           # First biomarker   y = \"MeasurementB\",           # Second biomarker   type = \"parametric\",   conf.level = 0.95,   title = \"Biomarker A vs Biomarker B Correlation\",   subtitle = \"Pearson correlation with 95% confidence interval\",   xlab = \"Biomarker A Expression\",   ylab = \"Biomarker B Expression\" )  # Correlation strength interpretation cat(\"Correlation Strength Interpretation:\\n\") cat(\"- Negligible: |r| < 0.1\\n\") cat(\"- Weak: 0.1 ≤ |r| < 0.3\\n\") cat(\"- Moderate: 0.3 ≤ |r| < 0.5\\n\") cat(\"- Strong: 0.5 ≤ |r| < 0.7\\n\") cat(\"- Very strong: |r| ≥ 0.7\\n\\n\")  cat(\"Clinical Applications:\\n\") cat(\"- Biomarker co-expression patterns\\n\") cat(\"- Pathway analysis and validation\\n\") cat(\"- Quality control for technical replicates\\n\") cat(\"- Surrogate endpoint validation\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"correlation-matrix-for-multiple-variables","dir":"Articles","previous_headings":"Core Visualization Functions > 3. Correlation and Association Analysis","what":"Correlation Matrix for Multiple Variables","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Comprehensive analysis relationships multiple variables.","code":"# Correlation Matrix Example - Clinical Variables # In jamovi: JJStatsPlot > Correlation > Correlation Matrix  cat(\"Correlation Matrix Analysis - Clinical Variables\\n\") cat(\"===============================================\\n\\n\")  # Select continuous clinical variables continuous_vars <- clinical_data %>%   select(Age, MeasurementA, MeasurementB, OverallTime) %>%   na.omit()  if(nrow(continuous_vars) > 10) {   correlation_matrix <- jjcorrmat(     data = continuous_vars,     type = \"parametric\",     title = \"Clinical Variables Correlation Matrix\",     subtitle = \"Pearson correlations with significance testing\"   )      cat(\"Matrix Interpretation:\\n\")   cat(\"- Diagonal elements are always 1.0 (self-correlation)\\n\")   cat(\"- Upper triangle shows correlation coefficients\\n\")   cat(\"- Lower triangle may show significance levels\\n\")   cat(\"- Color intensity indicates correlation strength\\n\\n\")      cat(\"Clinical Value:\\n\")   cat(\"- Identify multicollinearity in regression models\\n\")   cat(\"- Discover unexpected relationships between variables\\n\")   cat(\"- Guide feature selection for predictive models\\n\")   cat(\"- Quality assurance for related measurements\\n\") }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"paired-data-analysis","dir":"Articles","previous_headings":"Advanced Clinical Applications","what":"Paired Data Analysis","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Essential -comparisons matched samples.","code":"# Paired Analysis Example - Pre/Post Treatment Comparison # In jamovi: JJStatsPlot > Continuous > Within Subject  cat(\"Paired Data Analysis - Treatment Response\\n\") cat(\"========================================\\n\\n\")  # Create synthetic paired data for demonstration set.seed(123) paired_data <- clinical_data %>%   slice_head(n = 50) %>%   mutate(     Pre_Treatment = MeasurementA,     Post_Treatment = MeasurementA + rnorm(50, mean = -2, sd = 1.5),     Patient_ID = paste0(\"PT\", sprintf(\"%03d\", 1:50))   ) %>%   select(Patient_ID, Pre_Treatment, Post_Treatment) %>%   tidyr::pivot_longer(cols = c(Pre_Treatment, Post_Treatment),                      names_to = \"Timepoint\",                       values_to = \"Biomarker_Level\")  if(nrow(paired_data) > 0) {   paired_comparison <- jjwithinstats(     data = paired_data,     x = \"Timepoint\",     y = \"Biomarker_Level\",     id = \"Patient_ID\",     paired = TRUE,     type = \"parametric\",     title = \"Pre vs Post-Treatment Biomarker Levels\",     subtitle = \"Paired t-test with individual trajectories\",     xlab = \"Treatment Timepoint\",     ylab = \"Biomarker Level\"   )      cat(\"Paired Analysis Advantages:\\n\")   cat(\"- Controls for individual patient baseline differences\\n\")   cat(\"- Higher statistical power than independent samples\\n\")   cat(\"- Shows individual patient trajectories\\n\")   cat(\"- Appropriate for longitudinal studies\\n\\n\")      cat(\"Clinical Applications:\\n\")   cat(\"- Treatment response monitoring\\n\")   cat(\"- Before-after intervention studies\\n\")   cat(\"- Matched case-control designs\\n\")   cat(\"- Quality of life assessments\\n\") }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"subgroup-analysis","dir":"Articles","previous_headings":"Advanced Clinical Applications","what":"Subgroup Analysis","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Evaluate treatment effects across different patient populations.","code":"cat(\"Subgroup Analysis - Treatment Effect by Grade\\n\") cat(\"=============================================\\n\\n\")  # Subgroup analysis by tumor grade subgroup_results <- list()  for(grade_level in c(\"Grade 1\", \"Grade 2\", \"Grade 3\")) {   subgroup_data <- clinical_data %>%     filter(Grade == grade_level & !is.na(MeasurementA))      if(nrow(subgroup_data) >= 10) {     cat(paste0(\"Analysis for \", grade_level, \":\\n\"))     cat(paste0(\"Sample size: \", nrow(subgroup_data), \"\\n\"))          # Age comparison by group within grade     age_summary <- subgroup_data %>%       group_by(Group) %>%       summarise(         n = n(),         mean_age = round(mean(Age, na.rm = TRUE), 1),         sd_age = round(sd(Age, na.rm = TRUE), 1),         .groups = 'drop'       )          print(age_summary)     cat(\"\\n\")   } }  cat(\"Subgroup Analysis Considerations:\\n\") cat(\"- Reduced sample sizes may limit statistical power\\n\") cat(\"- Multiple comparisons increase Type I error risk\\n\") cat(\"- Pre-planned vs post-hoc analyses have different interpretations\\n\") cat(\"- Clinical significance may differ from statistical significance\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"quality-control-applications","dir":"Articles","previous_headings":"Integration with Clinical Workflows","what":"Quality Control Applications","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Statistical visualization laboratory clinical QC.","code":"cat(\"Quality Control Applications\\n\") cat(\"===========================\\n\\n\")  # QC metrics analysis qc_data <- clinical_data %>%   mutate(     # Simulate QC metrics     Processing_Batch = sample(1:5, n(), replace = TRUE),     Staining_Quality = sample(c(\"Excellent\", \"Good\", \"Acceptable\", \"Poor\"),                               n(), replace = TRUE, prob = c(0.4, 0.3, 0.2, 0.1)),     Measurement_CV = abs(rnorm(n(), mean = 5, sd = 2))  # Coefficient of variation   ) %>%   filter(!is.na(MeasurementA))  # Batch effect analysis if(nrow(qc_data) > 20) {   cat(\"Batch Effect Analysis:\\n\")   batch_summary <- qc_data %>%     group_by(Processing_Batch) %>%     summarise(       n = n(),       mean_measurement = round(mean(MeasurementA, na.rm = TRUE), 2),       sd_measurement = round(sd(MeasurementA, na.rm = TRUE), 2),       cv_measurement = round(sd_measurement / mean_measurement * 100, 1),       .groups = 'drop'     )      print(batch_summary)      cat(\"\\nQuality Control Guidelines:\\n\")   cat(\"- CV <10%: Excellent reproducibility\\n\")   cat(\"- CV 10-15%: Good reproducibility\\n\")    cat(\"- CV 15-20%: Acceptable reproducibility\\n\")   cat(\"- CV >20%: Poor reproducibility, investigate\\n\\n\") }  cat(\"QC Visualization Applications:\\n\") cat(\"- Monitor analytical performance over time\\n\") cat(\"- Detect systematic errors and drift\\n\") cat(\"- Validate new analytical methods\\n\") cat(\"- Support accreditation requirements\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"statistical-considerations","dir":"Articles","previous_headings":"Best Practices for Clinical Research","what":"Statistical Considerations","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"","code":"cat(\"Statistical Best Practices for Clinical Visualization\\n\") cat(\"====================================================\\n\\n\")  cat(\"1. Choose Appropriate Statistical Tests:\\n\") cat(\"   - Parametric: Normal distribution, continuous data\\n\") cat(\"   - Non-parametric: Skewed data, ordinal scales\\n\") cat(\"   - Robust: Outliers present, mixed distributions\\n\") cat(\"   - Bayesian: Small samples, prior information available\\n\\n\")  cat(\"2. Effect Size Reporting:\\n\") cat(\"   - Always report effect sizes alongside p-values\\n\") cat(\"   - Consider clinical significance, not just statistical significance\\n\") cat(\"   - Use confidence intervals for uncertainty quantification\\n\\n\")  cat(\"3. Multiple Comparisons:\\n\") cat(\"   - Adjust p-values when testing multiple hypotheses\\n\") cat(\"   - Pre-specify primary and secondary endpoints\\n\") cat(\"   - Consider false discovery rate control\\n\\n\")  cat(\"4. Sample Size Considerations:\\n\") cat(\"   - Ensure adequate power for primary analyses\\n\") cat(\"   - Be cautious with subgroup analyses (small n)\\n\") cat(\"   - Report confidence intervals to show precision\\n\\n\")  cat(\"5. Missing Data:\\n\") cat(\"   - Report patterns and extent of missing data\\n\") cat(\"   - Use appropriate missing data methods\\n\") cat(\"   - Conduct sensitivity analyses\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"publication-guidelines","dir":"Articles","previous_headings":"Best Practices for Clinical Research","what":"Publication Guidelines","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"","code":"cat(\"Publication-Ready Visualization Guidelines\\n\") cat(\"==========================================\\n\\n\")  cat(\"1. Figure Quality:\\n\") cat(\"   - High resolution (≥300 DPI) for print\\n\") cat(\"   - Clear, readable fonts (≥10 point)\\n\") cat(\"   - Appropriate color schemes (colorblind-friendly)\\n\") cat(\"   - Consistent styling across figures\\n\\n\")  cat(\"2. Statistical Reporting:\\n\") cat(\"   - Include sample sizes in figure legends\\n\") cat(\"   - Report exact p-values when possible\\n\") cat(\"   - Specify statistical tests used\\n\") cat(\"   - Include effect sizes and confidence intervals\\n\\n\")  cat(\"3. Clinical Context:\\n\") cat(\"   - Provide clinical interpretation of findings\\n\") cat(\"   - Discuss clinical significance vs statistical significance\\n\") cat(\"   - Include relevant reference ranges or cutpoints\\n\") cat(\"   - Consider real-world application\\n\\n\")  cat(\"4. Reproducibility:\\n\") cat(\"   - Document software versions\\n\") cat(\"   - Provide clear methods description\\n\") cat(\"   - Share analysis code when possible\\n\") cat(\"   - Include raw data summaries\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"jjstatsplot provides comprehensive statistical visualization tools essential modern clinical research pathology studies. integration statistical testing publication-ready graphics makes complex data analysis accessible clinical researchers maintaining scientific rigor.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"key-advantages","dir":"Articles","previous_headings":"Conclusion","what":"Key Advantages","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"Integrated Statistics: Automatic statistical testing visualization Clinical Focus: Designed healthcare research applications Publication Ready: High-quality graphics suitable journals User Friendly: Accessible jamovi interface Comprehensive: Covers major visualization needs","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-introduction.html","id":"next-steps","dir":"Articles","previous_headings":"Conclusion","what":"Next Steps","title":"jjStatsPlot 01: Statistical Visualization for Pathologists","text":"explore specific visualization techniques: Categorical Analysis: See detailed categorical plot vignettes Continuous Data: Explore advanced continuous data visualization Correlation Studies: Learn comprehensive correlation analysis Clinical Applications: Study real-world clinical research examples introduction provides foundation using jjstatsplot clinical research. Explore detailed vignettes specific techniques advanced applications.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"a-clinicians-guide-to-statistical-analysis-in-jamovi","dir":"Articles","previous_headings":"","what":"A Clinician’s Guide to Statistical Analysis in jamovi","title":"jamovi User Guide for ClinicoPath","text":"guide provides comprehensive introduction performing statistical analysis jamovi using ClinicoPath module. jamovi free open-source statistical spreadsheet provides user-friendly, point--click interface complex analyses. makes ideal pathologists, clinicians, researchers need analyze data without learning code.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"installing-the-clinicopath-module-in-jamovi","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi > Installation","what":"Installing the ClinicoPath Module in jamovi","title":"jamovi User Guide for ClinicoPath","text":"Open jamovi. Click Modules button (large + sign) top-right menu bar. Select jamovi library dropdown menu. search box, type ClinicoPath. Click Install button next ClinicoPath module. jamovi install module dependencies. installed, see module’s name appear main analysis ribbon. [Screenshot jamovi library showing ClinicoPath module “Install” button.] ***","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"a-complete-analysis-workflow-a-clinical-example","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi","what":"A Complete Analysis Workflow: A Clinical Example","title":"jamovi User Guide for ClinicoPath","text":"illustrate use ClinicoPath module, walk complete analysis clinical research question.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"the-clinical-scenario","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi > A Complete Analysis Workflow: A Clinical Example","what":"The Clinical Scenario","title":"jamovi User Guide for ClinicoPath","text":"researcher analyzing dataset patients undergone mammography screening. want answer following question: statistically significant difference age patients positive cancer diagnosis negative diagnosis? use breast_cancer_data dataset included ClinicoPath module answer question.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"step-1-load-the-data","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi > A Complete Analysis Workflow: A Clinical Example","what":"Step 1: Load the Data","title":"jamovi User Guide for ClinicoPath","text":"First, need load breast_cancer_data dataset. dataset included ClinicoPath module, can easily open jamovi. top-left menu (“hamburger” menu ☰), click File -> Open. file browser, navigate ClinicoPath module’s data folder. location folder varies depending operating system. shortcut click Examples dataset comes jamovi, navigate . Select breast_cancer_data.omv file. [Screenshot jamovi interface breast_cancer_data dataset loaded.] ***","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"step-2-perform-the-analysis-with-a-box-violin-plot","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi > A Complete Analysis Workflow: A Clinical Example","what":"Step 2: Perform the Analysis with a Box-Violin Plot","title":"jamovi User Guide for ClinicoPath","text":"best way visualize difference continuous variable (like age) two categorical groups (like cancer_status) box-violin plot. main analysis ribbon, click JJStatsPlot -> Categorical vs Continuous -> Box-Violin Plots (Groups). [Screenshot jamovi analysis ribbon showing path Box-Violin Plots.] *** Move age variable Dependent Variable box. Move cancer_status variable Grouping Variable box. [Screenshot analysis window showing variables assigned.] *** jamovi automatically generate plot statistical analysis.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"step-3-the-output-plot","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi > A Complete Analysis Workflow: A Clinical Example","what":"Step 3: The Output Plot","title":"jamovi User Guide for ClinicoPath","text":"plot generated jamovi:","code":"# Load the data data(\"breast_cancer_data\", package = \"ClinicoPath\")  # Create the plot jjbetweenstats(   data = breast_cancer_data,   dep = \"age\",   group = \"cancer_status\",   type = \"parametric\",            # Statistical test type   pairwise.comparisons = TRUE,    # Post-hoc comparisons   title = \"Age Distribution by Cancer Status\",   subtitle = \"Two-sample t-test with effect size\",   xlab = \"Cancer Status\",   ylab = \"Age (years)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"step-4-interpreting-the-plot-and-statistics","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi > A Complete Analysis Workflow: A Clinical Example","what":"Step 4: Interpreting the Plot and Statistics","title":"jamovi User Guide for ClinicoPath","text":"Now, interpret output. violin part (colored, shaded area) shows density data. can see Positive group wider distribution ages. box part (inside violin) shows summary statistics. thick line median age. box represents interquartile range (middle 50% patients). Visually, appears median age Positive group higher Negative group. t-test: plot shows results t-test: t(198) = -2.9, p = 0.004. p-value: p-value 0.004. Since less standard cutoff 0.05, can conclude statistically significant difference age two groups. Effect Size: plot also shows Cohen's d, measure effect size. , d = 0.41, typically considered small medium effect.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"step-5-reporting-the-results","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi > A Complete Analysis Workflow: A Clinical Example","what":"Step 5: Reporting the Results","title":"jamovi User Guide for ClinicoPath","text":"publishing findings, report descriptive statistics (mean standard deviation group) results t-test. example write : two-sample t-test conducted compare age patients positive negative cancer diagnoses. statistically significant difference age two groups (t(198) = -2.9, p = 0.004). mean age patients positive diagnosis (M = 55.4, SD = 12.5) significantly higher mean age patients negative diagnosis (M = 50.2, SD = 11.8). effect size small medium (Cohen's d = 0.41).","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"other-common-analyses","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi","what":"Other Common Analyses","title":"jamovi User Guide for ClinicoPath","text":"ClinicoPath module provides wide range analyses. general workflow : Select analysis ribbon. Assign variables. Customize options (e.g., change type statistical test, modify plot appearance). Interpret output.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"no-data-to-plot-error","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi > Troubleshooting","what":"“No data to plot” Error","title":"jamovi User Guide for ClinicoPath","text":"Check: Ensure variables selected correctly. Missing data: Variables missing values plotted. Variable type: Ensure variable types match analysis requirements (e.g., use categorical variable dependent variable continuous analysis).","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"statistical-test-failures","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi > Troubleshooting","what":"Statistical Test Failures","title":"jamovi User Guide for ClinicoPath","text":"Sample size: tests require minimum number data points group. Assumptions: statistical tests assumptions (e.g., normality). assumptions met, test may fail results may invalid. ClinicoPath module often provides non-parametric alternatives situations.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/01-jamovi-user-guide.html","id":"getting-help","dir":"Articles","previous_headings":"A Clinician’s Guide to Statistical Analysis in jamovi","what":"Getting Help","title":"jamovi User Guide for ClinicoPath","text":"ggstatsplot documentation: ClinicoPath module built excellent ggstatsplot R package. can find detailed documentation https://indrajeetpatil.github.io/ggstatsplot/. jamovi community: jamovi forum great place ask questions: https://forum.jamovi.org. GitHub issues: find bug feature request, can open issue ClinicoPath GitHub page: https://github.com/sbalci/ClinicoPathJamoviModule/issues.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/02-categorical-plots.html","id":"visualizing-categorical-data-with-bar-charts","dir":"Articles","previous_headings":"","what":"Visualizing Categorical Data with Bar Charts","title":"Visualizing Categorical Data with Bar Charts","text":"guide demonstrates visualize relationship two categorical variables using bar chart jamovi.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/02-categorical-plots.html","id":"the-clinical-scenario","dir":"Articles","previous_headings":"Visualizing Categorical Data with Bar Charts","what":"The Clinical Scenario","title":"Visualizing Categorical Data with Bar Charts","text":"researcher investigating effectiveness mammography screening tool. want answer following question: statistically significant association results mammogram actual cancer diagnosis? use breast_cancer_data dataset explore question.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/02-categorical-plots.html","id":"step-1-the-analysis","dir":"Articles","previous_headings":"Visualizing Categorical Data with Bar Charts","what":"Step 1: The Analysis","title":"Visualizing Categorical Data with Bar Charts","text":"Load breast_cancer_data.omv dataset jamovi. main analysis ribbon, click JJStatsPlot -> Categorical vs Categorical -> Bar Charts. [Screenshot jamovi analysis ribbon showing path Bar Charts.] *** Move mammography variable Dependent Variable box. Move cancer_status variable Grouping Variable box. [Screenshot analysis window showing variables assigned.] ***","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/02-categorical-plots.html","id":"step-2-the-output-plot","dir":"Articles","previous_headings":"Visualizing Categorical Data with Bar Charts","what":"Step 2: The Output Plot","title":"Visualizing Categorical Data with Bar Charts","text":"jamovi generate following bar chart, shows distribution mammography results patients without cancer diagnosis.","code":"# Load the data data(\"breast_cancer_data\", package = \"ClinicoPath\")  # Create the plot jjbarstats(   data = breast_cancer_data,   dep = \"mammography\",   group = \"cancer_status\",   title = \"Mammography Results by Cancer Status\",   subtitle = \"Chi-square test for independence\",   xlab = \"Cancer Status\",   ylab = \"Count\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/02-categorical-plots.html","id":"step-3-interpreting-the-plot-and-statistics","dir":"Articles","previous_headings":"Visualizing Categorical Data with Bar Charts","what":"Step 3: Interpreting the Plot and Statistics","title":"Visualizing Categorical Data with Bar Charts","text":"patients Negative cancer status, vast majority Negative mammogram. patients Positive cancer status, large proportion Positive mammogram. visual pattern suggests indeed association two variables. Chi-squared test: plot shows results test: χ²(1) = 45.8, p < 0.001. p-value: p-value less 0.001. highly significant result, far standard 0.05 cutoff. can confidently conclude statistically significant association mammography results cancer status. Effect Size: plot also shows Cramér’s V, measure strength association. , V = 0.48, considered moderate large effect size.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/02-categorical-plots.html","id":"step-4-reporting-the-results","dir":"Articles","previous_headings":"Visualizing Categorical Data with Bar Charts","what":"Step 4: Reporting the Results","title":"Visualizing Categorical Data with Bar Charts","text":"example report findings: chi-squared test independence performed examine association mammography results cancer status. statistically significant association two variables (χ²(1) = 45.8, p < 0.001). strength association moderate large (Cramér's V = 0.48). Patients positive cancer diagnosis significantly likely positive mammogram result.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/03-continuous-comparisons.html","id":"comparing-paired-data-with-within-subject-plots","dir":"Articles","previous_headings":"","what":"Comparing Paired Data with Within-Subject Plots","title":"Comparing Paired Data with Within-Subject Plots","text":"guide explains analyze paired data, --measurements, using Within-Subject Plots function jamovi.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/03-continuous-comparisons.html","id":"the-clinical-scenario","dir":"Articles","previous_headings":"Comparing Paired Data with Within-Subject Plots","what":"The Clinical Scenario","title":"Comparing Paired Data with Within-Subject Plots","text":"clinical researcher testing new drug. measured level specific biomarker blood 20 patients treatment one month treatment. want answer question: new drug cause statistically significant change biomarker level? “paired” “within-subject” design two measurements patient.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/03-continuous-comparisons.html","id":"step-1-prepare-the-data","dir":"Articles","previous_headings":"Comparing Paired Data with Within-Subject Plots","what":"Step 1: Prepare the Data","title":"Comparing Paired Data with Within-Subject Plots","text":"within-subject analysis jamovi, data needs long format. means row represents single observation. dataset three columns: patient_id: unique identifier patient. timepoint: categorical variable indicating time measurement (e.g., “” “”). biomarker_level: value biomarker measurement. can create structure data R:","code":"# Set a seed for reproducibility set.seed(123)  # Create a simulated dataset of 20 patients patient_id <- 1:20 biomarker_before <- rnorm(20, mean = 100, sd = 15) biomarker_after <- biomarker_before - rnorm(20, mean = 20, sd = 10) # Simulate a decrease  # Create a data frame in wide format wide_data <- data.frame(patient_id, biomarker_before, biomarker_after)  # Convert to long format for analysis long_data <- tidyr::pivot_longer(wide_data,                                  cols = c(\"biomarker_before\", \"biomarker_after\"),                                  names_to = \"timepoint\",                                  values_to = \"biomarker_level\")  # Clean up the timepoint labels long_data$timepoint <- factor(long_data$timepoint,                                levels = c(\"biomarker_before\", \"biomarker_after\"),                               labels = c(\"Before Treatment\", \"After Treatment\"))  # View the first few rows of the long-format data head(long_data)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/03-continuous-comparisons.html","id":"step-2-the-analysis-in-jamovi","dir":"Articles","previous_headings":"Comparing Paired Data with Within-Subject Plots","what":"Step 2: The Analysis in jamovi","title":"Comparing Paired Data with Within-Subject Plots","text":"Load long-format data jamovi. main analysis ribbon, click JJStatsPlot -> Continuous -> Within Subject. [Screenshot jamovi analysis ribbon showing path Within Subject plot.] *** Move timepoint variable X-axis box. Move biomarker_level variable Y-axis box. Move patient_id variable ID box. [Screenshot analysis window showing variables assigned.] ***","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/03-continuous-comparisons.html","id":"step-3-the-output-plot","dir":"Articles","previous_headings":"Comparing Paired Data with Within-Subject Plots","what":"Step 3: The Output Plot","title":"Comparing Paired Data with Within-Subject Plots","text":"jamovi generate following plot, shows change biomarker level patient.","code":"# Create the plot using jjwithinstats jjwithinstats(   data = long_data,   x = \"timepoint\",   y = \"biomarker_level\",   id = \"patient_id\",   paired = TRUE,   type = \"parametric\",   title = \"Biomarker Levels Before and After Treatment\",   subtitle = \"Paired t-test with individual trajectories\",   xlab = \"Timepoint\",   ylab = \"Biomarker Level\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/03-continuous-comparisons.html","id":"step-4-interpreting-the-plot-and-statistics","dir":"Articles","previous_headings":"Comparing Paired Data with Within-Subject Plots","what":"Step 4: Interpreting the Plot and Statistics","title":"Comparing Paired Data with Within-Subject Plots","text":"Plot: plot shows biomarker level patient two time points. lines connecting dots show trajectory individual patient. can see clear downward trend, patients lower biomarker level treatment. Statistics: jjwithinstats function performs paired t-test see change statistically significant. Paired t-test: plot shows results test: t(19) = 8.5, p < 0.001. p-value: p-value less 0.001, highly significant. can conclude drug caused statistically significant decrease biomarker level. Effect Size: plot shows Cohen’s d = 2.1, large effect size.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/03-continuous-comparisons.html","id":"step-5-reporting-the-results","dir":"Articles","previous_headings":"Comparing Paired Data with Within-Subject Plots","what":"Step 5: Reporting the Results","title":"Comparing Paired Data with Within-Subject Plots","text":"example report findings: paired-samples t-test conducted evaluate impact new drug biomarker levels. statistically significant decrease biomarker levels treatment (M = 98.1, SD = 14.2) treatment (M = 78.3, SD = 16.8), t(19) = 8.5, p < 0.001. effect size large (Cohen’s d = 2.1), indicating substantial treatment effect.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/04-continuous-comparisons-alt.html","id":"between-group-comparisons-with-jjbetweenstats","dir":"Articles","previous_headings":"","what":"Between-group comparisons with jjbetweenstats()","title":"Continuous Variable Comparisons","text":"jjbetweenstats() function creates box-violin plots compare continuous variables independent groups. automatically performs appropriate statistical tests (parametric, non-parametric, robust, Bayesian) displays results.","code":"# Underlying function that jjbetweenstats() wraps ggstatsplot::ggbetweenstats(   data = mtcars,   x = cyl,   y = mpg,   type = \"parametric\",   pairwise.comparisons = TRUE,   pairwise.display = \"significant\",   centrality.plotting = TRUE,   title = \"Fuel Efficiency by Number of Cylinders\",   xlab = \"Number of Cylinders\",   ylab = \"Miles per Gallon\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/04-continuous-comparisons-alt.html","id":"customizing-the-analysis-type","dir":"Articles","previous_headings":"Between-group comparisons with jjbetweenstats()","what":"Customizing the analysis type","title":"Continuous Variable Comparisons","text":"can choose different types statistical analyses:","code":"# Non-parametric analysis with Kruskal-Wallis test ggstatsplot::ggbetweenstats(   data = mtcars,   x = gear,   y = hp,   type = \"nonparametric\",   centrality.plotting = TRUE,   centrality.type = \"nonparametric\",   title = \"Horsepower Distribution by Number of Gears (Non-parametric)\",   xlab = \"Number of Gears\",   ylab = \"Horsepower\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/04-continuous-comparisons-alt.html","id":"histograms-with-jjhistostats","dir":"Articles","previous_headings":"","what":"Histograms with jjhistostats()","title":"Continuous Variable Comparisons","text":"jjhistostats() function creates histograms overlaid density curves statistical test results specified test value.","code":"# Underlying function that jjhistostats() wraps ggstatsplot::gghistostats(   data = mtcars,   x = mpg,   type = \"parametric\",   normal.curve = TRUE,   binwidth = 2,   title = \"Distribution of Fuel Efficiency\",   xlab = \"Miles per Gallon\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/04-continuous-comparisons-alt.html","id":"grouped-histograms","dir":"Articles","previous_headings":"Histograms with jjhistostats()","what":"Grouped histograms","title":"Continuous Variable Comparisons","text":"can also create histograms split grouping variable:","code":"# Grouped histogram ggstatsplot::grouped_gghistostats(   data = mtcars,   x = mpg,   grouping.var = am,   binwidth = 3,   title.prefix = \"Transmission Type\",   normal.curve = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/04-continuous-comparisons-alt.html","id":"within-group-comparisons-with-jjwithinstats","dir":"Articles","previous_headings":"","what":"Within-group comparisons with jjwithinstats()","title":"Continuous Variable Comparisons","text":"jjwithinstats() function designed repeated measures paired comparisons. shows individual trajectories performs appropriate paired tests.","code":"# Create paired data for demonstration library(tidyr) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  # Simulate paired measurements (e.g., before and after treatment) paired_data <- data.frame(   id = rep(1:16, 2),   condition = rep(c(\"Before\", \"After\"), each = 16),   value = c(mtcars$mpg[1:16], mtcars$mpg[1:16] + rnorm(16, mean = 2, sd = 1)) )  # Underlying function that jjwithinstats() wraps ggstatsplot::ggwithinstats(   data = paired_data,   x = condition,   y = value,   paired = TRUE,   id = id,   type = \"parametric\",   pairwise.comparisons = TRUE,   title = \"Paired Comparison of Fuel Efficiency\",   xlab = \"Measurement Time\",   ylab = \"Miles per Gallon\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/04-continuous-comparisons-alt.html","id":"dot-plots-with-jjdotplotstats","dir":"Articles","previous_headings":"","what":"Dot plots with jjdotplotstats()","title":"Continuous Variable Comparisons","text":"jjdotplotstats() function creates Cleveland dot plots showing group means medians confidence intervals. particularly useful comparing multiple groups want emphasize central tendency uncertainty.","code":"# Underlying function that jjdotplotstats() wraps ggstatsplot::ggdotplotstats(   data = mtcars,   x = hp,   y = cyl,   type = \"parametric\",   centrality.plotting = TRUE,   title = \"Mean Horsepower by Number of Cylinders\",   xlab = \"Horsepower\",   ylab = \"Number of Cylinders\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/04-continuous-comparisons-alt.html","id":"statistical-details","dir":"Articles","previous_headings":"","what":"Statistical details","title":"Continuous Variable Comparisons","text":"functions provide: Parametric: t-test, ANOVA, paired t-test Non-parametric: Mann-Whitney U, Kruskal-Wallis, Wilcoxon signed-rank Robust: Yuen’s trimmed means test, heteroscedastic ANOVA Bayesian: Bayes Factor analysis Cohen’s d, Hedge’s g (t-tests) Eta-squared, omega-squared (ANOVA) r (non-parametric tests) Pairwise comparisons: comparing multiple groups, post-hoc pairwise comparisons available p-value adjustment methods.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/04-continuous-comparisons-alt.html","id":"usage-in-jamovi","dir":"Articles","previous_headings":"","what":"Usage in jamovi","title":"Continuous Variable Comparisons","text":"functions integrated jamovi interface provide: Point--click variable selection Interactive options customizing plots Automatic handling missing data Export options plots results use jamovi: Install jjstatsplot module jamovi library Load dataset Navigate JJStatsPlot → Continuous menu Select appropriate analysis Configure options user-friendly interface","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/04-continuous-comparisons-alt.html","id":"advanced-customization","dir":"Articles","previous_headings":"","what":"Advanced customization","title":"Continuous Variable Comparisons","text":"jamovi interface provides common options, R users can access additional customization underlying ggstatsplot functions:","code":"# Example with extensive customization ggstatsplot::ggbetweenstats(   data = mtcars,   x = am,   y = mpg,   type = \"parametric\",   # Visual customization   violin.args = list(width = 0.5, alpha = 0.2),   boxplot.args = list(width = 0.2, alpha = 0.5),   point.args = list(alpha = 0.5, size = 3, position = ggplot2::position_jitter(width = 0.1)),   # Statistical options   conf.level = 0.99,   effsize.type = \"unbiased\",   # Theming   ggtheme = ggplot2::theme_minimal(),   # Labels   title = \"Fuel Efficiency: Manual vs Automatic Transmission\",   subtitle = \"99% confidence intervals shown\",   xlab = \"Transmission Type\",   ylab = \"Miles per Gallon\",   caption = \"Data: Motor Trend Car Road Tests\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/04-continuous-comparisons-alt.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Continuous Variable Comparisons","text":"continuous comparison functions jjstatsplot provide: Comprehensive statistical analyses minimal code Publication-ready visualizations Automatic selection appropriate statistical tests Integration jamovi’s graphical interface Flexibility advanced R users tools make easy perform rigorous statistical comparisons creating informative visualizations suitable exploration presentation.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/05-correlations-scatterplots.html","id":"exploring-relationships-with-scatter-plots","dir":"Articles","previous_headings":"","what":"Exploring Relationships with Scatter Plots","title":"Exploring Relationships with Scatter Plots","text":"guide demonstrates explore relationship two continuous variables using scatter plot.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/05-correlations-scatterplots.html","id":"the-clinical-scenario","dir":"Articles","previous_headings":"Exploring Relationships with Scatter Plots","what":"The Clinical Scenario","title":"Exploring Relationships with Scatter Plots","text":"pathologist studying malignant melanoma wants know relationship patient's age thickness tumor. research question : statistically significant correlation patient age tumor thickness melanoma? use melanoma dataset, included boot package re-exported ClinicoPath, investigate question.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/05-correlations-scatterplots.html","id":"step-1-the-analysis-in-jamovi","dir":"Articles","previous_headings":"Exploring Relationships with Scatter Plots","what":"Step 1: The Analysis in jamovi","title":"Exploring Relationships with Scatter Plots","text":"Load melanoma dataset jamovi. main analysis ribbon, click JJStatsPlot -> Continuous vs Continuous -> Scatter Plot. [Screenshot jamovi analysis ribbon showing path Scatter Plot.] *** Move age variable X-axis box. Move thickness variable Y-axis box. [Screenshot analysis window showing variables assigned.] ***","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/05-correlations-scatterplots.html","id":"step-2-the-output-plot","dir":"Articles","previous_headings":"Exploring Relationships with Scatter Plots","what":"Step 2: The Output Plot","title":"Exploring Relationships with Scatter Plots","text":"jamovi generate following scatter plot, shows relationship age tumor thickness.","code":"# Load the data data(\"melanoma\", package = \"boot\")  # Create the plot jjscatterstats(   data = melanoma,   x = \"age\",   y = \"thickness\",   type = \"parametric\", # Use Pearson correlation   title = \"Correlation between Age and Tumor Thickness in Melanoma\",   subtitle = \"Pearson correlation with 95% confidence interval\",   xlab = \"Age (years)\",   ylab = \"Tumor Thickness (mm)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/05-correlations-scatterplots.html","id":"step-3-interpreting-the-plot-and-statistics","dir":"Articles","previous_headings":"Exploring Relationships with Scatter Plots","what":"Step 3: Interpreting the Plot and Statistics","title":"Exploring Relationships with Scatter Plots","text":"Plot: point plot represents single patient. plot shows lot variability tumor thickness ages. blue line regression line, line best fit summarizes relationship two variables. line slightly upward-sloping, suggests weak positive correlation. Statistics: jjscatterstats function performs correlation test see relationship statistically significant. Correlation test: plot shows results Pearson correlation test: r = 0.13, p = 0.06. Correlation coefficient (r): value r 0.13, indicates weak positive correlation. r value close 0 means little linear relationship. p-value: p-value 0.06. slightly standard cutoff 0.05. Therefore, conclude statistically significant linear relationship age tumor thickness dataset.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/05-correlations-scatterplots.html","id":"step-4-reporting-the-results","dir":"Articles","previous_headings":"Exploring Relationships with Scatter Plots","what":"Step 4: Reporting the Results","title":"Exploring Relationships with Scatter Plots","text":"example report findings: Pearson correlation run determine relationship patient age tumor thickness 205 patients malignant melanoma. weak, non-significant positive correlation two variables (r = 0.13, p = 0.06). suggests statistically significant linear relationship age tumor thickness patient cohort.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"introduction-to-bbc-style-data-visualization","dir":"Articles","previous_headings":"","what":"Introduction to BBC-Style Data Visualization","title":"BBC-Style Data Visualization - Professional News Graphics","text":"BBC Visual Data Journalism team established world-class standards data visualization news media. approach emphasizes clarity, accessibility, professional presentation serves diverse audiences across digital broadcast platforms.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"design-philosophy","dir":"Articles","previous_headings":"Introduction to BBC-Style Data Visualization > What Makes BBC Visualization Special?","what":"Design Philosophy","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Clarity First: Information immediately understandable Accessibility: Charts must work audiences, including visual impairments Professional Consistency: Every graphic follows design standards Editorial Integrity: Data presentation supports, overshadows, journalism","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"visual-standards","dir":"Articles","previous_headings":"Introduction to BBC-Style Data Visualization > What Makes BBC Visualization Special?","what":"Visual Standards","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Typography: Helvetica font family specific size hierarchy Color Palette: Carefully selected colors work across media Layout: Strategic use white space grid systems Branding: Subtle consistent BBC design elements","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"when-to-use-bbc-style-visualization","dir":"Articles","previous_headings":"Introduction to BBC-Style Data Visualization","what":"When to Use BBC-Style Visualization","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Perfect : - News articles reports requiring professional graphics - Publications aimed general audiences - Data stories requiring clear, accessible presentation - Corporate communications following media standards - Academic presentations requiring publication quality Key Advantages: - Instant professional credibility - Proven accessibility readability - Consistent cross-platform appearance - Editorial-quality presentation standards","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"load-required-libraries","dir":"Articles","previous_headings":"Getting Started","what":"Load Required Libraries","title":"BBC-Style Data Visualization - Professional News Graphics","text":"","code":"library(jjstatsplot) library(dplyr) library(ggplot2)  # Load example datasets for BBC visualization data(\"economic_indicators_data\") data(\"election_survey_data\")  data(\"health_statistics_data\") data(\"sports_performance_data\") data(\"climate_environment_data\") data(\"education_attainment_data\") data(\"digital_technology_data\")  # Display overview of available data cat(\"📊 BBC Example Datasets Loaded:\\n\") cat(\"   - economic_indicators_data: GDP, unemployment, inflation (\", nrow(economic_indicators_data), \" obs)\\n\") cat(\"   - election_survey_data: Political polling across demographics (\", nrow(election_survey_data), \" obs)\\n\") cat(\"   - health_statistics_data: NHS waiting times, vaccination rates (\", nrow(health_statistics_data), \" obs)\\n\") cat(\"   - sports_performance_data: Premier League team statistics (\", nrow(sports_performance_data), \" obs)\\n\") cat(\"   - climate_environment_data: Temperature, emissions trends (\", nrow(climate_environment_data), \" obs)\\n\") cat(\"   - education_attainment_data: GCSE, university outcomes (\", nrow(education_attainment_data), \" obs)\\n\") cat(\"   - digital_technology_data: Device ownership, digital skills (\", nrow(digital_technology_data), \" obs)\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"basic-bbc-workflow","dir":"Articles","previous_headings":"Getting Started","what":"Basic BBC Workflow","title":"BBC-Style Data Visualization - Professional News Graphics","text":"BBC visualization workflow jamovi follows steps: Data Selection: Choose appropriate variables message Chart Type: Select visualization type best represents data BBC Styling: Apply authentic BBC design standards Customization: Add titles, source attribution, refinements Export: Generate publication-ready output","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"column-charts---economic-comparisons","dir":"Articles","previous_headings":"Core Chart Types and Examples","what":"Column Charts - Economic Comparisons","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Column charts BBC’s preferred method comparing values across categories, especially economic indicators. Key BBC Design Elements: - Single color (BBC Blue) clean, professional appearance - Clear, descriptive title tells story - Subtitle providing additional context - Proper source attribution - Horizontal gridlines easy value reading","code":"# Basic BBC-style economic comparison bbcplots(   data = economic_indicators_data,   y_var = \"gdp_growth\",   x_var = \"region\",    chart_type = \"column\",   bbc_colors = \"bbc_blue\",   title_text = \"GDP Growth Varies Significantly Across UK Regions\",   subtitle_text = \"Northern regions show stronger economic performance in Q1 2024\",   source_text = \"Source: ONS Economic Statistics\",   y_axis_title = \"GDP Growth (%)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"grouped-charts---political-analysis","dir":"Articles","previous_headings":"Core Chart Types and Examples","what":"Grouped Charts - Political Analysis","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Grouped charts excel showing breakdowns within categories, essential election coverage. BBC Political Coverage Features: - Multi-color palette party differentiation - Clear demographic breakdown - Sample size transparency - Neutral, informative language titles","code":"# Party support by age group - classic BBC election analysis bbcplots(   data = election_survey_data,   y_var = \"voting_likelihood\",    x_var = \"age_group\",   group_var = \"party_support\",   chart_type = \"grouped_column\",   bbc_colors = \"multi_color\",   title_text = \"Voting Enthusiasm Varies by Age and Party Affiliation\",   subtitle_text = \"Younger voters show higher likelihood scores across all parties\",   source_text = \"Source: Political Polling Survey, 2024\",   show_sample_sizes = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"line-charts---health-trends","dir":"Articles","previous_headings":"Core Chart Types and Examples","what":"Line Charts - Health Trends","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Line charts effectively communicate trends time, crucial health reporting. Health Coverage Standards: - BBC Teal health-related content - Clear temporal narrative titles - Statistical analysis integration - Contextual subtitle explaining key findings","code":"# NHS waiting times over time - BBC health coverage style bbcplots(   data = health_statistics_data,   y_var = \"routine_surgery_wait\",   x_var = \"date\",   group_var = \"health_system\",    chart_type = \"line\",   bbc_colors = \"bbc_teal\",   title_text = \"NHS Surgery Waiting Times Show Clear COVID-19 Impact\",   subtitle_text = \"Both England and Scotland experienced significant delays during 2020-2021\",   source_text = \"Source: NHS Performance Statistics\",   y_axis_title = \"Waiting Time (weeks)\",   statistical_annotations = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"point-plots---sports-rankings","dir":"Articles","previous_headings":"Core Chart Types and Examples","what":"Point Plots - Sports Rankings","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Point plots work excellently rankings performance comparisons. Sports Coverage Elements: - BBC Orange sports content differentiation - Performance narrative titles - Value labels precise comparisons - Clear ranking implications","code":"# Premier League performance analysis bbcplots(   data = sports_performance_data,   y_var = \"points\",   x_var = \"team\",   chart_type = \"point\",   bbc_colors = \"bbc_orange\",   title_text = \"Manchester City Dominates Premier League 2022-23 Season\",   subtitle_text = \"Clear gap emerges between top six and mid-table teams\",   source_text = \"Source: Premier League Official Statistics\",   show_values = TRUE,   value_position = \"above\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"area-charts---environmental-trends","dir":"Articles","previous_headings":"Core Chart Types and Examples","what":"Area Charts - Environmental Trends","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Area charts effectively show cumulative changes environmental impacts. Environmental Coverage Standards: - Multi-color approach regional comparisons - Faceting clear regional stories - Scientific accuracy language - Long-term perspective titles","code":"# Climate change visualization - BBC environment reporting bbcplots(   data = climate_environment_data,   y_var = \"temperature_anomaly\",   x_var = \"year\",   group_var = \"region\",   chart_type = \"area\",    bbc_colors = \"multi_color\",   title_text = \"Arctic Warming Accelerates Above Global Average\",   subtitle_text = \"Temperature anomalies show dramatic regional variation since 1990\",   source_text = \"Source: Global Climate Monitoring Network\",   facet_var = \"region\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"statistical-integration","dir":"Articles","previous_headings":"Advanced Features and Customization","what":"Statistical Integration","title":"BBC-Style Data Visualization - Professional News Graphics","text":"BBC charts often include statistical analysis support editorial conclusions. Statistical Features: - Automatic test selection based data structure - Effect size calculations (eta-squared, Cohen’s d) - Confidence interval displays - Sample size transparency","code":"# Education achievement with statistical analysis bbcplots(   data = education_attainment_data,   y_var = \"literacy_score\",   x_var = \"school_type\",   chart_type = \"column\",   bbc_colors = \"bbc_blue\",    title_text = \"Educational Achievement Gaps Persist Across School Types\",   subtitle_text = \"Independent schools maintain significant advantage in literacy scores\",   statistical_annotations = TRUE,   stat_method = \"anova\",   confidence_level = 0.95,   show_sample_sizes = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"digital-divide-analysis","dir":"Articles","previous_headings":"Advanced Features and Customization","what":"Digital Divide Analysis","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Technology coverage requires careful demographic breakdown.","code":"# Digital skills by age group - technology coverage bbcplots(   data = digital_technology_data,   y_var = \"digital_skills_rating\",   x_var = \"age_group\",   chart_type = \"column\",   bbc_colors = \"bbc_teal\",   title_text = \"Digital Skills Gap Widens Dramatically with Age\",   subtitle_text = \"Over-65s report significantly lower confidence with technology\",   source_text = \"Source: UK Digital Skills Survey 2024\",   show_values = TRUE,   statistical_annotations = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"publication-export","dir":"Articles","previous_headings":"Advanced Features and Customization","what":"Publication Export","title":"BBC-Style Data Visualization - Professional News Graphics","text":"BBC standards require specific export configurations different media. Export Features: - Standard BBC dimensions (640×450px) - Professional branding elements - Reproducible R code generation - Multiple format support","code":"# Publication-ready export with full BBC branding bbcplots(   data = economic_indicators_data,   y_var = \"unemployment_rate\",    x_var = \"region\",   chart_type = \"horizontal_bar\",   bbc_colors = \"bbc_orange\",   title_text = \"Northern England Maintains Lower Unemployment Rates\",   subtitle_text = \"Regional employment patterns remain stable through 2024\",   source_text = \"Source: ONS Labour Market Statistics\",      # Export settings   export_finalized = TRUE,   chart_width = 640,   chart_height = 450,   add_branding = TRUE,      # Typography   font_family = \"Helvetica\",   left_align_title = TRUE )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"primary-colors","dir":"Articles","previous_headings":"BBC Design Standards Reference > Color Guidelines","what":"Primary Colors","title":"BBC-Style Data Visualization - Professional News Graphics","text":"BBC Blue (#1380A1): Primary brand color, use main data series BBC Orange (#FAAB18): Secondary brand color, ideal highlighting BBC Teal (#007f7f): Tertiary color, excellent health/environment topics BBC Gray (#333333): Neutral color, use supporting elements","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"multi-color-palette","dir":"Articles","previous_headings":"BBC Design Standards Reference > Color Guidelines","what":"Multi-Color Palette","title":"BBC-Style Data Visualization - Professional News Graphics","text":"data multiple categories, BBC provides carefully balanced palette: - Primary: BBC Blue (#1380A1) - Secondary: BBC Orange (#FAAB18) - Tertiary: BBC Teal (#007f7f) - Quaternary: BBC Gray (#333333) - Additional: Deep Red (#990000), Forest Green (#007A54)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"color-application-rules","dir":"Articles","previous_headings":"BBC Design Standards Reference > Color Guidelines","what":"Color Application Rules","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Single Series: Use BBC Blue consistency Two Series: BBC Blue + BBC Orange contrast Multiple Series: Use full multi-color palette Highlighting: BBC Orange emphasis Neutrality: BBC Gray supporting data","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"font-hierarchy","dir":"Articles","previous_headings":"BBC Design Standards Reference > Typography Standards","what":"Font Hierarchy","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Main Title: 28pt Helvetica Bold Subtitle: 22pt Helvetica Regular Body Text: 18pt Helvetica Regular Caption/Source: 14pt Helvetica Regular","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"text-guidelines","dir":"Articles","previous_headings":"BBC Design Standards Reference > Typography Standards","what":"Text Guidelines","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Left-align text elements (BBC standard) Use sentence case titles Keep titles descriptive informative Subtitles add context, repeat title Always include source attribution","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"grid-system","dir":"Articles","previous_headings":"BBC Design Standards Reference > Layout Principles","what":"Grid System","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Horizontal gridlines (#cbcbcb color) vertical gridlines (reduces visual clutter) Generous white space around elements Standard 640×450px dimensions digital","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"legend-positioning","dir":"Articles","previous_headings":"BBC Design Standards Reference > Layout Principles","what":"Legend Positioning","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Top position BBC standard Remove legend titles (rely clear variable names) Use consistent color coding across related charts","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"economic-reporting","dir":"Articles","previous_headings":"Practical Applications > News Story Integration","what":"Economic Reporting","title":"BBC-Style Data Visualization - Professional News Graphics","text":"","code":"# Quarterly economic review - typical BBC business story economic_summary <- economic_indicators_data %>%   filter(quarter == \"Q1 2024\") %>%   arrange(desc(gdp_growth))  bbcplots(   data = economic_summary,   y_var = \"gdp_growth\",   x_var = \"region\",   chart_type = \"column\",    bbc_colors = \"bbc_blue\",   title_text = \"Northern Regions Lead UK Economic Recovery\",   subtitle_text = \"GDP growth reaches 2.2% in North, outpacing national average\",   source_text = \"Source: ONS Quarterly Economic Statistics, Q1 2024\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"health-crisis-communication","dir":"Articles","previous_headings":"Practical Applications > News Story Integration","what":"Health Crisis Communication","title":"BBC-Style Data Visualization - Professional News Graphics","text":"","code":"# Vaccination campaign progress - public health messaging vaccination_latest <- health_statistics_data %>%   filter(year == 2024, month == 5) %>%   arrange(desc(vaccination_rate))  bbcplots(   data = vaccination_latest,   y_var = \"vaccination_rate\",   x_var = \"health_system\",   chart_type = \"column\",   bbc_colors = \"bbc_teal\",   title_text = \"Scotland Achieves 99% Vaccination Coverage\",   subtitle_text = \"Both UK health systems exceed WHO targets for population immunity\",   source_text = \"Source: UK Health Security Agency, May 2024\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"election-night-coverage","dir":"Articles","previous_headings":"Practical Applications > News Story Integration","what":"Election Night Coverage","title":"BBC-Style Data Visualization - Professional News Graphics","text":"","code":"# Vote share by demographic - election analysis party_age_summary <- election_survey_data %>%   count(age_group, party_support) %>%   group_by(age_group) %>%   mutate(percentage = n / sum(n) * 100)  bbcplots(   data = party_age_summary,   y_var = \"percentage\",   x_var = \"age_group\",   group_var = \"party_support\",   chart_type = \"stacked_column\",   bbc_colors = \"multi_color\",   title_text = \"Labour Leads Across All Age Groups Except 65+\",   subtitle_text = \"Generational divide remains key factor in voting preferences\",   source_text = \"Source: BBC Election Survey, 2024\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"climate-reporting","dir":"Articles","previous_headings":"Practical Applications > Scientific Communication","what":"Climate Reporting","title":"BBC-Style Data Visualization - Professional News Graphics","text":"","code":"# Long-term climate trends - environmental journalism recent_climate <- climate_environment_data %>%   filter(year >= 2020) %>%   group_by(region) %>%   summarise(avg_temp_anomaly = mean(temperature_anomaly), .groups = 'drop')  bbcplots(   data = recent_climate,   y_var = \"avg_temp_anomaly\",   x_var = \"region\",   chart_type = \"column\",   bbc_colors = \"bbc_orange\",   title_text = \"Arctic Warming Reaches 3°C Above Historical Average\",   subtitle_text = \"2020-2023 temperature data confirms accelerating regional climate change\",   source_text = \"Source: Global Climate Research Network\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"visual-elements","dir":"Articles","previous_headings":"Quality Assurance and Validation > Chart Review Checklist","what":"Visual Elements","title":"BBC-Style Data Visualization - Professional News Graphics","text":"✅ Appropriate BBC color scheme applied ✅ Helvetica font family (appropriate fallback) ✅ Correct font sizes (28pt title, 22pt subtitle, 18pt body) ✅ Horizontal gridlines ✅ Clean, uncluttered layout","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"content-standards","dir":"Articles","previous_headings":"Quality Assurance and Validation > Chart Review Checklist","what":"Content Standards","title":"BBC-Style Data Visualization - Professional News Graphics","text":"✅ Descriptive, informative title ✅ Contextual subtitle adding value ✅ Proper source attribution ✅ Appropriate chart type data ✅ Statistical accuracy verified","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"accessibility-standards","dir":"Articles","previous_headings":"Quality Assurance and Validation > Chart Review Checklist","what":"Accessibility Standards","title":"BBC-Style Data Visualization - Professional News Graphics","text":"✅ High contrast colors (WCAG AA compliance) ✅ Information conveyed color alone ✅ Alternative text capability ✅ Readable font sizes ✅ Logical reading order","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"common-issues-and-solutions","dir":"Articles","previous_headings":"Quality Assurance and Validation > Error Prevention","what":"Common Issues and Solutions","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Problem: Colors don’t match BBC standards Problem: Typography inconsistencies Problem: Cluttered chart layout","code":"# Solution: Use exact BBC color codes bbc_colors = \"bbc_blue\"  # Not generic \"blue\" custom_colors = \"#1380A1, #FAAB18\"  # Exact hex codes # Solution: Specify BBC typography standards font_family = \"Helvetica\" left_align_title = TRUE # Solution: Apply BBC minimalist principles horizontal_gridlines = TRUE vertical_gridlines = FALSE legend_position = \"top\""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"large-dataset-handling","dir":"Articles","previous_headings":"Quality Assurance and Validation > Performance Optimization","what":"Large Dataset Handling","title":"BBC-Style Data Visualization - Professional News Graphics","text":"","code":"# For large datasets, pre-process for efficiency large_dataset_summary <- large_data %>%   group_by(category) %>%   summarise(     mean_value = mean(value, na.rm = TRUE),     n = n(),     .groups = 'drop'   ) %>%   arrange(desc(mean_value))  # Then visualize the summary bbcplots(data = large_dataset_summary, ...)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"export-optimization","dir":"Articles","previous_headings":"Quality Assurance and Validation > Performance Optimization","what":"Export Optimization","title":"BBC-Style Data Visualization - Professional News Graphics","text":"","code":"# Standard BBC dimensions for web chart_width = 640 chart_height = 450  # Higher resolution for print chart_width = 1280   chart_height = 900"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"recommended-analysis-sequence","dir":"Articles","previous_headings":"Integration with ClinicoPath Workflow","what":"Recommended Analysis Sequence","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Data Exploration: Use ClinicoPath descriptive modules initial analysis Statistical Analysis: Apply appropriate statistical tests BBC Visualization: Create publication-ready charts bbcplots Editorial Review: Ensure charts support journalistic narrative Publication: Export BBC standards various media","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"statistical-foundation","dir":"Articles","previous_headings":"Integration with ClinicoPath Workflow > Complement with Other Modules","what":"Statistical Foundation","title":"BBC-Style Data Visualization - Professional News Graphics","text":"","code":"# Step 1: Descriptive analysis tableone(data = mydata, vars = c(\"outcome\", \"predictor\"))  # Step 2: Statistical testing  correlation(data = mydata, vars = c(\"var1\", \"var2\"))  # Step 3: BBC visualization bbcplots(data = mydata, y_var = \"outcome\", x_var = \"predictor\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"advanced-analysis-integration","dir":"Articles","previous_headings":"Integration with ClinicoPath Workflow > Complement with Other Modules","what":"Advanced Analysis Integration","title":"BBC-Style Data Visualization - Professional News Graphics","text":"","code":"# Combine with survival analysis survival(data = mydata, time = \"time\", event = \"event\")  # Visualize results with BBC styling bbcplots(data = survival_summary, ...)"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"font-issues","dir":"Articles","previous_headings":"Troubleshooting and Best Practices > Common Challenges","what":"Font Issues","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Problem: Helvetica available system Solution: bbcplots automatically falls back Arial, system default Recommendation: Install Helvetica optimal BBC consistency","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"data-format-issues","dir":"Articles","previous_headings":"Troubleshooting and Best Practices > Common Challenges","what":"Data Format Issues","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Problem: Variables recognized correctly Solution: Ensure categorical variables factors, numeric variables numeric Prevention: Use ClinicoPath data checking modules first","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"color-accessibility","dir":"Articles","previous_headings":"Troubleshooting and Best Practices > Common Challenges","what":"Color Accessibility","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Problem: Charts accessible colorblind users Solution: BBC colors specifically chosen accessibility Enhancement: Use pattern fills direct labeling additional clarity","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"editorial-guidelines","dir":"Articles","previous_headings":"Troubleshooting and Best Practices > Professional Tips","what":"Editorial Guidelines","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Lead story: Title communicate key finding Support context: Subtitle provides necessary background Credit sources: Always include proper attribution Maintain neutrality: Let data speak, avoid loaded language","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"technical-excellence","dir":"Articles","previous_headings":"Troubleshooting and Best Practices > Professional Tips","what":"Technical Excellence","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Data accuracy: Verify calculations independently Visual clarity: Remove unnecessary elements Consistent styling: Use BBC standards across charts Quality assurance: Review charts fresh eyes publication","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"BBC-Style Data Visualization - Professional News Graphics","text":"BBC-style data visualization represents gold standard professional, accessible, editorially sound graphics. ClinicoPath bbcplots module brings world-class standards jamovi users, enabling creation publication-ready charts meet highest journalistic scientific standards.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"key-takeaways","dir":"Articles","previous_headings":"Conclusion","what":"Key Takeaways","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Design Matters: Professional appearance enhances credibility comprehension Accessibility First: BBC standards ensure charts work audiences Editorial Integrity: Visualization support, replace, good analysis Consistency Builds Trust: Standardized approach across graphics Source Transparency: Always credit data sources appropriately","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/06-BBC-style-data-visualization.html","id":"when-bbc-style-changes-practice","dir":"Articles","previous_headings":"Conclusion","what":"When BBC Style Changes Practice","title":"BBC-Style Data Visualization - Professional News Graphics","text":"Elevates presentation quality amateur professional standards Ensures accessibility diverse audiences including disabilities Provides editorial consistency across organizational communications Builds public trust transparent, honest data presentation Enables cross-platform use web broadcast print media ClinicoPath bbcplots module democratizes access world-class visualization standards, ensuring quality data presentation available researchers, journalists, communicators working jamovi. comprehensive guide demonstrates full capabilities BBC-style data visualization ClinicoPath module, providing users tools knowledge needed create professional, accessible, editorially sound graphics meet highest standards visual journalism.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Advanced Bar Charts - 7 Professional Approaches","text":"advancedbarplot module provides 7 distinct professional approaches bar chart visualization, optimized different use cases clinical research, data presentation, publication. comprehensive guide demonstrates approaches histopathology dataset.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"key-features","dir":"Articles","previous_headings":"Overview","what":"Key Features","title":"Advanced Bar Charts - 7 Professional Approaches","text":"7 Chart Approaches: basic exploration publication-ready designs Professional Styling: BBC News GraphPad Prism authentic themes Statistical Integration: Built-statistical tests annotations 26+ Color Palettes: Including BBC colors Prism palettes Interactive Options: Plotly integration web-based exploration Export Optimization: Publication presentation-ready outputs","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"dataset-overview","dir":"Articles","previous_headings":"","what":"Dataset Overview","title":"Advanced Bar Charts - 7 Professional Approaches","text":"’ll use comprehensive histopathology dataset throughout guide:","code":"# Load the histopathology dataset data(\"histopathology\")  # Dataset structure str(histopathology) #> spc_tbl_ [250 × 38] (S3: spec_tbl_df/tbl_df/tbl/data.frame) #>  $ ID                  : num [1:250] 1 2 3 4 5 6 7 8 9 10 ... #>  $ Name                : chr [1:250] \"Tonisia\" \"Daniyah\" \"Naviana\" \"Daerion\" ... #>  $ Sex                 : chr [1:250] \"Male\" \"Female\" \"Male\" \"Male\" ... #>  $ Age                 : num [1:250] 27 36 65 51 58 53 33 26 25 68 ... #>  $ Race                : chr [1:250] \"White\" \"White\" \"White\" \"White\" ... #>  $ PreinvasiveComponent: chr [1:250] \"Present\" \"Absent\" \"Absent\" \"Absent\" ... #>  $ LVI                 : chr [1:250] \"Present\" \"Absent\" \"Absent\" \"Present\" ... #>  $ PNI                 : chr [1:250] \"Absent\" \"Absent\" \"Absent\" \"Absent\" ... #>  $ LastFollowUpDate    : chr [1:250] \"2019.10.22 00:00:00\" \"2019.06.22 00:00:00\" \"2019.08.22 00:00:00\" \"2019.03.22 00:00:00\" ... #>  $ Death               : chr [1:250] \"YANLIŞ\" \"DOĞRU\" \"DOĞRU\" \"YANLIŞ\" ... #>  $ Group               : chr [1:250] \"Control\" \"Treatment\" \"Control\" \"Treatment\" ... #>  $ Grade               : num [1:250] 2 2 1 3 2 2 1 2 3 3 ... #>  $ TStage              : num [1:250] 4 4 4 4 1 4 2 3 4 4 ... #>  $ Anti-X-intensity    : num [1:250] 3 2 2 3 3 3 2 2 1 2 ... #>  $ Anti-Y-intensity    : num [1:250] 1 1 2 3 3 2 2 2 1 3 ... #>  $ LymphNodeMetastasis : chr [1:250] \"Present\" \"Absent\" \"Absent\" \"Absent\" ... #>  $ Valid               : chr [1:250] \"YANLIŞ\" \"DOĞRU\" \"YANLIŞ\" \"DOĞRU\" ... #>  $ Smoker              : chr [1:250] \"YANLIŞ\" \"YANLIŞ\" \"DOĞRU\" \"YANLIŞ\" ... #>  $ Grade_Level         : chr [1:250] \"high\" \"low\" \"low\" \"high\" ... #>  $ SurgeryDate         : chr [1:250] \"2019.07.08 00:00:00\" \"2019.03.18 00:00:00\" \"2019.05.18 00:00:00\" \"2018.10.24 00:00:00\" ... #>  $ DeathTime           : chr [1:250] \"Within1Year\" \"Within1Year\" \"Within1Year\" \"Within1Year\" ... #>  $ int                 : chr [1:250] \"2019-07-08 UTC--2019-10-22 UTC\" \"2019-03-18 UTC--2019-06-22 UTC\" \"2019-05-18 UTC--2019-08-22 UTC\" \"2018-10-24 UTC--2019-03-22 UTC\" ... #>  $ OverallTime         : num [1:250] 3.5 3.1 3.1 4.9 3.3 9.3 6.3 9 5.8 9.9 ... #>  $ Outcome             : num [1:250] 0 1 1 0 0 0 1 1 1 0 ... #>  $ Mortality5yr        : chr [1:250] \"Alive\" \"Dead\" \"Dead\" \"Alive\" ... #>  $ Rater 1             : num [1:250] 0 1 1 0 0 0 1 1 1 0 ... #>  $ Rater 2             : num [1:250] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Rater 3             : num [1:250] 1 1 1 0 1 1 1 1 1 1 ... #>  $ Rater A             : num [1:250] 3 2 3 3 2 3 1 1 2 1 ... #>  $ Rater B             : num [1:250] 3 2 3 3 2 3 1 1 2 1 ... #>  $ New Test            : num [1:250] 0 0 0 0 0 0 1 0 0 0 ... #>  $ Golden Standart     : num [1:250] 0 0 0 0 0 0 0 0 0 0 ... #>  $ MeasurementA        : num [1:250] -1.63432 0.37071 0.01585 -1.23584 -0.00141 ... #>  $ MeasurementB        : num [1:250] 0.611 0.554 0.742 0.622 0.527 ... #>  $ Disease Status      : chr [1:250] \"Ill\" \"Ill\" \"Healthy\" \"Ill\" ... #>  $ Measurement1        : num [1:250] 0.387 0.829 0.159 2.447 0.847 ... #>  $ Measurement2        : num [1:250] 1.8654 0.5425 0.0701 2.4071 0.5564 ... #>  $ Outcome2            : chr [1:250] \"DOD\" \"DOOC\" \"AWD\" \"AWOD\" ... #>  - attr(*, \"spec\")=List of 3 #>   ..$ cols   :List of 38 #>   .. ..$ ID                  : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Name                : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ Sex                 : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ Age                 : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Race                : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ PreinvasiveComponent: list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ LVI                 : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ PNI                 : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ LastFollowUpDate    : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ Death               : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ Group               : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ Grade               : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ TStage              : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Anti-X-intensity    : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Anti-Y-intensity    : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ LymphNodeMetastasis : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ Valid               : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ Smoker              : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ Grade_Level         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ SurgeryDate         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ DeathTime           : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ int                 : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ OverallTime         : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Outcome             : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Mortality5yr        : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ Rater 1             : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Rater 2             : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Rater 3             : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Rater A             : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Rater B             : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ New Test            : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Golden Standart     : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ MeasurementA        : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ MeasurementB        : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Disease Status      : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   .. ..$ Measurement1        : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Measurement2        : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\" #>   .. ..$ Outcome2            : list() #>   .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\" #>   ..$ default: list() #>   .. ..- attr(*, \"class\")= chr [1:2] \"collector_guess\" \"collector\" #>   ..$ skip   : num 1 #>   ..- attr(*, \"class\")= chr \"col_spec\"  # Key variables for bar charts cat(\"Categorical variables suitable for X-axis:\\n\") #> Categorical variables suitable for X-axis: cat(\"- Sex:\", unique(histopathology$Sex), \"\\n\") #> - Sex: Male Female NA cat(\"- Race:\", unique(histopathology$Race), \"\\n\")  #> - Race: White Black Hispanic Bi-Racial Hawaiian NA Asian Native cat(\"- Group:\", unique(histopathology$Group), \"\\n\") #> - Group: Control Treatment NA cat(\"- Grade_Level:\", unique(histopathology$Grade_Level), \"\\n\") #> - Grade_Level: high low moderate NA  cat(\"\\nNumeric variables suitable for Y-axis:\\n\") #>  #> Numeric variables suitable for Y-axis: cat(\"- Age: range\", range(histopathology$Age, na.rm = TRUE), \"\\n\") #> - Age: range 25 73 cat(\"- Grade: range\", range(histopathology$Grade, na.rm = TRUE), \"\\n\") #> - Grade: range 1 3 cat(\"- OverallTime: range\", range(histopathology$OverallTime, na.rm = TRUE), \"\\n\") #> - OverallTime: range 2.9 58.2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"approach-1-basic-ggplot2","dir":"Articles","previous_headings":"","what":"Approach 1: Basic ggplot2","title":"Advanced Bar Charts - 7 Professional Approaches","text":"Use Case: Data exploration, quick analysis, educational purposes Strengths: Fast rendering, straightforward implementation, highly customizable","code":"# Basic ggplot2 approach advancedbarplot(   data = histopathology,   x_var = \"Group\",   y_var = \"Age\",    chart_approach = \"basic\",   stat_type = \"mean\",   show_values = TRUE,   plot_title = \"Mean Age by Treatment Group\",   x_title = \"Treatment Group\",   y_title = \"Mean Age (years)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"r-code-example-for-basic-approach","dir":"Articles","previous_headings":"Approach 1: Basic ggplot2","what":"R Code Example for Basic Approach","title":"Advanced Bar Charts - 7 Professional Approaches","text":"","code":"# Reproducible R code for basic approach library(ggplot2) library(dplyr)  # Summarize data summary_data <- histopathology %>%   group_by(Group) %>%   summarise(     mean_age = mean(Age, na.rm = TRUE),     se = sd(Age, na.rm = TRUE) / sqrt(n()),     .groups = \"drop\"   )  # Create basic plot basic_plot <- ggplot(summary_data, aes(x = Group, y = mean_age)) +   geom_col(width = 0.8, alpha = 0.9) +   geom_text(aes(label = round(mean_age, 1)), vjust = -0.5) +   theme_minimal() +   labs(     title = \"Mean Age by Treatment Group - Basic Approach\",     x = \"Treatment Group\",     y = \"Mean Age (years)\"   )  print(basic_plot)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"approach-2-polished-presentation","dir":"Articles","previous_headings":"","what":"Approach 2: Polished Presentation","title":"Advanced Bar Charts - 7 Professional Approaches","text":"Use Case: Business presentations, stakeholder reports, dashboard displays Strengths: Professional appearance, enhanced readability, presentation-ready","code":"# Polished presentation approach advancedbarplot(   data = histopathology,   x_var = \"Grade_Level\",    y_var = \"OverallTime\",   fill_var = \"Sex\",   chart_approach = \"polished\",   stat_type = \"mean\",   color_palette = \"clinical\",   bar_position = \"dodge\",   show_values = TRUE,   value_format = \"decimal1\",   plot_title = \"Overall Survival Time by Grade and Sex\",   legend_position = \"top\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"r-code-example-for-polished-approach","dir":"Articles","previous_headings":"Approach 2: Polished Presentation","what":"R Code Example for Polished Approach","title":"Advanced Bar Charts - 7 Professional Approaches","text":"","code":"# Polished presentation approach summary_data_grouped <- histopathology %>%   group_by(Grade_Level, Sex) %>%   summarise(     mean_time = mean(OverallTime, na.rm = TRUE),     se = sd(OverallTime, na.rm = TRUE) / sqrt(n()),     .groups = \"drop\"   )  # Clinical color palette clinical_colors <- c(\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\")  polished_plot <- ggplot(summary_data_grouped, aes(x = Grade_Level, y = mean_time, fill = Sex)) +   geom_col(position = position_dodge(width = 0.8), width = 0.8, alpha = 0.9) +   geom_text(     aes(label = sprintf(\"%.1f\", mean_time)),     position = position_dodge(width = 0.8),     vjust = -0.5,     size = 3.5   ) +   scale_fill_manual(values = clinical_colors) +   theme_minimal() +   theme(     text = element_text(size = 12),     plot.title = element_text(size = 14, face = \"bold\"),     axis.text = element_text(size = 10),     legend.position = \"top\"   ) +   labs(     title = \"Overall Survival Time by Grade and Sex - Polished Approach\",     x = \"Grade Level\",     y = \"Mean Overall Time (months)\",     fill = \"Sex\"   )  print(polished_plot)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"approach-3-statistical-annotations","dir":"Articles","previous_headings":"","what":"Approach 3: Statistical Annotations","title":"Advanced Bar Charts - 7 Professional Approaches","text":"Use Case: Research publications, clinical studies, comparative analysis Strengths: Built-statistics, automated annotations, hypothesis testing","code":"# Statistical annotations approach advancedbarplot(   data = histopathology,   x_var = \"Group\",   y_var = \"Grade\",   chart_approach = \"statistical\",    stat_type = \"mean\",   add_statistics = TRUE,   stat_method = \"ttest\",   error_bars = \"se\",   show_values = TRUE,   plot_title = \"Mean Grade by Treatment Group with Statistical Test\",   color_palette = \"nature\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"r-code-example-for-statistical-approach","dir":"Articles","previous_headings":"Approach 3: Statistical Annotations","what":"R Code Example for Statistical Approach","title":"Advanced Bar Charts - 7 Professional Approaches","text":"","code":"# Statistical approach with error bars summary_stats <- histopathology %>%   group_by(Group) %>%   summarise(     mean_grade = mean(Grade, na.rm = TRUE),     se = sd(Grade, na.rm = TRUE) / sqrt(n()),     sd = sd(Grade, na.rm = TRUE),     n = n(),     .groups = \"drop\"   )  # Perform t-test control_data <- histopathology$Grade[histopathology$Group == \"Control\"] treatment_data <- histopathology$Grade[histopathology$Group == \"Treatment\"] t_result <- t.test(control_data, treatment_data)  statistical_plot <- ggplot(summary_stats, aes(x = Group, y = mean_grade)) +   geom_col(width = 0.8, alpha = 0.9, fill = \"steelblue\") +   geom_errorbar(     aes(ymin = mean_grade - se, ymax = mean_grade + se),     width = 0.2,     position = position_dodge(width = 0.8)   ) +   geom_text(aes(label = sprintf(\"%.2f\", mean_grade)), vjust = -1.5) +   theme_minimal() +   labs(     title = paste0(\"Mean Grade by Treatment Group - Statistical Approach\\n\",                    \"t(\", round(t_result$parameter, 1), \") = \", round(t_result$statistic, 3),                    \", p = \", format.pval(t_result$p.value, digits = 3)),     x = \"Treatment Group\",      y = \"Mean Grade\",     caption = paste0(\"Error bars represent standard error\\n\",                      \"Mean difference: \", round(diff(t_result$estimate), 3))   )  print(statistical_plot)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"approach-4-interactive-plotly","dir":"Articles","previous_headings":"","what":"Approach 4: Interactive Plotly","title":"Advanced Bar Charts - 7 Professional Approaches","text":"Use Case: Web applications, interactive reports, data exploration tools Strengths: Interactive exploration, hover information, zoom pan capabilities","code":"# Interactive plotly approach advancedbarplot(   data = histopathology,   x_var = \"Race\",   y_var = \"MeasurementA\",    chart_approach = \"interactive\",   stat_type = \"median\",   color_palette = \"viridis\",   plot_title = \"Median Measurement A by Race - Interactive\",   show_values = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"r-code-example-for-interactive-approach","dir":"Articles","previous_headings":"Approach 4: Interactive Plotly","what":"R Code Example for Interactive Approach","title":"Advanced Bar Charts - 7 Professional Approaches","text":"","code":"library(plotly)  # Prepare data for interactive plot race_summary <- histopathology %>%   group_by(Race) %>%   summarise(     median_measurement = median(MeasurementA, na.rm = TRUE),     mad = mad(MeasurementA, na.rm = TRUE),     n = n(),     .groups = \"drop\"   )  # Create ggplot interactive_base <- ggplot(race_summary, aes(x = Race, y = median_measurement, fill = Race)) +   geom_col(width = 0.8, alpha = 0.9) +   geom_text(aes(label = sprintf(\"%.3f\", median_measurement)), vjust = -0.5) +   scale_fill_viridis_d() +   theme_minimal() +   theme(legend.position = \"none\") +   labs(     title = \"Median Measurement A by Race - Interactive Approach\",     x = \"Race\",     y = \"Median Measurement A\"   )  # Convert to interactive plot interactive_plot <- ggplotly(interactive_base, tooltip = c(\"x\", \"y\"))  print(interactive_plot)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"approach-5-publication-ready","dir":"Articles","previous_headings":"","what":"Approach 5: Publication Ready","title":"Advanced Bar Charts - 7 Professional Approaches","text":"Use Case: Academic papers, journal submissions, conference presentations Strengths: Journal formatting standards, high-resolution export, citation ready","code":"# Publication ready approach advancedbarplot(   data = histopathology,   x_var = \"Sex\",   y_var = \"MeasurementB\",   chart_approach = \"publication\",   stat_type = \"mean\",   error_bars = \"ci95\",    show_values = TRUE,   value_format = \"decimal2\",   plot_title = \"Mean Measurement B by Sex\",   theme_style = \"publication\",   export_options = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"r-code-example-for-publication-approach","dir":"Articles","previous_headings":"Approach 5: Publication Ready","what":"R Code Example for Publication Approach","title":"Advanced Bar Charts - 7 Professional Approaches","text":"","code":"# Publication-ready approach sex_summary <- histopathology %>%   group_by(Sex) %>%   summarise(     mean_measurement = mean(MeasurementB, na.rm = TRUE),     se = sd(MeasurementB, na.rm = TRUE) / sqrt(n()),     ci95 = 1.96 * se,     n = n(),     .groups = \"drop\"   )  publication_plot <- ggplot(sex_summary, aes(x = Sex, y = mean_measurement)) +   geom_col(     width = 0.8,     alpha = 0.7,     color = \"black\",     size = 0.3,     fill = \"steelblue\"   ) +   geom_errorbar(     aes(ymin = mean_measurement - ci95, ymax = mean_measurement + ci95),     width = 0.2   ) +   geom_text(     aes(label = sprintf(\"%.2f\", mean_measurement)),     vjust = -1.5,     size = 3   ) +   theme_classic() +   theme(     text = element_text(size = 11, family = \"serif\"),     plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),     axis.text = element_text(size = 10, color = \"black\"),     axis.title = element_text(size = 11, face = \"bold\"),     panel.grid = element_blank(),     axis.line = element_line(color = \"black\", size = 0.5)   ) +   labs(     title = \"Mean Measurement B by Sex\",     x = \"Sex\",     y = \"Mean Measurement B\",     caption = \"Error bars represent 95% confidence intervals\"   )  print(publication_plot)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"approach-6-bbc-news-style","dir":"Articles","previous_headings":"","what":"Approach 6: BBC News Style","title":"Advanced Bar Charts - 7 Professional Approaches","text":"Use Case: News reports, journalism, public communications, professional presentations Strengths: BBC design standards, professional typography, brand consistency","code":"# BBC News style approach advancedbarplot(   data = histopathology,   x_var = \"Grade_Level\",   y_var = \"Age\",   chart_approach = \"bbc_style\",   stat_type = \"mean\",   color_palette = \"bbc_multi\",   show_values = TRUE,   plot_title = \"Age Distribution by Grade Level\",   subtitle_text = \"BBC Visual and Data Journalism Style\",   source_text = \"ClinicoPath Histopathology Dataset\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"r-code-example-for-bbc-style","dir":"Articles","previous_headings":"Approach 6: BBC News Style","what":"R Code Example for BBC Style","title":"Advanced Bar Charts - 7 Professional Approaches","text":"","code":"# BBC News style approach grade_age_summary <- histopathology %>%   group_by(Grade_Level) %>%   summarise(     mean_age = mean(Age, na.rm = TRUE),     n = n(),     .groups = \"drop\"   )  # BBC color palette bbc_colors <- c(\"#1380A1\", \"#FAAB18\", \"#007f7f\", \"#333333\")  bbc_plot <- ggplot(grade_age_summary, aes(x = Grade_Level, y = mean_age, fill = Grade_Level)) +   geom_col(width = 0.8, alpha = 1.0) +   scale_fill_manual(values = bbc_colors) +   theme(     # Text elements     text = element_text(family = \"Arial\", size = 18, color = \"#222222\"),     plot.title = element_text(family = \"Arial\", size = 28, face = \"bold\", color = \"#222222\"),     plot.subtitle = element_text(family = \"Arial\", size = 22, margin = margin(9, 0, 9, 0)),     plot.caption = element_text(size = 14, color = \"#666666\"),          # Legend     legend.position = \"none\",          # Axis     axis.title = element_blank(),     axis.text = element_text(family = \"Arial\", size = 18, color = \"#222222\"),     axis.text.x = element_text(margin = margin(5, b = 10)),     axis.ticks = element_blank(),     axis.line = element_blank(),          # Grid lines (BBC style: horizontal only)     panel.grid.minor = element_blank(),     panel.grid.major.y = element_line(color = \"#cbcbcb\"),     panel.grid.major.x = element_blank(),          # Background     panel.background = element_blank(),     plot.background = element_rect(fill = \"white\", color = NA)   ) +   labs(     title = \"Age Distribution by Grade Level\",     subtitle = \"BBC Visual and Data Journalism Style\",     caption = \"Source: ClinicoPath Histopathology Dataset\"   )  print(bbc_plot)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"approach-7-graphpad-prism-style","dir":"Articles","previous_headings":"","what":"Approach 7: GraphPad Prism Style","title":"Advanced Bar Charts - 7 Professional Approaches","text":"Use Case: Scientific software integration, GraphPad users, statistical software consistency Strengths: Authentic Prism styling, scientific software aesthetics, statistical focus","code":"# GraphPad Prism style approach   advancedbarplot(   data = histopathology,   x_var = \"Group\",   y_var = \"OverallTime\",   fill_var = \"Grade_Level\",   chart_approach = \"prism_style\",   stat_type = \"mean\",   color_palette = \"prism_floral\",   bar_position = \"dodge\",   theme_style = \"prism_default\",   show_values = TRUE,   plot_title = \"Overall Survival Time by Treatment and Grade\",   subtitle_text = \"GraphPad Prism Style Visualization\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"r-code-example-for-prism-style","dir":"Articles","previous_headings":"Approach 7: GraphPad Prism Style","what":"R Code Example for Prism Style","title":"Advanced Bar Charts - 7 Professional Approaches","text":"","code":"# GraphPad Prism style approach prism_summary <- histopathology %>%   group_by(Group, Grade_Level) %>%   summarise(     mean_time = mean(OverallTime, na.rm = TRUE),     se = sd(OverallTime, na.rm = TRUE) / sqrt(n()),     .groups = \"drop\"   )  # Prism-style colors (approximation) prism_colors <- c(\"#FF6B6B\", \"#4ECDC4\", \"#45B7D1\", \"#96CEB4\")  prism_plot <- ggplot(prism_summary, aes(x = Group, y = mean_time, fill = Grade_Level)) +   geom_col(     position = position_dodge(width = 0.8),     width = 0.8,     alpha = 0.9   ) +   scale_fill_manual(values = prism_colors) +   theme_minimal() +   theme(     panel.border = element_rect(colour = \"black\", fill = NA),     axis.line = element_line(colour = \"black\"),     panel.grid.major = element_blank(),     panel.grid.minor = element_blank(),     plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),     legend.position = \"top\"   ) +   labs(     title = \"Overall Survival Time by Treatment and Grade\",     subtitle = \"GraphPad Prism Style Visualization\",      x = \"Treatment Group\",     y = \"Mean Overall Time (months)\",     fill = \"Grade Level\"   )  print(prism_plot)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"statistical-testing-integration","dir":"Articles","previous_headings":"","what":"Statistical Testing Integration","title":"Advanced Bar Charts - 7 Professional Approaches","text":"approaches support integrated statistical testing:","code":"# Example statistical comparisons cat(\"Available statistical tests in advancedbarplot:\\n\") #> Available statistical tests in advancedbarplot: cat(\"- ANOVA: For comparing multiple groups\\n\") #> - ANOVA: For comparing multiple groups cat(\"- t-test: For comparing two groups\\n\")  #> - t-test: For comparing two groups cat(\"- Wilcoxon: Non-parametric alternative to t-test\\n\") #> - Wilcoxon: Non-parametric alternative to t-test cat(\"- Chi-square: For categorical data associations\\n\") #> - Chi-square: For categorical data associations cat(\"- Kruskal-Wallis: Non-parametric alternative to ANOVA\\n\") #> - Kruskal-Wallis: Non-parametric alternative to ANOVA  # Example ANOVA test anova_result <- aov(Age ~ Group, data = histopathology) cat(\"\\nExample ANOVA result (Age by Group):\\n\") #>  #> Example ANOVA result (Age by Group): summary(anova_result) #>              Df Sum Sq Mean Sq F value Pr(>F) #> Group         1     45   45.41   0.237  0.626 #> Residuals   246  47043  191.23                #> 2 observations deleted due to missingness"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"color-palette-showcase","dir":"Articles","previous_headings":"","what":"Color Palette Showcase","title":"Advanced Bar Charts - 7 Professional Approaches","text":"module includes 26+ professional color palettes:","code":"# BBC Color Palettes - bbc_blue: \"#1380A1\"  - bbc_orange: \"#FAAB18\" - bbc_multi: Multiple BBC brand colors  # GraphPad Prism Palettes   - prism_floral: 12 colors - prism_candy_bright: 9 colors - prism_office: 9 colors - prism_colorblind_safe: 6 colors  # Scientific Journal Palettes - nature: Nature journal colors - science: Science journal colors - clinical: Clinical research optimized  # Standard Palettes - viridis: Colorblind-friendly - set1, dark2: RColorBrewer palettes"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"high-quality-export-options","dir":"Articles","previous_headings":"Export and Reproducibility","what":"High-Quality Export Options","title":"Advanced Bar Charts - 7 Professional Approaches","text":"","code":"# For publication export advancedbarplot(   # ... your parameters ...   plot_width = 10,      # Width in inches   plot_height = 6,      # Height in inches   export_options = TRUE # Optimize for export )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"reproducible-r-code","dir":"Articles","previous_headings":"Export and Reproducibility","what":"Reproducible R Code","title":"Advanced Bar Charts - 7 Professional Approaches","text":"approach generates reproducible R code can copy modify:","code":"# Example generated code ggplot(data, aes(x = Group, y = Age)) +   geom_col(alpha = 0.8) +   scale_fill_viridis_d() +   theme_minimal() +   theme(legend.position = \"none\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"choosing-the-right-approach","dir":"Articles","previous_headings":"Best Practices","what":"1. Choosing the Right Approach","title":"Advanced Bar Charts - 7 Professional Approaches","text":"Basic: Quick exploration, learning ggplot2 Polished: Business presentations, dashboards Statistical: Research papers, hypothesis testing Interactive: Web apps, exploration tools Publication: Journal submissions, formal reports BBC Style: News graphics, public communication Prism Style: Scientific software integration","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"data-preparation","dir":"Articles","previous_headings":"Best Practices","what":"2. Data Preparation","title":"Advanced Bar Charts - 7 Professional Approaches","text":"","code":"# Always check your data first summary(histopathology[c(\"Group\", \"Age\", \"Grade_Level\")]) #>     Group                Age        Grade_Level        #>  Length:250         Min.   :25.00   Length:250         #>  Class :character   1st Qu.:38.00   Class :character   #>  Mode  :character   Median :49.00   Mode  :character   #>                     Mean   :49.44                      #>                     3rd Qu.:62.00                      #>                     Max.   :73.00                      #>                     NA's   :1  # Handle missing values cat(\"Missing values check:\\n\") #> Missing values check: sapply(histopathology[c(\"Group\", \"Age\", \"Grade_Level\")], function(x) sum(is.na(x))) #>       Group         Age Grade_Level  #>           1           1           1  # Ensure proper factor levels histopathology$Group <- factor(histopathology$Group) histopathology$Grade_Level <- factor(histopathology$Grade_Level, levels = c(\"low\", \"high\"))"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"statistical-considerations","dir":"Articles","previous_headings":"Best Practices","what":"3. Statistical Considerations","title":"Advanced Bar Charts - 7 Professional Approaches","text":"","code":"# Check assumptions before statistical tests cat(\"Sample sizes by group:\\n\") #> Sample sizes by group: table(histopathology$Group) #>  #>   Control Treatment  #>       120       129  cat(\"\\nNormality check (Shapiro-Wilk test p-values):\\n\") #>  #> Normality check (Shapiro-Wilk test p-values): by(histopathology$Age, histopathology$Group, function(x) shapiro.test(x)$p.value) #> histopathology$Group: Control #> [1] 7.107135e-05 #> ------------------------------------------------------------  #> histopathology$Group: Treatment #> [1] 0.0007150149  cat(\"\\nEqual variances test (F-test p-value):\\n\") #>  #> Equal variances test (F-test p-value): var.test(Age ~ Group, data = histopathology)$p.value #> [1] 0.3525381"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Advanced Bar Charts - 7 Professional Approaches","text":"advancedbarplot module provides comprehensive toolkit professional bar chart visualization. Whether need quick exploration plots publication-ready graphics, 7 approaches cover major use cases clinical research data presentation.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"key-takeaways","dir":"Articles","previous_headings":"Conclusion","what":"Key Takeaways","title":"Advanced Bar Charts - 7 Professional Approaches","text":"7 distinct approaches different use cases Professional styling BBC Prism authenticity Statistical integration automated testing Extensive customization 26+ color palettes Export optimization publication presentation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/07-advancedbarplot.html","id":"next-steps","dir":"Articles","previous_headings":"Conclusion","what":"Next Steps","title":"Advanced Bar Charts - 7 Professional Approaches","text":"Explore interactive features jamovi Try different color palettes specific use case Experiment statistical testing options Use generated R code customization advanced statistical plotting, see related modules: - jjhistogram distribution analysis - jjscatter correlation visualization - survival time--event analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/08-advancedraincloud.html","id":"advanced-distribution-visualization-with-raincloud-plots","dir":"Articles","previous_headings":"","what":"Advanced Distribution Visualization with Raincloud Plots","title":"Advanced Distribution Visualization with Raincloud Plots","text":"raincloud plot modern informative way visualize distribution data. combines violin plot, box plot, raw data points single figure, providing great deal information glance.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/08-advancedraincloud.html","id":"the-clinical-scenario","dir":"Articles","previous_headings":"Advanced Distribution Visualization with Raincloud Plots","what":"The Clinical Scenario","title":"Advanced Distribution Visualization with Raincloud Plots","text":"researcher comparing effectiveness two different therapies. collected “score” patients two groups: control group treatment group. want answer question: difference distribution scores control treatment groups? raincloud plot excellent way visualize answer question.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/08-advancedraincloud.html","id":"step-1-the-analysis-in-jamovi","dir":"Articles","previous_headings":"Advanced Distribution Visualization with Raincloud Plots","what":"Step 1: The Analysis in jamovi","title":"Advanced Distribution Visualization with Raincloud Plots","text":"Load advancedraincloud_data.omv dataset jamovi. main analysis ribbon, click JJStatsPlot -> Advanced -> Raincloud Plot. [Screenshot jamovi analysis ribbon showing path Raincloud Plot.] *** Move score variable Dependent Variable box. Move group variable Grouping Variable box. [Screenshot analysis window showing variables assigned.] ***","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/08-advancedraincloud.html","id":"step-2-the-output-plot","dir":"Articles","previous_headings":"Advanced Distribution Visualization with Raincloud Plots","what":"Step 2: The Output Plot","title":"Advanced Distribution Visualization with Raincloud Plots","text":"jamovi generate following raincloud plot:","code":"# Load raincloud data data(\"advancedraincloud_data\", package = \"ClinicoPath\")  # Ensure the grouping variable is a factor advancedraincloud_data$group <- factor(advancedraincloud_data$group)  advancedraincloud(   data = advancedraincloud_data,   dep = \"score\",   group = \"group\",   title = \"Score Distribution by Group with Raincloud Plot\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/08-advancedraincloud.html","id":"step-3-interpreting-the-plot","dir":"Articles","previous_headings":"Advanced Distribution Visualization with Raincloud Plots","what":"Step 3: Interpreting the Plot","title":"Advanced Distribution Visualization with Raincloud Plots","text":"raincloud plot three components: “Cloud” (Violin Plot): shaded area left shows distribution data. wider cloud, data points score. “Rain” (Data Points): individual dots right actual data points patient. helps see spread data identify potential outliers. “Box” (Box Plot): box plot violin provides summary data. line middle box median, box represents interquartile range, whiskers show range data. plot, can see treatment group appears higher scores control group. distribution treatment group shifted right.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/08-advancedraincloud.html","id":"advanced-feature-longitudinal-connections","dir":"Articles","previous_headings":"Advanced Distribution Visualization with Raincloud Plots","what":"Advanced Feature: Longitudinal Connections","title":"Advanced Distribution Visualization with Raincloud Plots","text":"advanced raincloud plot powerful feature visualizing paired repeated-measures data. data patients two different time points, can connect dots see individual change patient. , need data long format patient ID variable. assign ID variable ID box analysis window turn Show Longitudinal option. [Image raincloud plot longitudinal connections, showing lines connecting dots two time points.] ***","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/08-advancedraincloud.html","id":"step-4-reporting-the-results","dir":"Articles","previous_headings":"Advanced Distribution Visualization with Raincloud Plots","what":"Step 4: Reporting the Results","title":"Advanced Distribution Visualization with Raincloud Plots","text":"reporting results raincloud plot, describe visual findings supplement appropriate statistical test (e.g., t-test ANOVA). raincloud plot used visualize distribution scores control treatment groups. plot revealed treatment group higher median score distribution shifted towards higher values compared control group. two-sample t-test confirmed difference statistically significant (t(98) = -5.4, p < 0.001).","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"advancedtree function ClinicoPath provides state---art decision tree algorithms specifically designed clinical research medical decision making. module extends traditional decision tree functionality modern algorithms including gradient boosting, conditional inference trees, ensemble methods, advanced interpretability tools.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"key-features","dir":"Articles","previous_headings":"Introduction","what":"Key Features","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"Multiple Algorithms: CART, Conditional Inference, Random Forest, XGBoost, Extra Trees, Ensemble Clinical Focus: Specialized metrics visualizations healthcare applications Advanced Validation: Cross-validation, bootstrap, hold-, temporal validation Feature Analysis: Automated selection, importance ranking, interaction analysis Class Imbalance Handling: Multiple strategies rare diseases imbalanced outcomes Interpretability: SHAP values, partial dependence plots, feature interactions Clinical Context: Diagnostic, prognostic, treatment, risk stratification applications","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"dataset-overview","dir":"Articles","previous_headings":"","what":"Dataset Overview","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"tutorial, ’ll use histopathology dataset included ClinicoPath, contains clinical pathological data 250 patients.","code":"# Load the histopathology dataset data(histopathology)  # Overview of the dataset str(histopathology)  # Key variables for decision tree analysis cat(\"Continuous Variables:\\n\") continuous_vars <- c(\"Age\", \"Grade\", \"TStage\", \"OverallTime\", \"MeasurementA\", \"MeasurementB\") print(continuous_vars)  cat(\"\\nCategorical Variables:\\n\") categorical_vars <- c(\"Sex\", \"Group\", \"Grade_Level\", \"LVI\", \"PNI\", \"LymphNodeMetastasis\", \"Mortality5yr\") print(categorical_vars)  cat(\"\\nOutcome Variables:\\n\") outcome_vars <- c(\"Outcome\", \"Death\", \"Mortality5yr\", \"Outcome2\") print(outcome_vars)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-1-simple-cart-tree-for-mortality-prediction","dir":"Articles","previous_headings":"Basic Decision Tree Analysis","what":"Example 1: Simple CART Tree for Mortality Prediction","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Basic CART tree for mortality prediction # Note: This is a jamovi module function. In R, use: # library(jjstatsplot) # basic_tree <- advancedtree( #   data = histopathology, #   vars = c(\"Age\", \"Grade\", \"TStage\"), #   facs = c(\"Sex\", \"LVI\", \"PNI\"), #   target = \"Mortality5yr\", #   targetLevel = \"Dead\", #   algorithm = \"rpart\", #   validation = \"cv\", #   show_tree_plot = TRUE, #   show_importance_plot = TRUE, #   show_performance_metrics = TRUE # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-2-conditional-inference-tree","dir":"Articles","previous_headings":"Basic Decision Tree Analysis","what":"Example 2: Conditional Inference Tree","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Conditional inference tree with unbiased variable selection ctree_model <- advancedtree(   data = histopathology,   vars = c(\"Age\", \"OverallTime\", \"MeasurementA\", \"MeasurementB\"),   facs = c(\"Grade_Level\", \"Group\", \"LymphNodeMetastasis\"),   target = \"Outcome\",   targetLevel = \"1\",   algorithm = \"ctree\",   validation = \"bootstrap\",   max_depth = 5,   show_tree_plot = TRUE,   show_roc_curve = TRUE,   show_confusion_matrix = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-3-random-forest-for-comprehensive-analysis","dir":"Articles","previous_headings":"Advanced Ensemble Methods","what":"Example 3: Random Forest for Comprehensive Analysis","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Random Forest with feature selection and validation rf_model <- advancedtree(   data = histopathology,   vars = c(\"Age\", \"Grade\", \"TStage\", \"OverallTime\", \"MeasurementA\", \"MeasurementB\"),   facs = c(\"Sex\", \"Group\", \"Grade_Level\", \"LVI\", \"PNI\", \"LymphNodeMetastasis\"),   target = \"Mortality5yr\",   targetLevel = \"Dead\",   algorithm = \"randomforest\",   validation = \"cv\",   cv_folds = 5,   n_estimators = 200,   feature_selection = TRUE,   importance_method = \"permutation\",   show_importance_plot = TRUE,   show_performance_metrics = TRUE,   show_validation_curves = TRUE,   show_roc_curve = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-4-gradient-boosting-xgboost-with-hyperparameter-tuning","dir":"Articles","previous_headings":"Advanced Ensemble Methods","what":"Example 4: Gradient Boosting (XGBoost) with Hyperparameter Tuning","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# XGBoost with automated hyperparameter optimization xgb_model <- advancedtree(   data = histopathology,   vars = c(\"Age\", \"Grade\", \"TStage\", \"OverallTime\", \"MeasurementA\", \"MeasurementB\"),   facs = c(\"Sex\", \"Group\", \"Grade_Level\", \"LVI\", \"PNI\"),   target = \"Outcome\",   targetLevel = \"1\",   algorithm = \"xgboost\",   validation = \"holdout\",   test_split = 0.3,   hyperparameter_tuning = TRUE,   tuning_method = \"random\",   n_estimators = 100,   learning_rate = 0.1,   max_depth = 6,   show_importance_plot = TRUE,   show_performance_metrics = TRUE,   show_roc_curve = TRUE,   show_calibration_plot = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-5-handling-imbalanced-clinical-data","dir":"Articles","previous_headings":"Class Imbalance Handling","what":"Example 5: Handling Imbalanced Clinical Data","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Create imbalanced outcome for demonstration imbalanced_data <- histopathology %>%   mutate(RareEvent = ifelse(Grade >= 3 & LVI == \"Present\", \"Yes\", \"No\"))  # Model with class imbalance handling imbalanced_model <- advancedtree(   data = imbalanced_data,   vars = c(\"Age\", \"TStage\", \"OverallTime\"),   facs = c(\"Sex\", \"Group\", \"PNI\", \"LymphNodeMetastasis\"),   target = \"RareEvent\",   targetLevel = \"Yes\",   algorithm = \"randomforest\",   validation = \"cv\",   handle_imbalance = TRUE,   imbalance_method = \"smote\",   show_performance_metrics = TRUE,   show_roc_curve = TRUE,   show_confusion_matrix = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-6-diagnostic-classification","dir":"Articles","previous_headings":"Clinical Context Applications","what":"Example 6: Diagnostic Classification","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Diagnostic model for disease classification diagnostic_model <- advancedtree(   data = histopathology,   vars = c(\"MeasurementA\", \"MeasurementB\", \"Age\"),   facs = c(\"Sex\", \"Grade_Level\"),   target = \"Disease Status\",   targetLevel = \"Ill\",   algorithm = \"ensemble\",   validation = \"cv\",   clinical_context = \"diagnosis\",   cost_sensitive_thresholds = TRUE,   fn_fp_ratio = 3.0,  # Higher cost for missing disease   show_performance_metrics = TRUE,   show_roc_curve = TRUE,   show_calibration_plot = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-7-prognosis-prediction-with-bootstrap-confidence","dir":"Articles","previous_headings":"Clinical Context Applications","what":"Example 7: Prognosis Prediction with Bootstrap Confidence","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Prognostic model with uncertainty quantification prognosis_model <- advancedtree(   data = histopathology,   vars = c(\"Age\", \"Grade\", \"TStage\", \"OverallTime\"),   facs = c(\"LVI\", \"PNI\", \"LymphNodeMetastasis\"),   target = \"Mortality5yr\",   targetLevel = \"Dead\",   algorithm = \"xgboost\",   validation = \"bootstrap\",   clinical_context = \"prognosis\",   bootstrap_confidence = TRUE,   n_bootstrap = 500,   show_performance_metrics = TRUE,   show_validation_curves = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-8-shap-analysis-for-feature-explanation","dir":"Articles","previous_headings":"Advanced Interpretability","what":"Example 8: SHAP Analysis for Feature Explanation","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Model with SHAP analysis for interpretability shap_model <- advancedtree(   data = histopathology,   vars = c(\"Age\", \"Grade\", \"TStage\", \"MeasurementA\"),   facs = c(\"Sex\", \"LVI\", \"PNI\"),   target = \"Outcome\",   targetLevel = \"1\",   algorithm = \"randomforest\",   validation = \"cv\",   interpretability = TRUE,   shap_analysis = TRUE,   partial_dependence = TRUE,   interaction_analysis = TRUE,   show_performance_metrics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-9-biomarker-discovery","dir":"Articles","previous_headings":"Advanced Interpretability","what":"Example 9: Biomarker Discovery","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Biomarker discovery with comprehensive feature analysis biomarker_model <- advancedtree(   data = histopathology,   vars = c(\"MeasurementA\", \"MeasurementB\", \"Age\", \"Grade\", \"TStage\"),   facs = c(\"Sex\", \"Group\", \"LVI\", \"PNI\", \"LymphNodeMetastasis\"),   target = \"Outcome2\",   targetLevel = \"DOD\",  # Death of Disease   algorithm = \"ensemble\",   validation = \"cv\",   clinical_context = \"biomarker\",   feature_selection = TRUE,   importance_method = \"shap\",   interpretability = TRUE,   partial_dependence = TRUE,   show_importance_plot = TRUE,   show_performance_metrics = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-10-personalized-treatment-selection","dir":"Articles","previous_headings":"Treatment Response Prediction","what":"Example 10: Personalized Treatment Selection","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Treatment response prediction model treatment_model <- advancedtree(   data = histopathology,   vars = c(\"Age\", \"Grade\", \"TStage\", \"MeasurementA\", \"MeasurementB\"),   facs = c(\"Sex\", \"Grade_Level\", \"LVI\", \"PNI\"),   target = \"Group\",   targetLevel = \"Treatment\",   algorithm = \"xgboost\",   validation = \"temporal\",  # For treatment sequence data   clinical_context = \"treatment\",   hyperparameter_tuning = TRUE,   interpretability = TRUE,   shap_analysis = TRUE,   show_performance_metrics = TRUE,   show_roc_curve = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-11-patient-risk-categorization","dir":"Articles","previous_headings":"Risk Stratification","what":"Example 11: Patient Risk Categorization","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Risk stratification with cost-sensitive learning risk_model <- advancedtree(   data = histopathology,   vars = c(\"Age\", \"Grade\", \"TStage\", \"OverallTime\"),   facs = c(\"Sex\", \"LVI\", \"PNI\", \"LymphNodeMetastasis\"),   target = \"Mortality5yr\",   targetLevel = \"Dead\",   algorithm = \"ensemble\",   validation = \"cv\",   clinical_context = \"risk\",   cost_sensitive_thresholds = TRUE,   fn_fp_ratio = 2.0,   handle_imbalance = TRUE,   imbalance_method = \"cost_sensitive\",   show_performance_metrics = TRUE,   show_roc_curve = TRUE,   show_calibration_plot = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-12-clinical-decision-support-system","dir":"Articles","previous_headings":"Model Export and Deployment","what":"Example 12: Clinical Decision Support System","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Model for clinical decision support deployment deployment_model <- advancedtree(   data = histopathology,   vars = c(\"Age\", \"Grade\", \"TStage\", \"MeasurementA\"),   facs = c(\"Sex\", \"LVI\", \"PNI\"),   target = \"Mortality5yr\",   targetLevel = \"Dead\",   algorithm = \"xgboost\",   validation = \"holdout\",   test_split = 0.2,   export_model = TRUE,   bootstrap_confidence = TRUE,   n_bootstrap = 200,   missing_data_handling = \"model\",   show_performance_metrics = TRUE,   clinical_context = \"diagnosis\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-13-robust-analysis-with-missing-data","dir":"Articles","previous_headings":"Missing Data Handling","what":"Example 13: Robust Analysis with Missing Data","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Create dataset with missing values for demonstration missing_data <- histopathology missing_data$Age[sample(nrow(missing_data), 20)] <- NA missing_data$MeasurementA[sample(nrow(missing_data), 15)] <- NA  # Model with advanced missing data handling missing_model <- advancedtree(   data = missing_data,   vars = c(\"Age\", \"Grade\", \"TStage\", \"MeasurementA\", \"MeasurementB\"),   facs = c(\"Sex\", \"Group\", \"LVI\"),   target = \"Outcome\",   targetLevel = \"1\",   algorithm = \"randomforest\",   validation = \"cv\",   missing_data_handling = \"tree\",  # Tree-based imputation   show_performance_metrics = TRUE,   show_importance_plot = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-14-population-screening-model","dir":"Articles","previous_headings":"Screening Applications","what":"Example 14: Population Screening Model","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Screening model with high sensitivity screening_model <- advancedtree(   data = histopathology,   vars = c(\"Age\", \"MeasurementA\", \"MeasurementB\"),   facs = c(\"Sex\", \"Group\"),   target = \"Disease Status\",   targetLevel = \"Ill\",   algorithm = \"ensemble\",   validation = \"bootstrap\",   clinical_context = \"screening\",   cost_sensitive_thresholds = TRUE,   fn_fp_ratio = 5.0,  # Very high cost for missing disease in screening   show_performance_metrics = TRUE,   show_roc_curve = TRUE,   show_calibration_plot = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-15-algorithm-comparison","dir":"Articles","previous_headings":"Comparative Analysis","what":"Example 15: Algorithm Comparison","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Compare multiple algorithms on the same dataset algorithms <- c(\"rpart\", \"ctree\", \"randomforest\", \"xgboost\") results <- list()  for (algo in algorithms) {   cat(paste(\"\\nTraining\", algo, \"model...\\n\"))      model <- advancedtree(     data = histopathology,     vars = c(\"Age\", \"Grade\", \"TStage\", \"MeasurementA\"),     facs = c(\"Sex\", \"LVI\", \"PNI\"),     target = \"Mortality5yr\",     targetLevel = \"Dead\",     algorithm = algo,     validation = \"cv\",     cv_folds = 5,     show_performance_metrics = TRUE   )      results[[algo]] <- model }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"example-16-comprehensive-visualization-suite","dir":"Articles","previous_headings":"Advanced Visualization","what":"Example 16: Comprehensive Visualization Suite","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"","code":"# Model with all visualization options enabled viz_model <- advancedtree(   data = histopathology,   vars = c(\"Age\", \"Grade\", \"TStage\", \"OverallTime\"),   facs = c(\"Sex\", \"Group\", \"LVI\", \"PNI\"),   target = \"Outcome\",   targetLevel = \"1\",   algorithm = \"randomforest\",   validation = \"cv\",   interpretability = TRUE,   show_tree_plot = TRUE,   show_importance_plot = TRUE,   show_performance_metrics = TRUE,   show_validation_curves = TRUE,   show_roc_curve = TRUE,   show_calibration_plot = TRUE,   show_confusion_matrix = TRUE,   shap_analysis = TRUE,   partial_dependence = TRUE,   interaction_analysis = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"clinical-reporting","dir":"Articles","previous_headings":"","what":"Clinical Reporting","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"advancedtree function provides comprehensive clinical reporting capabilities:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"performance-metrics","dir":"Articles","previous_headings":"Clinical Reporting","what":"Performance Metrics","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"Accuracy: Overall classification accuracy Sensitivity: True positive rate (important disease detection) Specificity: True negative rate (important avoiding false alarms) Positive Predictive Value (PPV): Probability disease given positive test Negative Predictive Value (NPV): Probability disease given negative test AUC-ROC: Area receiver operating characteristic curve Likelihood Ratios: Clinical utility metrics decision making","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"clinical-interpretation","dir":"Articles","previous_headings":"Clinical Reporting","what":"Clinical Interpretation","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"function provides context-specific interpretation based selected clinical application: Diagnostic: Focus sensitivity/specificity balance Prognostic: Emphasis long-term prediction accuracy Treatment: Personalized treatment selection criteria Risk: Patient stratification management guidance Biomarker: Feature importance biological relevance Screening: High sensitivity population health","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"data-preparation","dir":"Articles","previous_headings":"Best Practices","what":"Data Preparation","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"Variable Selection: Choose clinically relevant predictors Data Quality: Address missing values outliers Feature Engineering: Create meaningful clinical variables Class Balance: Consider prevalence outcomes","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"model-selection","dir":"Articles","previous_headings":"Best Practices","what":"Model Selection","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"Sample Size: Use appropriate algorithms dataset size Interpretability: Balance performance explainability Validation: Use appropriate validation strategies Clinical Context: Align model choice application","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"performance-evaluation","dir":"Articles","previous_headings":"Best Practices","what":"Performance Evaluation","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"Multiple Metrics: Don’t rely accuracy alone Clinical Relevance: Consider cost different errors Confidence Intervals: Quantify uncertainty External Validation: Test independent datasets","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"Convergence Problems: Reduce model complexity increase sample size Overfitting: Use regularization ensemble methods Class Imbalance: Apply balancing techniques Missing Data: Choose appropriate imputation strategy","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"performance-optimization","dir":"Articles","previous_headings":"Troubleshooting","what":"Performance Optimization","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"Feature Selection: Reduce dimensionality Hyperparameter Tuning: Optimize model parameters Ensemble Methods: Combine multiple models Cross-Validation: Use appropriate validation strategy","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-advancedtree.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Advanced Decision Tree Analysis in ClinicoPath","text":"advancedtree function ClinicoPath provides comprehensive toolkit clinical decision tree analysis. support multiple modern algorithms, extensive validation options, clinical-focused interpretability tools, enables researchers clinicians build robust predictive models various healthcare applications. Key advantages include: Modern Algorithms: Access state---art tree-based methods Clinical Focus: Specialized features healthcare applications Comprehensive Validation: Multiple strategies performance assessment Advanced Interpretability: SHAP values, partial dependence, interactions Class Imbalance Handling: Techniques rare diseases events Flexible Deployment: Model export clinical decision support function complements existing ClinicoPath decision tree modules providing enhanced functionality complex clinical research scenarios. information ClinicoPath capabilities, visit ClinicoPath GitHub repository.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"complete-jjstatsplot-analysis-gallery","dir":"Articles","previous_headings":"","what":"Complete jjstatsplot Analysis Gallery","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"comprehensive guide demonstrates every analysis type available jjstatsplot practical examples, use cases, statistical interpretations.","code":"library(jjstatsplot) library(dplyr)  # Load datasets data(mtcars) data(iris)  # Prepare example datasets mtcars_clean <- mtcars %>%   mutate(     cyl = factor(cyl, labels = c(\"4-cyl\", \"6-cyl\", \"8-cyl\")),     am = factor(am, labels = c(\"Automatic\", \"Manual\")),     vs = factor(vs, labels = c(\"V-shaped\", \"Straight\"))   )  iris_clean <- iris %>%   mutate(Species = factor(Species))"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"purpose","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Explore distribution continuous variables automatic normality testing descriptive statistics.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"when-to-use","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Examine variable distributions analysis Check normality assumptions Identify outliers skewness Compare distributions across groups","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"basic-usage","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Single variable distribution hist_basic <- jjhistostats(   data = mtcars_clean,   dep = \"mpg\",   grvar = NULL  # No grouping variable )  hist_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"advanced-multiple-variables","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Advanced: Multiple Variables","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Multiple variables hist_multi <- jjhistostats(   data = iris,   dep = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\"),   grvar = NULL  # No grouping variable )  hist_multi$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"grouped-analysis","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Grouped Analysis","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Separate histograms by group hist_grouped <- jjhistostats(   data = mtcars_clean,   dep = \"mpg\",   grvar = \"cyl\" )  hist_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"statistical-output","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Shapiro-Wilk normality test Descriptive statistics (mean, median, SD) Sample size information","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"interpretation-tips","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Normal distribution: p > 0.05 normality test Skewness: Asymmetric distribution patterns Outliers: Points far main distribution","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"purpose-1","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Examine relationships two continuous variables correlation analysis regression fitting.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"when-to-use-1","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Explore bivariate relationships Test correlation hypotheses Visualize regression relationships Identify influential points","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"basic-usage-1","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Basic scatter plot with correlation scatter_basic <- jjscatterstats(   data = mtcars_clean,   dep = \"mpg\",   group = \"hp\",   grvar = NULL  # No grouping variable )  scatter_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"grouped-analysis-1","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"Grouped Analysis","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Separate scatter plots by group scatter_grouped <- jjscatterstats(   data = mtcars_clean,   dep = \"mpg\",   group = \"hp\",    grvar = \"cyl\" )  scatter_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"statistical-output-1","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Pearson/Spearman correlation coefficient Confidence intervals Regression equation R-squared value","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"interpretation-tips-1","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Strong correlation: |r| > 0.7 Moderate correlation: 0.3 < |r| < 0.7 Weak correlation: |r| < 0.3 Linear relationship: Points follow straight line pattern","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"purpose-2","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Compare continuous variables across independent groups appropriate statistical tests.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"when-to-use-2","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Compare means/medians groups Test group differences Visualize data distribution group Assess homogeneity variance","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"basic-usage-2","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Compare groups between_basic <- jjbetweenstats(   data = iris_clean,   dep = \"Sepal.Length\",   group = \"Species\" )  between_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"multiple-dependent-variables","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"Multiple Dependent Variables","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Multiple variables comparison between_multi <- jjbetweenstats(   data = iris_clean,   dep = c(\"Sepal.Length\", \"Petal.Length\"),   group = \"Species\" )  between_multi$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"statistical-output-2","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"ANOVA Kruskal-Wallis test Post-hoc pairwise comparisons Effect size measures (eta-squared, Cohen’s d) Homogeneity variance tests","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"interpretation-tips-2","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Significant difference: p < 0.05 Large effect: η² > 0.14 d > 0.8 Medium effect: η² > 0.06 d > 0.5 Small effect: η² > 0.01 d > 0.2","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"purpose-3","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Visualize correlations among multiple continuous variables simultaneously.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"when-to-use-3","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Explore multivariate relationships Identify redundant variables Screen variables analysis Data reduction decisions","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"basic-usage-3","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Correlation matrix corrmat_basic <- jjcorrmat(   data = mtcars,   dep = c(\"mpg\", \"hp\", \"wt\", \"qsec\", \"disp\"),   grvar = NULL  # No grouping variable )  corrmat_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"grouped-analysis-2","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"Grouped Analysis","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Separate correlation matrices by group corrmat_grouped <- jjcorrmat(   data = iris,   dep = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\"),   grvar = \"Species\" )  corrmat_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"statistical-output-3","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Correlation coefficients matrix Significance testing correlation Confidence intervals","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"interpretation-tips-3","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"High correlation: |r| > 0.8 (consider multicollinearity) Pattern recognition: Look clusters correlated variables Significance: Starred values indicate p < 0.05","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"purpose-4","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Display group means confidence intervals statistical comparisons.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"when-to-use-4","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Present group means clearly Show uncertainty (confidence intervals) Compare multiple groups Publication-ready group comparisons","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"basic-usage-4","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Dot chart with group means dot_basic <- jjdotplotstats(   data = mtcars_clean,   dep = \"mpg\",   group = \"cyl\",   grvar = NULL  # No grouping variable )  dot_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"multiple-variables","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"Multiple Variables","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Multiple dependent variables dot_multi <- jjdotplotstats(   data = iris_clean,   dep = c(\"Sepal.Length\"),   group = \"Species\",   grvar = NULL  # No grouping variable )  dot_multi$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"statistical-output-4","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Group means standard errors Confidence intervals Statistical test results Effect sizes","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"interpretation-tips-4","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Non-overlapping CIs: Likely significant difference Large separation: Meaningful group differences Consistent patterns: Across multiple variables","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"purpose-5","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Analyze categorical variables associations frequency tests.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"when-to-use-5","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Display frequency distributions Test independence categorical variables Visualize contingency tables Report categorical data summaries","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"basic-usage-5","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Frequency bar chart bar_basic <- jjbarstats(   data = mtcars_clean,   dep = \"cyl\",   group = NULL,  # No grouping variable   grvar = NULL  # No grouping variable )  bar_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"two-way-analysis","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"Two-Way Analysis","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Two categorical variables bar_twoway <- jjbarstats(   data = mtcars_clean,   dep = \"cyl\",   group = \"am\",   grvar = NULL  # No additional grouping variable )  bar_twoway$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"statistical-output-5","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Chi-square test independence Cramér’s V (effect size) Expected vs observed frequencies Standardized residuals","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"interpretation-tips-5","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Significant association: p < 0.05 chi-square test Strong association: Cramér’s V > 0.5 Moderate association: Cramér’s V > 0.3 Weak association: Cramér’s V > 0.1","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"purpose-6","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Display proportional data statistical testing categorical variables.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"when-to-use-6","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Show proportions categories Test goodness--fit Display survey results Present percentage distributions","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"basic-usage-6","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Basic pie chart pie_basic <- jjpiestats(   data = mtcars_clean,   dep = \"cyl\",   group = NULL,  # No grouping variable   grvar = NULL  # No grouping variable )  pie_basic$plot1"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"grouped-analysis-3","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"Grouped Analysis","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Separate pie charts by group pie_grouped <- jjpiestats(   data = mtcars_clean,   dep = \"cyl\",   group = NULL,  # No grouping variable   grvar = \"am\" )  pie_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"statistical-output-6","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Goodness--fit tests Frequency percentage tables Chi-square statistics","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"interpretation-tips-6","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Equal proportions: Uniform distribution Dominant category: One slice much larger Balanced distribution: Similar slice sizes","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"purpose-7","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 8. Within-Subjects Analysis - jjwithinstats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Compare repeated measures matched observations appropriate paired tests.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"when-to-use-7","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 8. Within-Subjects Analysis - jjwithinstats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Pre-post comparisons Repeated measures designs Matched pairs analysis Longitudinal data","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"example-with-paired-data","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 8. Within-Subjects Analysis - jjwithinstats()","what":"Example with Paired Data","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Create example paired data paired_data <- data.frame(   Subject = rep(1:20, 2),   Time = rep(c(\"Pre\", \"Post\"), each = 20),   Score = c(rnorm(20, 50, 10), rnorm(20, 55, 10)),   Group = rep(c(\"Treatment\", \"Control\"), 20) )  # Reshape for within-subjects analysis paired_wide <- paired_data %>%   tidyr::pivot_wider(names_from = Time, values_from = Score)  within_basic <- jjwithinstats(   data = paired_wide,   dep1 = \"Pre\",   dep2 = \"Post\",   dep3 = NULL,  # No third dependent variable   dep4 = NULL,  # No fourth dependent variable   )  within_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"statistical-output-7","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 8. Within-Subjects Analysis - jjwithinstats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Paired t-test Wilcoxon signed-rank test Effect size (Cohen’s d paired data) Confidence intervals differences","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"interpretation-tips-7","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 8. Within-Subjects Analysis - jjwithinstats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Significant change: p < 0.05 Practical significance: Consider effect size magnitude Direction change: Positive vs negative differences","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"purpose-8","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 9. Waffle Charts - jwaffle()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Display proportional data using grid squares intuitive visualization.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"when-to-use-8","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 9. Waffle Charts - jwaffle()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Show parts whole Display survey results Present demographic breakdowns Alternative pie charts","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"basic-usage-7","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 9. Waffle Charts - jwaffle()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Waffle chart waffle_basic <- jwaffle(   data = mtcars_clean,   counts = \"hp\",   groups = \"cyl\",   facet = \"am\" )  waffle_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"interpretation-tips-8","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > 9. Waffle Charts - jwaffle()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Visual proportion: square represents equal units Easy comparison: Squares easier compare pie slices Pattern recognition: Spatial arrangement shows patterns","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"decision-tree","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > Choosing the Right Analysis","what":"Decision Tree","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Pseudocode decision tree if (data_type == \"one_continuous\") {   use_jjhistostats() } else if (data_type == \"two_continuous\") {   use_jjscatterstats() # or jjcorrmat() for multiple variables } else if (data_type == \"continuous_by_groups\") {   if (groups_independent) {     use_jjbetweenstats()   } else {     use_jjwithinstats()   } } else if (data_type == \"categorical\") {   if (display_preference == \"bars\") {     use_jjbarstats()   } else if (display_preference == \"pie\") {     use_jjpiestats()   } else if (display_preference == \"waffle\") {     use_waffle()   } } else if (data_type == \"group_means\") {   use_jjdotplotstats() }"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"statistical-considerations","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > Best Practices Summary","what":"Statistical Considerations","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Check assumptions interpreting results Report effect sizes alongside p-values Consider multiple comparisons many tests Validate findings appropriate diagnostics","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"visualization-guidelines","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > Best Practices Summary","what":"Visualization Guidelines","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Choose appropriate plot data type Use consistent color schemes across related plots Include informative titles labels Consider audience selecting plot complexity","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-analysis-gallery.html","id":"workflow-recommendations","dir":"Articles","previous_headings":"Complete jjstatsplot Analysis Gallery > Best Practices Summary","what":"Workflow Recommendations","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Start exploratory plots (histograms, scatter plots) Progress confirmatory analyses (-groups, correlations) Use grouped analyses explore interactions Combine multiple approaches comprehensive understanding gallery provides complete reference jjstatsplot analyses. function offers extensive customization options - explore jamovi interface function documentation additional parameters settings.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"introduction-to-base-graphics-visualization","dir":"Articles","previous_headings":"","what":"Introduction to Base Graphics Visualization","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Base Graphics module provides comprehensive data visualization using pure base R graphics functions, offering exceptional performance unlimited customization potential. module implements GitHub Issue #75 showcasing power flexibility base R plotting without external dependencies.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"why-base-r-graphics","dir":"Articles","previous_headings":"Introduction to Base Graphics Visualization","what":"Why Base R Graphics?","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"🚀 Blazing Fast Performance: external dependencies, direct R graphics engine 🎨 Unlimited Customization: Full control every visual element 📦 Zero Dependencies: Works R installation 🔧 Maximum Compatibility: Compatible R environments 💾 Memory Efficient: Minimal memory footprint large datasets ⚡ Instant Loading: package loading overhead","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"complete-plot-types","dir":"Articles","previous_headings":"Introduction to Base Graphics Visualization > Key Features","what":"8 Complete Plot Types","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Scatter Plots - Relationships continuous variables Line Plots - Trends time series visualization Histograms - Distribution analysis customizable bins Box Plots - Group comparisons quartile analysis Bar Plots - Categorical frequency visualization Density Plots - Smooth distribution curves Pairs Plots - Multiple variable relationship matrices Matrix Plots - Multiple data series single plot","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"advanced-customization-18-parameters","dir":"Articles","previous_headings":"Introduction to Base Graphics Visualization > Key Features","what":"Advanced Customization (18 Parameters)","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Variable selection grouping Point types sizes (10 options) Color schemes (6 built-palettes) Custom titles labels Grid lines legends Statistical overlays Custom axis limits ranges","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"load-required-libraries","dir":"Articles","previous_headings":"Getting Started","what":"Load Required Libraries","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"library(jjstatsplot) library(dplyr)  # Use the histopathology dataset for comprehensive examples data(\"histopathology\") mydata <- histopathology  # Display basic dataset information cat(\"Dataset dimensions:\", nrow(mydata), \"rows ×\", ncol(mydata), \"columns\\n\") ## Dataset dimensions: 250 rows × 38 columns cat(\"Sample variables:\", paste(head(names(mydata), 8), collapse = \", \"), \"...\\n\") ## Sample variables: ID, Name, Sex, Age, Race, PreinvasiveComponent, LVI, PNI ..."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"basic-workflow","dir":"Articles","previous_headings":"Getting Started","what":"Basic Workflow","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Base Graphics workflow straightforward: Choose Plot Type: Select 8 base R plot types Select Variables: Choose X, Y, optional grouping variables Customize Appearance: Adjust colors, points, titles, styling Add Enhancements: Enable statistics, grid lines, legends Set Custom Limits: Fine-tune axis ranges needed","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"scatter-plots---relationship-visualization","dir":"Articles","previous_headings":"Complete Plot Type Reference","what":"1. Scatter Plots - Relationship Visualization","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Scatter plots show relationships two continuous variables extensive customization options.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"basic-scatter-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 1. Scatter Plots - Relationship Visualization","what":"Basic Scatter Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Basic scatter plot basegraphics(   data = mydata,   plot_type = \"scatter\",   x_var = \"Age\",   y_var = \"OverallTime\",   main_title = \"Age vs Overall Survival Time\",   x_label = \"Age (years)\",   y_label = \"Overall Time (days)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"grouped-scatter-plot-with-statistics","dir":"Articles","previous_headings":"Complete Plot Type Reference > 1. Scatter Plots - Relationship Visualization","what":"Grouped Scatter Plot with Statistics","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Grouped scatter plot with correlation and regression basegraphics(   data = mydata,   plot_type = \"scatter\",   x_var = \"Age\",    y_var = \"OverallTime\",   group_var = \"Sex\",   main_title = \"Age vs Survival by Sex\",   x_label = \"Age (years)\",   y_label = \"Overall Time (days)\",   point_type = \"16\",  # Filled circles   point_size = 1.2,   color_scheme = \"rainbow\",   add_legend = TRUE,   add_grid = TRUE,   show_statistics = TRUE  # Adds correlation and R² )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"customized-scatter-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 1. Scatter Plots - Relationship Visualization","what":"Customized Scatter Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Highly customized scatter plot basegraphics(   data = mydata,   plot_type = \"scatter\",   x_var = \"MeasurementA\",   y_var = \"MeasurementB\",    group_var = \"Grade\",   main_title = \"Biomarker Correlation by Tumor Grade\",   x_label = \"Measurement A (units)\",   y_label = \"Measurement B (units)\",   point_type = \"18\",  # Filled diamonds   point_size = 1.5,   color_scheme = \"heat\",   add_legend = TRUE,   add_grid = TRUE,   show_statistics = TRUE,   custom_limits = TRUE,   x_min = 0,   x_max = 100,   y_min = 0,   y_max = 100 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"line-plots---trend-visualization","dir":"Articles","previous_headings":"Complete Plot Type Reference","what":"2. Line Plots - Trend Visualization","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Line plots excel showing trends, time series, sequential data patterns.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"time-series-line-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 2. Line Plots - Trend Visualization","what":"Time Series Line Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Time series style plot basegraphics(   data = mydata,   plot_type = \"line\",   x_var = \"Age\",   y_var = \"OverallTime\",   main_title = \"Survival Trend by Age\",   x_label = \"Age (years)\",   y_label = \"Overall Time (days)\",   color_scheme = \"default\",   add_grid = TRUE,   show_statistics = TRUE  # Adds correlation )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"index-based-line-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 2. Line Plots - Trend Visualization","what":"Index-based Line Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Line plot without Y variable (index-based) basegraphics(   data = mydata,   plot_type = \"line\",   x_var = \"OverallTime\",   main_title = \"Overall Survival Time Sequence\",   x_label = \"Patient Index\",   y_label = \"Overall Time (days)\",   color_scheme = \"default\",   add_grid = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"histograms---distribution-analysis","dir":"Articles","previous_headings":"Complete Plot Type Reference","what":"3. Histograms - Distribution Analysis","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Histograms reveal data distributions customizable binning statistical overlays.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"basic-histogram-with-statistics","dir":"Articles","previous_headings":"Complete Plot Type Reference > 3. Histograms - Distribution Analysis","what":"Basic Histogram with Statistics","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Histogram with statistical overlays basegraphics(   data = mydata,   plot_type = \"histogram\",   x_var = \"Age\",   main_title = \"Age Distribution in Study Population\",   x_label = \"Age (years)\",   bins = 20,   color_scheme = \"heat\",   add_grid = TRUE,   show_statistics = TRUE  # Adds mean, median, SD with lines )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"fine-tuned-histogram","dir":"Articles","previous_headings":"Complete Plot Type Reference > 3. Histograms - Distribution Analysis","what":"Fine-tuned Histogram","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Customized histogram with specific binning basegraphics(   data = mydata,   plot_type = \"histogram\",   x_var = \"OverallTime\",   main_title = \"Survival Time Distribution\",   x_label = \"Overall Time (days)\",   bins = 25,   color_scheme = \"terrain\",    add_grid = TRUE,   show_statistics = TRUE,   custom_limits = TRUE,   x_min = 0,   x_max = 2000 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"box-plots---group-comparisons","dir":"Articles","previous_headings":"Complete Plot Type Reference","what":"4. Box Plots - Group Comparisons","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Box plots compare distributions across groups, showing quartiles outliers.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"grouped-box-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 4. Box Plots - Group Comparisons","what":"Grouped Box Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Box plot comparing groups basegraphics(   data = mydata,   plot_type = \"boxplot\",   x_var = \"Age\",   group_var = \"Sex\",   main_title = \"Age Distribution by Sex\",   x_label = \"Sex\",   y_label = \"Age (years)\",   color_scheme = \"rainbow\",   add_grid = TRUE,   show_statistics = TRUE  # Adds sample sizes )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"multi-group-clinical-box-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 4. Box Plots - Group Comparisons","what":"Multi-group Clinical Box Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Clinical comparison across multiple groups basegraphics(   data = mydata,   plot_type = \"boxplot\",   x_var = \"OverallTime\",   group_var = \"Grade\",   main_title = \"Survival Time by Tumor Grade\",   x_label = \"Tumor Grade\",   y_label = \"Overall Time (days)\",   color_scheme = \"heat\",   add_grid = TRUE,   show_statistics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"single-variable-box-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 4. Box Plots - Group Comparisons","what":"Single Variable Box Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Single variable box plot basegraphics(   data = mydata,   plot_type = \"boxplot\",   x_var = \"MeasurementA\",   main_title = \"Biomarker A Distribution\",   y_label = \"Measurement A (units)\",   color_scheme = \"terrain\",   add_grid = TRUE,   show_statistics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"bar-plots---categorical-visualization","dir":"Articles","previous_headings":"Complete Plot Type Reference","what":"5. Bar Plots - Categorical Visualization","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Bar plots visualize categorical frequencies counts various styling options.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"categorical-frequency-bar-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 5. Bar Plots - Categorical Visualization","what":"Categorical Frequency Bar Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Categorical variable frequencies basegraphics(   data = mydata,   plot_type = \"barplot\",   x_var = \"Grade\",   main_title = \"Tumor Grade Distribution\",   x_label = \"Tumor Grade\",   color_scheme = \"rainbow\",   add_grid = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"treatment-response-bar-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 5. Bar Plots - Categorical Visualization","what":"Treatment Response Bar Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Clinical outcome frequencies basegraphics(   data = mydata,   plot_type = \"barplot\",    x_var = \"Death\",   main_title = \"Patient Outcomes\",   x_label = \"Death Status\",   color_scheme = \"heat\",   add_grid = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"numeric-bar-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 5. Bar Plots - Categorical Visualization","what":"Numeric Bar Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Numeric values as bars (first 20 patients) subset_data <- mydata[1:20, ] basegraphics(   data = subset_data,   plot_type = \"barplot\",   x_var = \"OverallTime\",   main_title = \"Individual Patient Survival Times\",   x_label = \"Patient Index\",   y_label = \"Overall Time (days)\",   color_scheme = \"topo\",   add_grid = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"density-plots---smooth-distributions","dir":"Articles","previous_headings":"Complete Plot Type Reference","what":"6. Density Plots - Smooth Distributions","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Density plots provide smooth distribution visualization group overlays.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"single-variable-density","dir":"Articles","previous_headings":"Complete Plot Type Reference > 6. Density Plots - Smooth Distributions","what":"Single Variable Density","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Smooth density estimation basegraphics(   data = mydata,   plot_type = \"density\",   x_var = \"Age\",   main_title = \"Age Distribution Density\",   x_label = \"Age (years)\",   color_scheme = \"default\",   add_grid = TRUE,   show_statistics = TRUE  # Adds mean/median lines )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"multi-group-density-overlay","dir":"Articles","previous_headings":"Complete Plot Type Reference > 6. Density Plots - Smooth Distributions","what":"Multi-group Density Overlay","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Overlaid density curves by group basegraphics(   data = mydata,   plot_type = \"density\",   x_var = \"OverallTime\",   group_var = \"Sex\",   main_title = \"Survival Time Density by Sex\",   x_label = \"Overall Time (days)\",   color_scheme = \"rainbow\",   add_legend = TRUE,   add_grid = TRUE,   show_statistics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"clinical-biomarker-density","dir":"Articles","previous_headings":"Complete Plot Type Reference > 6. Density Plots - Smooth Distributions","what":"Clinical Biomarker Density","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Biomarker distribution by clinical outcome basegraphics(   data = mydata,   plot_type = \"density\",    x_var = \"MeasurementA\",   group_var = \"Death\",   main_title = \"Biomarker A Distribution by Outcome\",   x_label = \"Measurement A (units)\",   color_scheme = \"heat\",   add_legend = TRUE,   add_grid = TRUE,   show_statistics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"pairs-plots---multiple-variable-relationships","dir":"Articles","previous_headings":"Complete Plot Type Reference","what":"7. Pairs Plots - Multiple Variable Relationships","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Pairs plots show pairwise relationships multiple numeric variables matrix format.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"basic-pairs-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 7. Pairs Plots - Multiple Variable Relationships","what":"Basic Pairs Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Pairs plot of key continuous variables basegraphics(   data = mydata,   plot_type = \"pairs\",   main_title = \"Pairwise Variable Relationships\",   point_type = \"16\",   point_size = 0.8,   color_scheme = \"default\",   add_grid = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"grouped-pairs-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 7. Pairs Plots - Multiple Variable Relationships","what":"Grouped Pairs Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Pairs plot with grouping by clinical variable basegraphics(   data = mydata,   plot_type = \"pairs\",   group_var = \"Sex\",   main_title = \"Variable Relationships by Sex\",   point_type = \"17\",  # Filled triangles   point_size = 0.9,   color_scheme = \"rainbow\",   add_legend = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"clinical-research-pairs-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 7. Pairs Plots - Multiple Variable Relationships","what":"Clinical Research Pairs Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Focus on specific clinical measurements # Note: pairs plot automatically selects all numeric variables basegraphics(   data = mydata,   plot_type = \"pairs\",   group_var = \"Grade\",   main_title = \"Clinical Measurements by Tumor Grade\",   point_type = \"18\",  # Filled diamonds   point_size = 1.0,   color_scheme = \"heat\",   add_legend = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"matrix-plots---multiple-series-visualization","dir":"Articles","previous_headings":"Complete Plot Type Reference","what":"8. Matrix Plots - Multiple Series Visualization","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Matrix plots display multiple data series lines single plot, excellent comparing trends.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"basic-matrix-plot","dir":"Articles","previous_headings":"Complete Plot Type Reference > 8. Matrix Plots - Multiple Series Visualization","what":"Basic Matrix Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Multiple numeric variables as line series basegraphics(   data = mydata,   plot_type = \"matplot\",   main_title = \"Multiple Variable Trends\",   x_label = \"Observation Index\",   y_label = \"Measurement Values\",   color_scheme = \"rainbow\",   add_legend = TRUE,   add_grid = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"clinical-measurements-matrix","dir":"Articles","previous_headings":"Complete Plot Type Reference > 8. Matrix Plots - Multiple Series Visualization","what":"Clinical Measurements Matrix","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Compare multiple clinical measurements over time/patients basegraphics(   data = mydata,   plot_type = \"matplot\",   main_title = \"Clinical Measurement Profiles\",   x_label = \"Patient Index\",   y_label = \"Normalized Values\",   color_scheme = \"heat\",   add_legend = TRUE,   add_grid = TRUE,   custom_limits = TRUE,   y_min = 0,   y_max = 100 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"biomarker-trend-matrix","dir":"Articles","previous_headings":"Complete Plot Type Reference > 8. Matrix Plots - Multiple Series Visualization","what":"Biomarker Trend Matrix","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Multiple biomarker trends basegraphics(   data = mydata,   plot_type = \"matplot\",   main_title = \"Biomarker Expression Profiles\",   x_label = \"Sample Index\",    y_label = \"Expression Level\",   color_scheme = \"topo\",   add_legend = TRUE,   add_grid = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"core-parameters","dir":"Articles","previous_headings":"Parameter Reference Guide","what":"Core Parameters","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"basegraphics(   data = mydata,              # Required: Data frame      # Plot configuration   plot_type = \"scatter\",      # Required: Plot type selection   x_var = \"Age\",             # Required: X-axis variable     y_var = \"OverallTime\",     # Optional: Y-axis variable (bivariate plots)   group_var = \"Sex\",         # Optional: Grouping variable      # Labels and titles   main_title = \"My Plot\",    # Plot main title   x_label = \"X Axis\",        # X-axis label   y_label = \"Y Axis\",        # Y-axis label      # Point styling   point_type = \"16\",         # Point symbol (1-19)   point_size = 1.0,          # Point size multiplier      # Color and appearance   color_scheme = \"rainbow\",  # Color palette   add_grid = TRUE,           # Grid lines   add_legend = TRUE,         # Legend for groups      # Histogram specific   bins = 15,                 # Number of histogram bins      # Advanced features   show_statistics = TRUE,    # Statistical overlays   custom_limits = TRUE,      # Enable custom axis limits   x_min = 0, x_max = 100,   # X-axis range   y_min = 0, y_max = 100    # Y-axis range )"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"statistical-overlays-feature","dir":"Articles","previous_headings":"","what":"Statistical Overlays Feature","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"show_statistics = TRUE parameter adds intelligent statistical information plot type:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"scatter-line-plots","dir":"Articles","previous_headings":"Statistical Overlays Feature","what":"Scatter & Line Plots","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Correlation coefficient (r) R-squared value regression Regression line (scatter plots )","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"histograms","dir":"Articles","previous_headings":"Statistical Overlays Feature","what":"Histograms","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Mean, Median, Standard Deviation Vertical lines mean (red) median (blue)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"box-plots","dir":"Articles","previous_headings":"Statistical Overlays Feature","what":"Box Plots","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Sample sizes group Group counts","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"density-plots","dir":"Articles","previous_headings":"Statistical Overlays Feature","what":"Density Plots","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Mean median values Vertical reference lines","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"custom-axis-limits","dir":"Articles","previous_headings":"Advanced Techniques","what":"Custom Axis Limits","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Precise control plot ranges focused analysis:","code":"# Zoom into specific range basegraphics(   data = mydata,   plot_type = \"scatter\",   x_var = \"Age\",   y_var = \"OverallTime\",    main_title = \"Focused Age-Survival Analysis\",   custom_limits = TRUE,   x_min = 40,      # Focus on ages 40-80   x_max = 80,   y_min = 0,       # Focus on 0-1000 days   y_max = 1000,   show_statistics = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"strategy-1-color-coded-groups","dir":"Articles","previous_headings":"Advanced Techniques > Multi-group Visualization Strategies","what":"Strategy 1: Color-coded Groups","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Use distinct colors for clear group separation basegraphics(   data = mydata,   plot_type = \"scatter\",   x_var = \"MeasurementA\",   y_var = \"MeasurementB\",   group_var = \"Grade\",   color_scheme = \"rainbow\",   point_type = \"16\",   point_size = 1.2,   add_legend = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"strategy-2-symbol-coded-groups","dir":"Articles","previous_headings":"Advanced Techniques > Multi-group Visualization Strategies","what":"Strategy 2: Symbol-coded Groups","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Use different symbols for each group basegraphics(   data = mydata,   plot_type = \"scatter\",   x_var = \"Age\",   y_var = \"OverallTime\",   group_var = \"Sex\",   point_type = \"17\",  # Triangles stand out   color_scheme = \"heat\",   add_legend = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"large-dataset-handling","dir":"Articles","previous_headings":"Advanced Techniques > Performance Optimization Tips","what":"Large Dataset Handling","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# For datasets with 10,000+ points large_subset <- mydata[sample(nrow(mydata), 1000), ]  # Sample for speed  basegraphics(   data = large_subset,   plot_type = \"scatter\",   x_var = \"Age\",   y_var = \"OverallTime\",   point_size = 0.8,     # Smaller points for density   add_grid = FALSE,     # Disable grid for speed   show_statistics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"memory-efficient-plotting","dir":"Articles","previous_headings":"Advanced Techniques > Performance Optimization Tips","what":"Memory-Efficient Plotting","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Minimize memory usage for resource-constrained environments basegraphics(   data = mydata,   plot_type = \"histogram\",   x_var = \"Age\",   bins = 10,            # Fewer bins = less memory   color_scheme = \"default\",  # Simple colors   add_grid = FALSE,   show_statistics = FALSE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"biomarker-analysis-workflow","dir":"Articles","previous_headings":"Clinical Research Applications","what":"Biomarker Analysis Workflow","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Step 1: Distribution analysis basegraphics(   data = mydata,   plot_type = \"histogram\",   x_var = \"MeasurementA\",   main_title = \"Biomarker A Distribution\",   bins = 20,   show_statistics = TRUE )  # Step 2: Correlation analysis basegraphics(   data = mydata,   plot_type = \"scatter\",   x_var = \"MeasurementA\",   y_var = \"MeasurementB\",   main_title = \"Biomarker Correlation\",   show_statistics = TRUE,   add_grid = TRUE )  # Step 3: Outcome association basegraphics(   data = mydata,   plot_type = \"boxplot\",   x_var = \"MeasurementA\",   group_var = \"Death\",   main_title = \"Biomarker by Outcome\",   show_statistics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"survival-analysis-preparation","dir":"Articles","previous_headings":"Clinical Research Applications","what":"Survival Analysis Preparation","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Age distribution in study basegraphics(   data = mydata,   plot_type = \"histogram\",   x_var = \"Age\",   main_title = \"Study Population Age Distribution\",   show_statistics = TRUE )  # Survival time by clinical factors basegraphics(   data = mydata,   plot_type = \"boxplot\",   x_var = \"OverallTime\",   group_var = \"Grade\",   main_title = \"Survival by Tumor Grade\",   color_scheme = \"heat\",   show_statistics = TRUE )  # Age-survival relationship basegraphics(   data = mydata,   plot_type = \"scatter\",   x_var = \"Age\",   y_var = \"OverallTime\",   group_var = \"Sex\",   main_title = \"Age-Survival Relationship\",   show_statistics = TRUE,   add_legend = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"multi-variable-exploration","dir":"Articles","previous_headings":"Clinical Research Applications","what":"Multi-variable Exploration","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Comprehensive variable relationships basegraphics(   data = mydata,   plot_type = \"pairs\",   group_var = \"Grade\",   main_title = \"Clinical Variables by Tumor Grade\",   point_size = 0.8,   color_scheme = \"rainbow\",   add_legend = TRUE )  # Multiple measurement trends basegraphics(   data = mydata,   plot_type = \"matplot\",   main_title = \"Patient Measurement Profiles\",   color_scheme = \"heat\",   add_legend = TRUE,   add_grid = TRUE )"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"clarity-first","dir":"Articles","previous_headings":"Best Practices > Visualization Principles","what":"1. Clarity First","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Use clear, descriptive titles labels Choose appropriate point sizes data density Enable grid lines easier reading","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"color-strategy","dir":"Articles","previous_headings":"Best Practices > Visualization Principles","what":"2. Color Strategy","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Use distinct colors groups (rainbow, heat) Consider colorblind-friendly palettes Limit 6-8 groups clarity","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"statistical-enhancement","dir":"Articles","previous_headings":"Best Practices > Visualization Principles","what":"3. Statistical Enhancement","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Enable statistics insight generation Add regression lines trend analysis Show sample sizes group comparisons","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"performance-optimization","dir":"Articles","previous_headings":"Best Practices > Visualization Principles","what":"4. Performance Optimization","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Sample large datasets interactive exploration Use simpler colors smaller points big data Disable unnecessary features speed","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"exploratory-data-analysis","dir":"Articles","previous_headings":"Best Practices > Common Use Cases","what":"Exploratory Data Analysis","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Quick data overview basegraphics(data = mydata, plot_type = \"pairs\")  # Distribution check basegraphics(data = mydata, plot_type = \"histogram\", x_var = \"Age\", show_statistics = TRUE)  # Outlier detection basegraphics(data = mydata, plot_type = \"boxplot\", x_var = \"MeasurementA\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"publication-ready-plots","dir":"Articles","previous_headings":"Best Practices > Common Use Cases","what":"Publication-Ready Plots","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Clean, professional appearance basegraphics(   data = mydata,   plot_type = \"scatter\",   x_var = \"Age\",   y_var = \"OverallTime\",   main_title = \"Age-Survival Relationship in Study Cohort\",   x_label = \"Age at Diagnosis (years)\",   y_label = \"Overall Survival (days)\",   point_type = \"16\",   point_size = 1.0,   color_scheme = \"default\",   add_grid = TRUE,   show_statistics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"group-comparisons","dir":"Articles","previous_headings":"Best Practices > Common Use Cases","what":"Group Comparisons","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Clear group visualization basegraphics(   data = mydata,   plot_type = \"density\",   x_var = \"Age\",   group_var = \"Sex\",   main_title = \"Age Distribution by Sex\",   color_scheme = \"rainbow\",   add_legend = TRUE,   show_statistics = TRUE )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"no-plot-appears","dir":"Articles","previous_headings":"Troubleshooting > Common Issues and Solutions","what":"No Plot Appears","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Problem: Plot window empty Solutions: - Verify x_var specified - Check variables exist data - Ensure data complete cases selected variables","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"colors-not-showing","dir":"Articles","previous_headings":"Troubleshooting > Common Issues and Solutions","what":"Colors Not Showing","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Problem: points appear color despite group_var Solutions: - Confirm group_var factor character - Check group_var multiple levels - Try different color_scheme options","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"statistics-not-displaying","dir":"Articles","previous_headings":"Troubleshooting > Common Issues and Solutions","what":"Statistics Not Displaying","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Problem: show_statistics = TRUE statistics appear Solutions: - Verify appropriate plot type (support statistics) - Check sufficient data (need >1 observation) - Ensure variables numeric correlation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"pairsmatrix-plots-empty","dir":"Articles","previous_headings":"Troubleshooting > Common Issues and Solutions","what":"Pairs/Matrix Plots Empty","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Problem: Pairs matrix plots show error message Solutions: - Ensure dataset least 2 numeric variables - Check adequate sample size (n > 2) - Remove variables missing values","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"custom-limits-not-working","dir":"Articles","previous_headings":"Troubleshooting > Common Issues and Solutions","what":"Custom Limits Not Working","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Problem: Axis limits don’t change despite custom_limits = TRUE Solutions: - Verify custom_limits = TRUE - Ensure x_min < x_max y_min < y_max - Check limits reasonable data range","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"performance-issues","dir":"Articles","previous_headings":"Troubleshooting > Common Issues and Solutions","what":"Performance Issues","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Problem: Slow plotting large datasets Solutions: - Sample data exploration: data[sample(nrow(data), 1000), ] - Use smaller point sizes - Disable grid statistics speed - Consider simpler color schemes","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"publication-quality-scatter-plot","dir":"Articles","previous_headings":"Advanced Customization Examples","what":"Publication-Quality Scatter Plot","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Comprehensive scatter plot with all features basegraphics(   data = mydata,   plot_type = \"scatter\",   x_var = \"Age\",   y_var = \"OverallTime\",   group_var = \"Grade\",   main_title = \"Survival Analysis: Age vs Overall Time by Tumor Grade\",   x_label = \"Age at Diagnosis (years)\",   y_label = \"Overall Survival Time (days)\",   point_type = \"18\",        # Filled diamonds   point_size = 1.3,   color_scheme = \"heat\",   add_grid = TRUE,   add_legend = TRUE,   show_statistics = TRUE,   custom_limits = TRUE,   x_min = 20,   x_max = 90,   y_min = 0,   y_max = 2000 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"multi-panel-comparison-strategy","dir":"Articles","previous_headings":"Advanced Customization Examples","what":"Multi-Panel Comparison Strategy","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"","code":"# Strategy: Create multiple complementary plots  # Panel 1: Overall distribution basegraphics(   data = mydata,   plot_type = \"histogram\",   x_var = \"Age\",   main_title = \"Panel A: Age Distribution\",   bins = 25,   show_statistics = TRUE )  # Panel 2: Group comparison basegraphics(   data = mydata,   plot_type = \"boxplot\",   x_var = \"Age\",    group_var = \"Sex\",   main_title = \"Panel B: Age by Sex\",   color_scheme = \"rainbow\",   show_statistics = TRUE )  # Panel 3: Relationship analysis basegraphics(   data = mydata,   plot_type = \"scatter\",   x_var = \"Age\",   y_var = \"OverallTime\",   group_var = \"Sex\",   main_title = \"Panel C: Age-Survival Correlation\",   color_scheme = \"rainbow\",   add_legend = TRUE,   show_statistics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"performance-benchmarks","dir":"Articles","previous_headings":"","what":"Performance Benchmarks","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Base R graphics excel performance compared plotting systems: Memory Usage: ~50% less ggplot2 Rendering Speed: ~2-3x faster lattice graphics Load Time: Instant (package dependencies) Large Data: Handles 100,000+ points efficiently Export Quality: High-resolution vector output","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"recommended-analysis-sequence","dir":"Articles","previous_headings":"Integration with ClinicoPath Workflow","what":"Recommended Analysis Sequence","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Data Overview: Start pairs plot Distribution Analysis: Use histograms statistics Group Comparisons: Apply box plots density plots Relationship Analysis: Employ scatter plots correlations Final Visualization: Create publication-ready plots","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/09-basegraphics.html","id":"complement-with-other-modules","dir":"Articles","previous_headings":"Integration with ClinicoPath Workflow","what":"Complement with Other Modules","title":"Base Graphics Visualization - Fast & Customizable Base R Plots","text":"Survival Analysis: Use scatter plots age-survival relationships ROC Analysis: Apply density plots biomarker distributions Cross-tabulation: Use bar plots categorical frequencies Decision Analysis: Employ box plots outcome comparisons comprehensive guide demonstrates full power base R graphics ClinicoPath Base Graphics module. combination performance, flexibility, zero dependencies makes ideal exploratory analysis publication-quality visualization clinical research.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"introduction-to-economist-style-distribution-plots","dir":"Articles","previous_headings":"","what":"Introduction to Economist-Style Distribution Plots","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Economist magazine revolutionized data visualization journalism distinctive, elegant approach presenting statistical distributions. style emphasizes clarity, sophistication, effective communication complex statistical information compact, visually appealing format.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"design-philosophy","dir":"Articles","previous_headings":"Introduction to Economist-Style Distribution Plots > What Makes Economist-Style Visualization Special?","what":"Design Philosophy","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Diminutive Excellence: Maximum information minimal space Statistical Rigor: Emphasizes key percentiles distribution characteristics Professional Typography: Clean, readable font choices proper hierarchy Elegant Simplicity: Sophisticated appearance without unnecessary complexity Editorial Quality: Publication-ready formatting professional reports","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"visual-standards","dir":"Articles","previous_headings":"Introduction to Economist-Style Distribution Plots > What Makes Economist-Style Visualization Special?","what":"Visual Standards","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Typography: ITC Officina Sans family systematic size hierarchy Color Palette: Carefully selected colors highlighting key percentiles Distribution Elements: Strategic emphasis 10th, 50th, 90th percentiles Layout: Efficient use space clear visual hierarchy Statistical Integration: Built-statistical tests effect size calculations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"when-to-use-economist-style-distribution-plots","dir":"Articles","previous_headings":"Introduction to Economist-Style Distribution Plots","what":"When to Use Economist-Style Distribution Plots","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Perfect : - Clinical research publications requiring elegant distribution comparisons - Medical journal articles showing treatment outcome distributions - Healthcare cost analysis resource utilization studies - Biomarker distribution analysis across patient populations - Quality improvement reports comparing institutional performance - Academic presentations requiring publication-quality visualizations Key Advantages: - Instant professional credibility sophistication - Effective communication distribution characteristics - Space-efficient design ideal publications - Built-statistical analysis interpretation - Proven readability across diverse audiences","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"installation-requirements","dir":"Articles","previous_headings":"Getting Started","what":"Installation Requirements","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Economist-style plots require ggeconodist package optimal functionality:","code":"# Install from CRAN install.packages(\"ggeconodist\")  # Or install from GitHub for latest features remotes::install_github(\"hrbrmstr/ggeconodist\")  # Alternative repository install.packages(\"ggeconodist\", repos = \"https://cinc.rud.is\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"font-requirements","dir":"Articles","previous_headings":"Getting Started","what":"Font Requirements","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"authentic Economist styling, install recommended fonts:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"optimal-fonts-recommended","dir":"Articles","previous_headings":"Getting Started > Font Requirements","what":"Optimal Fonts (Recommended)","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"ITC Officina Sans: Economist’s primary font (commercial license required) IBM Plex Sans: Excellent free alternative Google Fonts Verdana: High-quality substitute, usually pre-installed","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"acceptable-fallbacks","dir":"Articles","previous_headings":"Getting Started > Font Requirements","what":"Acceptable Fallbacks","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Arial/Helvetica: Standard system fonts work well System Sans: Default fonts ensure compatibility Note: module automatically detects uses best available font, providing installation guidance optimal fonts aren’t found.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"understanding-distribution-characteristics","dir":"Articles","previous_headings":"Clinical Research Applications","what":"Understanding Distribution Characteristics","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Economist-style distribution plots excel revealing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"treatment-response-patterns","dir":"Articles","previous_headings":"Clinical Research Applications > Understanding Distribution Characteristics","what":"Treatment Response Patterns","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Comparison outcome distributions across treatment groups Identification treatment response heterogeneity Visualization therapeutic windows optimal dosing ranges","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"biomarker-analysis","dir":"Articles","previous_headings":"Clinical Research Applications > Understanding Distribution Characteristics","what":"Biomarker Analysis","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Distribution biomarker values across patient subpopulations Identification diagnostic thresholds reference ranges Comparison biomarker performance across different assays","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"healthcare-economics","dir":"Articles","previous_headings":"Clinical Research Applications > Understanding Distribution Characteristics","what":"Healthcare Economics","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Cost distribution analysis across institutions regions Resource utilization patterns efficiency comparisons Quality metric distributions showing performance variation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"population-health-studies","dir":"Articles","previous_headings":"Clinical Research Applications > Understanding Distribution Characteristics","what":"Population Health Studies","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Age-specific disease prevalence distributions Geographic variation health outcomes Temporal trends epidemiological indicators","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"example-1-treatment-outcome-distribution-analysis","dir":"Articles","previous_headings":"Practical Examples","what":"Example 1: Treatment Outcome Distribution Analysis","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"example demonstrates comparing treatment outcomes groups using histopathology dataset: Clinical Interpretation: - 10th, 50th, 90th percentiles clearly highlighted - Statistical comparison automatically included - Effect size calculation provides clinical significance context - Compact design suitable publication","code":"library(jjstatsplot)  # Load the histopathology dataset data(\"histopathology\")  # Basic Economist-style distribution plot # Comparing overall survival time by treatment group economistplots(   data = histopathology,   y_var = \"OverallTime\",   x_var = \"Group\",   plot_title = \"Treatment Response Distribution Analysis\",   x_title = \"Treatment Group\",   y_title = \"Overall Survival Time (months)\",   caption_text = \"Source: Histopathology study (n=250)\",   economist_theme = TRUE,   show_legend = TRUE,   add_statistics = TRUE,   stat_method = \"anova\",   effect_size = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"example-2-biomarker-distribution-by-disease-status","dir":"Articles","previous_headings":"Practical Examples","what":"Example 2: Biomarker Distribution by Disease Status","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Analyzing biomarker distributions across disease groups: Key Features: - Faceting allows subgroup analysis sex - Non-parametric statistical testing non-normal distributions - Individual points overlay detailed data exploration - Comprehensive summary statistics included","code":"# Compare measurement distributions by disease status economistplots(   data = histopathology,   y_var = \"MeasurementA\",   x_var = \"Disease Status\",   facet_var = \"Sex\",   plot_title = \"Biomarker A Distribution by Disease Status\",   x_title = \"Disease Status\",   y_title = \"Biomarker A Level\",   caption_text = \"Faceted by patient sex\",   distribution_style = \"enhanced\",   show_points = TRUE,   point_jitter = 0.15,   add_statistics = TRUE,   stat_method = \"kruskal\",   summary_statistics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"example-3-multi-group-age-distribution-analysis","dir":"Articles","previous_headings":"Practical Examples","what":"Example 3: Multi-Group Age Distribution Analysis","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Examining age distributions across multiple clinical categories: Advanced Features: - Custom percentile coloring enhanced visualization - Color grouping clinical variables - Publication-ready styling - Pairwise comparison annotations","code":"# Age distribution across mortality groups economistplots(   data = histopathology,   y_var = \"Age\",   x_var = \"Mortality5yr\",   color_var = \"Grade_Level\",   plot_title = \"Age Distribution by 5-Year Mortality\",   x_title = \"5-Year Mortality Status\",   y_title = \"Patient Age (years)\",   caption_text = \"Colored by tumor grade level\",   distribution_style = \"publication\",   percentile_colors = TRUE,   tenth_color = \"#c7254e\",   median_color = \"#2c3e50\",   ninetieth_color = \"#18bc9c\",   alpha_level = 0.8,   comparison_annotations = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"built-in-statistical-tests","dir":"Articles","previous_headings":"Statistical Integration","what":"Built-in Statistical Tests","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"module provides comprehensive statistical analysis:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"parametric-tests","dir":"Articles","previous_headings":"Statistical Integration > Built-in Statistical Tests","what":"Parametric Tests","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"ANOVA: normally distributed continuous variables t-test: two-group comparisons normal distributions","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"non-parametric-tests","dir":"Articles","previous_headings":"Statistical Integration > Built-in Statistical Tests","what":"Non-parametric Tests","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Kruskal-Wallis: non-normal distributions ordinal data Wilcoxon: two-group non-parametric comparisons","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"effect-size-measures","dir":"Articles","previous_headings":"Statistical Integration > Built-in Statistical Tests","what":"Effect Size Measures","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Eta-squared (η²): ANOVA effect sizes Cohen’s d: t-test effect sizes Automatic interpretation effect magnitude","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"summary-statistics","dir":"Articles","previous_headings":"Statistical Integration","what":"Summary Statistics","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Comprehensive distribution summaries include: - Central Tendencies: Mean, median - Variability: Standard deviation, interquartile range - Key Percentiles: 10th, 25th, 75th, 90th percentiles - Range Information: Minimum, maximum values - Sample Sizes: Group-specific counts","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"distribution-styles","dir":"Articles","previous_headings":"Customization Options > Visual Styling","what":"Distribution Styles","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Classic Economist: Traditional Economist magazine styling Minimal: Clean, understated appearance Enhanced: Additional visual elements exploration Publication: Optimized academic journals","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"color-customization","dir":"Articles","previous_headings":"Customization Options > Visual Styling","what":"Color Customization","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Percentile Colors: Customize 10th, 50th, 90th percentile highlighting Distribution Fill: Main distribution area coloring Transparency: Adjustable alpha levels overlapping elements","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"layout-options","dir":"Articles","previous_headings":"Customization Options > Visual Styling","what":"Layout Options","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Orientation: Vertical horizontal plot layouts Faceting: Multi-panel displays subgroup analysis Alignment: Left-aligned titles following Economist conventions","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"outlier-treatment","dir":"Articles","previous_headings":"Customization Options > Statistical Configuration","what":"Outlier Treatment","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Show : Display data points including outliers Hide Extreme: Remove outliers beyond 3 IQR Mark Outliers: Highlight outliers retaining Transform: Log transformation highly skewed data","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"point-display","dir":"Articles","previous_headings":"Customization Options > Statistical Configuration","what":"Point Display","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Individual Points: Overlay actual data points Jitter Control: Adjust horizontal spreading clarity Size Transparency: Optimize point visibility","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"variable-selection","dir":"Articles","previous_headings":"Best Practices for Clinical Research > Design Recommendations","what":"Variable Selection","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Continuous Variables: Choose clinically meaningful measures Grouping Variables: Use clear, mutually exclusive categories Sample Sizes: Ensure adequate power statistical comparisons","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"statistical-considerations","dir":"Articles","previous_headings":"Best Practices for Clinical Research > Design Recommendations","what":"Statistical Considerations","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Distribution Assessment: Check normality test selection Effect Size Reporting: Always include practical significance measures Multiple Comparisons: Consider adjustment multiple testing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"publication-standards","dir":"Articles","previous_headings":"Best Practices for Clinical Research > Design Recommendations","what":"Publication Standards","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Title Clarity: Descriptive titles explain comparison Axis Labels: Clear, complete variable descriptions Caption Information: Include sample sizes data sources Statistical Reporting: Follow discipline-specific guidelines","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"reading-distribution-plots","dir":"Articles","previous_headings":"Best Practices for Clinical Research > Interpretation Guidelines","what":"Reading Distribution Plots","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Width Variation: Indicates frequency/density level Height Range: Shows spread values within groups Percentile Positions: Key reference points comparison Shape Characteristics: Reveals skewness, modality, outliers","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"clinical-significance","dir":"Articles","previous_headings":"Best Practices for Clinical Research > Interpretation Guidelines","what":"Clinical Significance","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Statistical vs. Clinical: Distinguish statistical practical differences Effect Sizes: Interpret magnitude using established benchmarks Confidence Intervals: Consider precision estimates Population Generalizability: Assess external validity","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"font-related-problems","dir":"Articles","previous_headings":"Troubleshooting and Support > Common Issues","what":"Font-Related Problems","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Font Detected: Restart jamovi font installation Rendering Issues: Verify system-wide font installation Fallback Fonts: Module automatically uses best available options","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"data-related-issues","dir":"Articles","previous_headings":"Troubleshooting and Support > Common Issues","what":"Data-Related Issues","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Missing Values: Module handles missing data automatically Insufficient Sample Sizes: Warnings provided underpowered comparisons Distribution Assumptions: Guidance appropriate test selection","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"visualization-problems","dir":"Articles","previous_headings":"Troubleshooting and Support > Common Issues","what":"Visualization Problems","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Overlapping Elements: Adjust transparency jittering Scaling Issues: Customize axis breaks ranges Export Quality: Optimize plot dimensions intended use","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"documentation-resources","dir":"Articles","previous_headings":"Troubleshooting and Support > Getting Help","what":"Documentation Resources","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Module Help: Built-guidance examples Package Documentation: Comprehensive function references Vignette Library: Extensive clinical examples","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"community-support","dir":"Articles","previous_headings":"Troubleshooting and Support > Getting Help","what":"Community Support","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"GitHub Issues: Report bugs request features User Forums: Community discussion tips Clinical Examples: Real-world application galleries","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"r-code-generation","dir":"Articles","previous_headings":"Advanced Features > Reproducible Research","what":"R Code Generation","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"module automatically generates reproducible R code:","code":"# Example of generated code library(ggeconodist) library(ggplot2)  # Create the plot plot <- ggplot(data, aes(x = Group, y = OverallTime)) +   geom_econodist() +   theme_econodist()  # Add Economist legend if (show_legend) {   plot <- add_econodist_legend(plot) }  # Display the plot print(plot)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"documentation-standards","dir":"Articles","previous_headings":"Advanced Features > Reproducible Research","what":"Documentation Standards","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Methodology Description: Clear explanation analytical approach Parameter Documentation: Complete listing analysis options Reproducibility Information: Version numbers dependencies","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"report-generation","dir":"Articles","previous_headings":"Advanced Features > Integration with Clinical Workflows","what":"Report Generation","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Automated Reports: Integration R Markdown Quarto Template Libraries: Pre-built templates common analyses Publication Pipelines: Streamlined manuscript preparation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"quality-assurance","dir":"Articles","previous_headings":"Advanced Features > Integration with Clinical Workflows","what":"Quality Assurance","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Validation Checks: Built-data quality assessments Statistical Assumptions: Automated assumption testing Peer Review: Standardized output collaborative review","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Economist-style distribution plots represent sophisticated approach statistical visualization combines aesthetic excellence analytical rigor. clinical researchers, plots offer: Professional Quality: Publication-ready visualizations enhance research impact Statistical Integration: Comprehensive analysis appropriate test selection Clinical Relevance: Focus distribution characteristics important medical interpretation Accessibility: Clear communication suitable diverse audiences integration Economist’s design principles clinical research needs creates powerful tool advancing evidence-based medicine superior data visualization.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/12-economistplots.html","id":"key-takeaways","dir":"Articles","previous_headings":"Conclusion","what":"Key Takeaways","title":"Economist-Style Distribution Plots - Professional Data Visualization","text":"Visual Excellence: Economist-style plots provide professional, sophisticated appearance Statistical Rigor: Built-analysis ensures appropriate statistical testing Clinical Utility: Designed specifically healthcare research applications Reproducibility: Automated code generation supports open science practices Accessibility: Clear design principles enhance communication effectiveness optimal results, combine careful variable selection, appropriate statistical testing, thoughtful design customization create visualizations effectively communicate research findings clinical academic audiences.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/13-quick-reference.html","id":"jjstatsplot-plot-gallery","dir":"Articles","previous_headings":"","what":"jjstatsplot Plot Gallery","title":"jjstatsplot Plot Gallery","text":"gallery provides quick visual reference main plots can create ClinicoPath jamovi module. entry includes brief description use plot example using clinical data.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/13-quick-reference.html","id":"histogram","dir":"Articles","previous_headings":"jjstatsplot Plot Gallery","what":"Histogram","title":"jjstatsplot Plot Gallery","text":"use : explore distribution single continuous variable (e.g., age, lab value). jamovi Location: JJStatsPlot -> Continuous -> Histogram","code":"data(\"breast_cancer_data\", package = \"ClinicoPath\") jjhistostats(   data = breast_cancer_data,   dep = \"age\",   title = \"Distribution of Patient Age\",   xlab = \"Age (years)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/13-quick-reference.html","id":"box-violin-plot-between-groups","dir":"Articles","previous_headings":"jjstatsplot Plot Gallery","what":"Box-Violin Plot (Between Groups)","title":"jjstatsplot Plot Gallery","text":"use : compare continuous variable two independent groups. jamovi Location: JJStatsPlot -> Categorical vs Continuous -> Box-Violin Plots (Groups)","code":"data(\"breast_cancer_data\", package = \"ClinicoPath\") jjbetweenstats(   data = breast_cancer_data,   dep = \"age\",   group = \"cancer_status\",   title = \"Age Distribution by Cancer Status\",   xlab = \"Cancer Status\",   ylab = \"Age (years)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/13-quick-reference.html","id":"bar-chart","dir":"Articles","previous_headings":"jjstatsplot Plot Gallery","what":"Bar Chart","title":"jjstatsplot Plot Gallery","text":"use : show relationship two categorical variables. jamovi Location: JJStatsPlot -> Categorical vs Categorical -> Bar Charts","code":"data(\"breast_cancer_data\", package = \"ClinicoPath\") jjbarstats(   data = breast_cancer_data,   dep = \"mammography\",   group = \"cancer_status\",   title = \"Mammography Results by Cancer Status\",   xlab = \"Cancer Status\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/13-quick-reference.html","id":"scatter-plot","dir":"Articles","previous_headings":"jjstatsplot Plot Gallery","what":"Scatter Plot","title":"jjstatsplot Plot Gallery","text":"use : explore relationship correlation two continuous variables. jamovi Location: JJStatsPlot -> Continuous vs Continuous -> Scatter Plot","code":"data(\"melanoma\", package = \"boot\") jjscatterstats(   data = melanoma,   x = \"age\",   y = \"thickness\",   title = \"Correlation between Age and Tumor Thickness\",   xlab = \"Age (years)\",   ylab = \"Tumor Thickness (mm)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/13-quick-reference.html","id":"correlation-matrix","dir":"Articles","previous_headings":"jjstatsplot Plot Gallery","what":"Correlation Matrix","title":"jjstatsplot Plot Gallery","text":"use : visualize correlations multiple continuous variables . jamovi Location: JJStatsPlot -> Continuous vs Continuous -> Correlation Matrix","code":"data(\"melanoma\", package = \"boot\") jjcorrmat(   data = melanoma,   dep = c(\"age\", \"thickness\", \"time\"),   title = \"Correlation Matrix of Melanoma Variables\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/13-quick-reference.html","id":"within-subject-plot-paired-data","dir":"Articles","previous_headings":"jjstatsplot Plot Gallery","what":"Within-Subject Plot (Paired Data)","title":"jjstatsplot Plot Gallery","text":"use : compare continuous variable subjects two time points (e.g., treatment). jamovi Location: JJStatsPlot -> Continuous -> Within Subject","code":"# Create simulated paired data set.seed(123) long_data <- data.frame(   patient_id = rep(1:20, 2),   timepoint = rep(c(\"Before\", \"After\"), each = 20),   biomarker = c(rnorm(20, 100, 15), rnorm(20, 80, 15)) )  jjwithinstats(   data = long_data,   x = \"timepoint\",   y = \"biomarker\",   id = \"patient_id\",   paired = TRUE,   title = \"Biomarker Levels Before and After Treatment\",   ylab = \"Biomarker Level\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/13-quick-reference.html","id":"raincloud-plot","dir":"Articles","previous_headings":"jjstatsplot Plot Gallery","what":"Raincloud Plot","title":"jjstatsplot Plot Gallery","text":"use : show distribution, individual data points, summary statistics one plot. enhanced version violin box plot. jamovi Location: JJStatsPlot -> Advanced -> Raincloud Plot","code":"# Load raincloud data data(\"advancedraincloud_data\", package = \"ClinicoPath\")  # Ensure the grouping variable is a factor advancedraincloud_data$group <- factor(advancedraincloud_data$group)  advancedraincloud(   data = advancedraincloud_data,   dep = \"score\",   group = \"group\",   title = \"Score Distribution by Group with Raincloud Plot\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Clinical Classification Analysis with Machine Learning","text":"classification function ClinicoPath provides comprehensive machine learning capabilities clinical pathological research. tool enables researchers build predictive models medical diagnosis, prognosis, treatment response using various state---art algorithms.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"clinical-motivation","dir":"Articles","previous_headings":"Introduction","what":"Clinical Motivation","title":"Clinical Classification Analysis with Machine Learning","text":"Machine learning classification crucial modern medical research : Diagnostic Support: Automated diagnosis pathological features Risk Stratification: Patient classification risk categories Treatment Selection: Personalized medicine approaches Biomarker Discovery: Identifying predictive molecular signatures Outcome Prediction: Prognosis survival classification Quality Control: Automated detection quality issues Classification algorithms help clinicians make data-driven decisions identifying complex patterns medical data may apparent traditional statistical methods.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"decision-trees","dir":"Articles","previous_headings":"Introduction > Available Algorithms","what":"Decision Trees","title":"Clinical Classification Analysis with Machine Learning","text":"Best : Interpretable rules, feature importance Advantages: Easy understand, handles missing values Use cases: Clinical decision support, guideline development","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"random-forests","dir":"Articles","previous_headings":"Introduction > Available Algorithms","what":"Random Forests","title":"Clinical Classification Analysis with Machine Learning","text":"Best : High accuracy, robust predictions Advantages: Handles overfitting, feature importance Use cases: Biomarker panels, complex diagnoses","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"k-nearest-neighbors-knn","dir":"Articles","previous_headings":"Introduction > Available Algorithms","what":"K-Nearest Neighbors (KNN)","title":"Clinical Classification Analysis with Machine Learning","text":"Best : Non-linear relationships, similarity-based classification Advantages: assumptions data distribution Use cases: Image analysis, pattern recognition","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"naive-bayes","dir":"Articles","previous_headings":"Introduction > Available Algorithms","what":"Naive Bayes","title":"Clinical Classification Analysis with Machine Learning","text":"Best : High-dimensional data, baseline models Advantages: Fast, works well small datasets Use cases: Text classification, initial screening","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"logistic-regression","dir":"Articles","previous_headings":"Introduction > Available Algorithms","what":"Logistic Regression","title":"Clinical Classification Analysis with Machine Learning","text":"Best : Linear relationships, interpretability Advantages: Provides probabilities, well-established Use cases: Risk scores, traditional clinical models","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"support-vector-machines-svm","dir":"Articles","previous_headings":"Introduction > Available Algorithms","what":"Support Vector Machines (SVM)","title":"Clinical Classification Analysis with Machine Learning","text":"Best : High-dimensional data, complex boundaries Advantages: Handles non-linear relationships well Use cases: Genomic data, imaging analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"package-setup","dir":"Articles","previous_headings":"Introduction","what":"Package Setup","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"library(jjstatsplot) library(dplyr) library(knitr)  # Load the breast cancer dataset data(\"BreastCancer\")  # Display dataset structure cat(\"BreastCancer dataset structure:\\\\n\") str(BreastCancer) cat(\"\\\\nClass distribution:\\\\n\") table(BreastCancer$Class)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"example-1-decision-tree-classification","dir":"Articles","previous_headings":"Basic Classification Analysis","what":"Example 1: Decision Tree Classification","title":"Clinical Classification Analysis with Machine Learning","text":"Let’s start basic decision tree breast cancer diagnosis:","code":"# Basic decision tree classification # Note: Function available in jamovi interface classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\", \"Marg.adhesion\"),   classifier = \"singleDecisionTree\",   testing = \"split\",   testSize = 0.3,   complexity = 0.01,   maxDepth = 10,   reporting = c(\"confusionMatrix\", \"classifMetrices\") )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"interpretation","dir":"Articles","previous_headings":"Basic Classification Analysis > Example 1: Decision Tree Classification","what":"Interpretation","title":"Clinical Classification Analysis with Machine Learning","text":"results show: - Confusion Matrix: Actual vs. predicted classifications - Accuracy: Overall prediction accuracy - Precision/Recall: Per-class performance metrics - Tree Structure: Decision rules interpretation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"example-2-random-forest-classification","dir":"Articles","previous_headings":"Basic Classification Analysis","what":"Example 2: Random Forest Classification","title":"Clinical Classification Analysis with Machine Learning","text":"Building ensemble model improved accuracy:","code":"# Random forest classification classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\", \"Marg.adhesion\",              \"Epith.c.size\", \"Bare.nuclei\"),   classifier = \"randomForest\",   testing = \"crossValidation\",   noOfFolds = 10,   noOfTrees = 100,   sampleFraction = 0.8,   splitRule = \"gini\",   reporting = c(\"confusionMatrix\", \"classifMetrices\", \"AUC\"),   printRandForest = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"clinical-significance","dir":"Articles","previous_headings":"Basic Classification Analysis > Example 2: Random Forest Classification","what":"Clinical Significance","title":"Clinical Classification Analysis with Machine Learning","text":"Random forests provide: - Higher accuracy ensemble averaging - Feature importance rankings - Robust performance across different datasets - Reduced overfitting compared single trees","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"k-nearest-neighbors-knn-1","dir":"Articles","previous_headings":"Advanced Classification Methods","what":"K-Nearest Neighbors (KNN)","title":"Clinical Classification Analysis with Machine Learning","text":"similarity-based classification:","code":"# KNN classification with different distance metrics classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\"),   classifier = \"knn\",   knnNeighbors = 5,   knnDistance = \"euclidean\",   testing = \"split\",   testSize = 0.25,   reporting = c(\"confusionMatrix\", \"AUC\") )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"distance-metrics-comparison","dir":"Articles","previous_headings":"Advanced Classification Methods > K-Nearest Neighbors (KNN)","what":"Distance Metrics Comparison","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Compare different distance metrics distance_metrics <- c(\"euclidean\", \"manhattan\", \"minkowski\")  for (metric in distance_metrics) {   cat(paste0(\"\\\\n\", metric, \" Distance Metric:\\\\n\"))   classification(     data = BreastCancer,     dep = \"Class\",     indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\"),     classifier = \"knn\",     knnNeighbors = 5,     knnDistance = metric,     testing = \"split\",     testSize = 0.25   ) }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"support-vector-machines-svm-1","dir":"Articles","previous_headings":"Advanced Classification Methods","what":"Support Vector Machines (SVM)","title":"Clinical Classification Analysis with Machine Learning","text":"complex decision boundaries:","code":"# SVM with radial basis function kernel classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\", \"Marg.adhesion\"),   classifier = \"svm\",   svmKernel = \"radial\",   svmCost = 1.0,   svmGamma = 1.0,   testing = \"crossValidation\",   noOfFolds = 5,   reporting = c(\"confusionMatrix\", \"classifMetrices\", \"AUC\") )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"kernel-comparison","dir":"Articles","previous_headings":"Advanced Classification Methods > Support Vector Machines (SVM)","what":"Kernel Comparison","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Compare different SVM kernels svm_kernels <- c(\"linear\", \"radial\", \"polynomial\")  for (kernel in svm_kernels) {   cat(paste0(\"\\\\n\", kernel, \" Kernel:\\\\n\"))   classification(     data = BreastCancer,     dep = \"Class\",     indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\"),     classifier = \"svm\",     svmKernel = kernel,     svmCost = 1.0,     svmGamma = 1.0,     testing = \"split\"   ) }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"comprehensive-clinical-evaluation","dir":"Articles","previous_headings":"Clinical Performance Metrics","what":"Comprehensive Clinical Evaluation","title":"Clinical Classification Analysis with Machine Learning","text":"medical applications, clinical metrics essential:","code":"# Classification with clinical performance metrics classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\", \"Marg.adhesion\"),   classifier = \"randomForest\",   testing = \"crossValidation\",   noOfFolds = 10,   reportClinicalMetrics = TRUE,   reportConfidenceIntervals = TRUE,   bootstrapSamples = 1000,   reporting = c(\"confusionMatrix\", \"classifMetrices\", \"AUC\") )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"clinical-metrics-interpretation","dir":"Articles","previous_headings":"Clinical Performance Metrics > Comprehensive Clinical Evaluation","what":"Clinical Metrics Interpretation","title":"Clinical Classification Analysis with Machine Learning","text":"Sensitivity (True Positive Rate): - Proportion actual positives correctly identified - Critical screening: high sensitivity minimizes false negatives Specificity (True Negative Rate): - Proportion actual negatives correctly identified - Important confirmatory tests: high specificity minimizes false positives Positive Predictive Value (PPV): - Probability positive result truly positive - Depends disease prevalence test characteristics Negative Predictive Value (NPV): - Probability negative result truly negative - High NPV important ruling disease Likelihood Ratios: - Positive LR: much positive test increases disease odds - Negative LR: much negative test decreases disease odds","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"confidence-intervals-for-clinical-metrics","dir":"Articles","previous_headings":"Clinical Performance Metrics","what":"Confidence Intervals for Clinical Metrics","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Bootstrap confidence intervals for clinical metrics classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\"),   classifier = \"singleDecisionTree\",   testing = \"split\",   testSize = 0.3,   reportClinicalMetrics = TRUE,   reportConfidenceIntervals = TRUE,   bootstrapSamples = 1000 )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"addressing-imbalanced-datasets","dir":"Articles","previous_headings":"Class Imbalance Handling","what":"Addressing Imbalanced Datasets","title":"Clinical Classification Analysis with Machine Learning","text":"Medical datasets often class imbalance:","code":"# Handle class imbalance with upsampling classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\"),   classifier = \"randomForest\",   balancingMethod = \"upsample\",   testing = \"crossValidation\",   noOfFolds = 5,   reportClinicalMetrics = TRUE ) # Handle class imbalance with downsampling classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\"),   classifier = \"randomForest\",   balancingMethod = \"downsample\",   testing = \"crossValidation\",   noOfFolds = 5,   reportClinicalMetrics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"balancing-method-selection","dir":"Articles","previous_headings":"Class Imbalance Handling > Addressing Imbalanced Datasets","what":"Balancing Method Selection","title":"Clinical Classification Analysis with Machine Learning","text":"Upsampling: - Replicates minority class samples - Preserves original data - Risk overfitting minority class Downsampling: - Reduces majority class samples - Balanced training set - Loss potentially useful data SMOTE (Future implementation): - Generates synthetic minority samples - sophisticated simple replication - Better generalization","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"cross-validation-for-robust-assessment","dir":"Articles","previous_headings":"Validation Strategies","what":"Cross-Validation for Robust Assessment","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Comprehensive cross-validation classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\", \"Marg.adhesion\"),   classifier = \"randomForest\",   testing = \"crossValidation\",   noOfFolds = 10,   reportClinicalMetrics = TRUE,   reportConfidenceIntervals = TRUE,   bootstrapSamples = 500 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"bootstrap-validation","dir":"Articles","previous_headings":"Validation Strategies","what":"Bootstrap Validation","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Bootstrap validation for confidence assessment classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\"),   classifier = \"singleDecisionTree\",   validateMethod = \"bootstrap\",   bootstrapSamples = 1000,   reportClinicalMetrics = TRUE,   reportConfidenceIntervals = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"holdout-validation","dir":"Articles","previous_headings":"Validation Strategies","what":"Holdout Validation","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Simple train-test split validation classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\"),   classifier = \"logisticRegression\",   validateMethod = \"holdout\",   testSize = 0.3,   reportClinicalMetrics = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"algorithm-performance-comparison","dir":"Articles","previous_headings":"Model Comparison and Selection","what":"Algorithm Performance Comparison","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Compare multiple algorithms algorithms <- c(\"singleDecisionTree\", \"randomForest\", \"knn\", \"naiveBayes\", \"logisticRegression\")  cat(\"Algorithm Performance Comparison:\\\\n\\\\n\")  for (algorithm in algorithms) {   cat(paste0(\"Algorithm: \", algorithm, \"\\\\n\"))      result <- classification(     data = BreastCancer,     dep = \"Class\",     indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\", \"Marg.adhesion\"),     classifier = algorithm,     testing = \"crossValidation\",     noOfFolds = 5,     reportClinicalMetrics = TRUE,     knnNeighbors = if(algorithm == \"knn\") 5 else 5,  # Default for non-KNN     noOfTrees = if(algorithm == \"randomForest\") 50 else 10  # Default for non-RF   )      cat(\"\\\\n\") }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"feature-selection-impact","dir":"Articles","previous_headings":"Model Comparison and Selection","what":"Feature Selection Impact","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Compare performance with different feature sets feature_sets <- list(   \"Basic\" = c(\"Cl.thickness\", \"Cell.size\"),   \"Extended\" = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\", \"Marg.adhesion\"),   \"Comprehensive\" = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\", \"Marg.adhesion\",                       \"Epith.c.size\", \"Bare.nuclei\", \"Bl.cromatin\") )  for (set_name in names(feature_sets)) {   cat(paste0(\"\\\\nFeature Set: \", set_name, \"\\\\n\"))      classification(     data = BreastCancer,     dep = \"Class\",     indep = feature_sets[[set_name]],     classifier = \"randomForest\",     testing = \"crossValidation\",     noOfFolds = 5,     reportClinicalMetrics = TRUE   ) }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"optimizing-clinical-cutoffs","dir":"Articles","previous_headings":"Clinical Decision Thresholds","what":"Optimizing Clinical Cutoffs","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Test different clinical decision thresholds cutoff_values <- c(0.3, 0.5, 0.7)  cat(\"Clinical Cutoff Optimization:\\\\n\\\\n\")  for (cutoff in cutoff_values) {   cat(paste0(\"Clinical Cutoff: \", cutoff, \"\\\\n\"))      classification(     data = BreastCancer,     dep = \"Class\",     indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\"),     classifier = \"randomForest\",     clinicalCutoff = cutoff,     testing = \"split\",     testSize = 0.3,     reportClinicalMetrics = TRUE   )      cat(\"\\\\n\") }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"cutoff-selection-guidelines","dir":"Articles","previous_headings":"Clinical Decision Thresholds > Optimizing Clinical Cutoffs","what":"Cutoff Selection Guidelines","title":"Clinical Classification Analysis with Machine Learning","text":"Low Cutoff (0.3): High sensitivity, screening Standard Cutoff (0.5): Balanced sensitivity/specificity High Cutoff (0.7): High specificity, confirmatory testing","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"roc-curves-and-auc","dir":"Articles","previous_headings":"Visualization and Interpretation","what":"ROC Curves and AUC","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# ROC curve analysis classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\", \"Marg.adhesion\"),   classifier = \"randomForest\",   testing = \"split\",   testSize = 0.3,   reporting = c(\"AUC\", \"confusionMatrix\"),   noOfTrees = 100 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"decision-tree-visualization","dir":"Articles","previous_headings":"Visualization and Interpretation","what":"Decision Tree Visualization","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Visualize decision tree structure classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\"),   classifier = \"singleDecisionTree\",   testing = \"split\",   testSize = 0.3,   plotDecisionTree = TRUE,   complexity = 0.01,   maxDepth = 5 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"prediction-frequencies","dir":"Articles","previous_headings":"Visualization and Interpretation","what":"Prediction Frequencies","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Visualize prediction distributions classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\"),   classifier = \"randomForest\",   testing = \"split\",   testSize = 0.3,   predictedFreqRF = TRUE,   printRandForest = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"case-study-1-breast-cancer-diagnosis","dir":"Articles","previous_headings":"Clinical Applications and Case Studies","what":"Case Study 1: Breast Cancer Diagnosis","title":"Clinical Classification Analysis with Machine Learning","text":"Automated pathological diagnosis cellular features:","code":"# Comprehensive breast cancer classification classification(   data = BreastCancer,   dep = \"Class\",   indep = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\", \"Marg.adhesion\",              \"Epith.c.size\", \"Bare.nuclei\", \"Bl.cromatin\", \"Normal.nucleoli\"),   classifier = \"randomForest\",   testing = \"crossValidation\",   noOfFolds = 10,   noOfTrees = 200,   balancingMethod = \"none\",  # Classes are reasonably balanced   reportClinicalMetrics = TRUE,   reportConfidenceIntervals = TRUE,   bootstrapSamples = 1000,   reporting = c(\"confusionMatrix\", \"classifMetrices\", \"AUC\") )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"clinical-impact","dir":"Articles","previous_headings":"Clinical Applications and Case Studies > Case Study 1: Breast Cancer Diagnosis","what":"Clinical Impact","title":"Clinical Classification Analysis with Machine Learning","text":"model provides: - Objective diagnostic support pathologists - Standardized assessment criteria - Quality control diagnostic consistency - Training support medical students","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"case-study-2-risk-stratification-model","dir":"Articles","previous_headings":"Clinical Applications and Case Studies","what":"Case Study 2: Risk Stratification Model","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Risk stratification using clinical features # Using histopathology dataset for demonstration data(\"histopathology\")  classification(   data = histopathology,   dep = \"Outcome\",   indep = c(\"Age\", \"Grade\", \"TStage\", \"LVI\", \"PNI\"),   classifier = \"randomForest\",   testing = \"crossValidation\",   noOfFolds = 10,   balancingMethod = \"upsample\",  # Handle potential imbalance   reportClinicalMetrics = TRUE,   reportConfidenceIntervals = TRUE,   clinicalCutoff = 0.4,  # Conservative for screening   reporting = c(\"confusionMatrix\", \"classifMetrices\", \"AUC\") )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"research-applications","dir":"Articles","previous_headings":"Clinical Applications and Case Studies > Case Study 2: Risk Stratification Model","what":"Research Applications","title":"Clinical Classification Analysis with Machine Learning","text":"Results inform: - Patient counseling prognosis - Treatment intensity decisions - Clinical trial eligibility - Follow-schedule planning","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"algorithm-selection-guidelines","dir":"Articles","previous_headings":"Best Practices and Guidelines","what":"Algorithm Selection Guidelines","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"cat(\"Algorithm Selection Framework:\\\\n\\\\n\")  selection_guide <- data.frame(   Algorithm = c(\"Decision Tree\", \"Random Forest\", \"KNN\", \"Naive Bayes\", \"Logistic Regression\", \"SVM\"),   Best_For = c(\"Interpretability\", \"Accuracy\", \"Non-linear patterns\", \"High dimensions\", \"Linear relationships\", \"Complex boundaries\"),   Sample_Size = c(\"Any\", \"Medium-Large\", \"Medium-Large\", \"Small-Medium\", \"Any\", \"Medium-Large\"),   Interpretability = c(\"High\", \"Medium\", \"Low\", \"Medium\", \"High\", \"Low\"),   Training_Speed = c(\"Fast\", \"Medium\", \"Fast\", \"Fast\", \"Fast\", \"Slow\"),   Prediction_Speed = c(\"Fast\", \"Fast\", \"Slow\", \"Fast\", \"Fast\", \"Fast\") )  kable(selection_guide, caption = \"Algorithm Selection Guide\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"model-validation-framework","dir":"Articles","previous_headings":"Best Practices and Guidelines","what":"Model Validation Framework","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"cat(\"Model Validation Best Practices:\\\\n\\\\n\") cat(\"1. Data Splitting:\\\\n\") cat(\"   - Training: 60-70%\\\\n\") cat(\"   - Validation: 15-20%\\\\n\") cat(\"   - Testing: 15-20%\\\\n\\\\n\")  cat(\"2. Cross-Validation:\\\\n\") cat(\"   - Use stratified k-fold (k=5 or 10)\\\\n\") cat(\"   - Ensure class balance in folds\\\\n\") cat(\"   - Report mean and standard deviation\\\\n\\\\n\")  cat(\"3. Performance Metrics:\\\\n\") cat(\"   - Primary: AUC, Accuracy\\\\n\") cat(\"   - Clinical: Sensitivity, Specificity, PPV, NPV\\\\n\") cat(\"   - Report confidence intervals\\\\n\\\\n\")  cat(\"4. Model Interpretation:\\\\n\") cat(\"   - Feature importance analysis\\\\n\") cat(\"   - Decision boundary visualization\\\\n\") cat(\"   - Clinical relevance assessment\\\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"essential-elements-to-report","dir":"Articles","previous_headings":"Best Practices and Guidelines > Reporting Guidelines","what":"Essential Elements to Report","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"cat(\"Classification Analysis Reporting Checklist:\\\\n\\\\n\") cat(\"✓ Dataset characteristics and preprocessing\\\\n\") cat(\"✓ Algorithm selection rationale\\\\n\") cat(\"✓ Hyperparameter tuning methodology\\\\n\") cat(\"✓ Validation strategy and results\\\\n\") cat(\"✓ Performance metrics with confidence intervals\\\\n\") cat(\"✓ Clinical interpretation of results\\\\n\") cat(\"✓ Model limitations and assumptions\\\\n\") cat(\"✓ Comparison with existing methods\\\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"example-results-section","dir":"Articles","previous_headings":"Best Practices and Guidelines > Reporting Guidelines","what":"Example Results Section","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"cat(\"Example Results Reporting:\\\\n\\\\n\") cat(\"A random forest classifier was trained on the breast cancer dataset\\\\n\") cat(\"(n=699) to distinguish between benign and malignant tumors. The model\\\\n\") cat(\"achieved an AUC of 0.98 (95% CI: 0.96-0.99) using 10-fold cross-validation.\\\\n\") cat(\"Sensitivity was 95.2% (95% CI: 92.1-97.8%) and specificity was 96.8%\\\\n\") cat(\"(95% CI: 94.2-98.6%), indicating excellent diagnostic performance.\\\\n\") cat(\"The most important features were cell size uniformity, bare nuclei,\\\\n\") cat(\"and clump thickness, consistent with pathological indicators of malignancy.\\\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"common-pitfalls-and-solutions","dir":"Articles","previous_headings":"Best Practices and Guidelines","what":"Common Pitfalls and Solutions","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"cat(\"Common Classification Pitfalls:\\\\n\\\\n\")  cat(\"1. WRONG: Using accuracy alone for imbalanced classes\\\\n\") cat(\"   RIGHT: Use AUC, precision, recall, and F1-score\\\\n\\\\n\")  cat(\"2. WRONG: Not validating on independent test set\\\\n\") cat(\"   RIGHT: Use proper train/validation/test splits\\\\n\\\\n\")  cat(\"3. WRONG: Ignoring class imbalance\\\\n\") cat(\"   RIGHT: Use appropriate balancing methods\\\\n\\\\n\")  cat(\"4. WRONG: Overfitting to training data\\\\n\") cat(\"   RIGHT: Use cross-validation and regularization\\\\n\\\\n\")  cat(\"5. WRONG: Not reporting confidence intervals\\\\n\") cat(\"   RIGHT: Use bootstrap or cross-validation CIs\\\\n\\\\n\")  cat(\"6. WRONG: Ignoring clinical relevance of cutoffs\\\\n\") cat(\"   RIGHT: Optimize cutoffs for clinical utility\\\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"ensemble-methods","dir":"Articles","previous_headings":"Advanced Topics","what":"Ensemble Methods","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"# Example of ensemble approach using multiple algorithms # Note: This would require custom implementation cat(\"Ensemble Classification Approach:\\\\n\") cat(\"• Combine predictions from multiple algorithms\\\\n\") cat(\"• Weight by individual performance\\\\n\") cat(\"• Improve robustness and accuracy\\\\n\") cat(\"• Reduce overfitting risk\\\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"feature-engineering","dir":"Articles","previous_headings":"Advanced Topics","what":"Feature Engineering","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"cat(\"Feature Engineering for Classification:\\\\n\\\\n\") cat(\"• Normalization/Standardization\\\\n\") cat(\"• Polynomial features for non-linear relationships\\\\n\") cat(\"• Interaction terms between variables\\\\n\") cat(\"• Domain-specific transformations\\\\n\") cat(\"• Feature selection using importance scores\\\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"model-deployment-considerations","dir":"Articles","previous_headings":"Advanced Topics","what":"Model Deployment Considerations","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"cat(\"Clinical Deployment Considerations:\\\\n\\\\n\") cat(\"• Model interpretability requirements\\\\n\") cat(\"• Real-time prediction capabilities\\\\n\") cat(\"• Integration with existing systems\\\\n\") cat(\"• Regulatory compliance (FDA, CE marking)\\\\n\") cat(\"• Continuous monitoring and updating\\\\n\") cat(\"• User training and acceptance\\\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"combining-with-survival-analysis","dir":"Articles","previous_headings":"Integration with Other Analyses","what":"Combining with Survival Analysis","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"cat(\"Classification + Survival Analysis:\\\\n\\\\n\") cat(\"• Use classification for risk group assignment\\\\n\") cat(\"• Apply survival analysis within risk groups\\\\n\") cat(\"• Validate prognostic value of classification\\\\n\") cat(\"• Inform treatment stratification\\\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"roc-analysis-integration","dir":"Articles","previous_headings":"Integration with Other Analyses","what":"ROC Analysis Integration","title":"Clinical Classification Analysis with Machine Learning","text":"","code":"cat(\"Classification + ROC Analysis:\\\\n\\\\n\") cat(\"• Use ROC curves to optimize cutoffs\\\\n\") cat(\"• Compare AUC between different models\\\\n\") cat(\"• Assess diagnostic accuracy\\\\n\") cat(\"• Clinical decision analysis\\\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Clinical Classification Analysis with Machine Learning","text":"classification function provides comprehensive machine learning capabilities essential clinical pathological research. Key takeaways: Choose appropriate algorithms based data characteristics research goals Use proper validation strategies ensure reliable performance estimates Report clinical metrics confidence intervals medical relevance Handle class imbalance appropriately realistic medical datasets Optimize decision thresholds clinical utility rather just accuracy Interpret results clinical context domain expertise Machine learning classification complements traditional statistical methods identifying complex patterns medical data, supporting evidence-based clinical decision-making advancing personalized medicine approaches.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-clinical-classification-comprehensive.html","id":"references","dir":"Articles","previous_headings":"Conclusion","what":"References","title":"Clinical Classification Analysis with Machine Learning","text":"Breiman, L. (2001). Random Forests. Machine Learning, 45(1), 5-32. Hastie, T., Tibshirani, R., & Friedman, J. (2009). Elements Statistical Learning. Springer. Kuhn, M., & Johnson, K. (2013). Applied Predictive Modeling. Springer. Steyerberg, E. W. (2019). Clinical Prediction Models. Springer. vignette created ClinicoPath jamovi module. information updates, visit https://github.com/sbalci/ClinicoPathJamoviModule.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"using-jjstatsplot-functions-in-r","dir":"Articles","previous_headings":"","what":"Using jjstatsplot Functions in R","title":"R Programming Guide for jjstatsplot","text":"guide demonstrates use jjstatsplot functions directly R programmatic statistical visualization. functions designed jamovi integration, can powerful tools R workflows.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"installation-and-setup","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R","what":"Installation and Setup","title":"R Programming Guide for jjstatsplot","text":"","code":"# Install from GitHub if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"sbalci/jjstatsplot\")  # Install dependencies if needed install.packages(c(\"ggplot2\", \"ggstatsplot\", \"dplyr\", \"jmvcore\")) library(jjstatsplot) library(ggplot2) library(dplyr)  # Load example data data(mtcars) data(iris)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"return-objects","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Understanding jjstatsplot Function Structure","what":"Return Objects","title":"R Programming Guide for jjstatsplot","text":"jjstatsplot functions return jamovi results objects : - $plot - main ggplot2 object - $plot2 - Secondary plot (grouping variables used) - Statistical results metadata","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"basic-pattern","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Understanding jjstatsplot Function Structure","what":"Basic Pattern","title":"R Programming Guide for jjstatsplot","text":"","code":"# General function signature result <- jj[function_name](   data = your_data,   dep = dependent_variable(s),   group = grouping_variable,   grvar = grouping_for_separate_plots,   # Additional options... )  # Extract the plot plot <- result$plot print(plot)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"histogram-analysis---jjhistostats","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"1. Histogram Analysis - jjhistostats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Basic histogram hist_result <- jjhistostats(   data = mtcars,   dep = \"mpg\",   grvar = NULL )  # Extract and display plot hist_result$plot # Histogram with grouping hist_grouped <- jjhistostats(   data = mtcars,   dep = \"mpg\",   grvar = \"cyl\" )  # Multiple plots created hist_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"scatter-plots---jjscatterstats","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"2. Scatter Plots - jjscatterstats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Basic scatter plot scatter_result <- jjscatterstats(   data = mtcars,   dep = \"mpg\",   group = \"hp\",   grvar = NULL )  scatter_result$plot # Scatter plot with grouping variable scatter_grouped <- jjscatterstats(   data = mtcars,   dep = \"mpg\",    group = \"hp\",   grvar = \"cyl\" )  scatter_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"box-violin-plots---jjbetweenstats","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"3. Box-Violin Plots - jjbetweenstats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Between-groups comparison between_result <- jjbetweenstats(   data = iris,   dep = \"Sepal.Length\",   group = \"Species\" )  between_result$plot # Multiple dependent variables between_multi <- jjbetweenstats(   data = iris,   dep = c(\"Sepal.Length\", \"Petal.Length\"),   group = \"Species\" )  between_multi$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"correlation-matrix---jjcorrmat","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"4. Correlation Matrix - jjcorrmat()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Correlation matrix corr_result <- jjcorrmat(   data = mtcars,   dep = c(\"mpg\", \"hp\", \"wt\", \"qsec\"),   grvar = NULL )  corr_result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"dot-plots---jjdotplotstats","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"5. Dot Plots - jjdotplotstats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Dot plot for group comparisons dot_result <- jjdotplotstats(   data = mtcars,   dep = \"mpg\",   group = \"cyl\",   grvar = NULL )  dot_result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"bar-charts---jjbarstats","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"6. Bar Charts - jjbarstats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Bar chart for categorical data bar_result <- jjbarstats(   data = mtcars,   dep = \"cyl\",   group = \"am\",   grvar = NULL )  bar_result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"pie-charts---jjpiestats","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"7. Pie Charts - jjpiestats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Pie chart pie_result <- jjpiestats(   data = mtcars,   dep = \"cyl\",   group = NULL,   grvar = NULL )  pie_result$plot1"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"within-subjects-analysis---jjwithinstats","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"8. Within-Subjects Analysis - jjwithinstats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# For repeated measures data # Note: This requires appropriate data structure # Creating example with iris data (not true repeated measures) within_result <- jjwithinstats(   data = iris,   dep1 = \"Sepal.Length\",   dep2 = \"Sepal.Width\",   dep3 = NULL,   dep4 = NULL )  within_result$plot"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"working-with-multiple-variables","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Advanced Usage Patterns","what":"Working with Multiple Variables","title":"R Programming Guide for jjstatsplot","text":"","code":"# Analyze multiple dependent variables simultaneously multi_hist <- jjhistostats(   data = iris,   dep = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\"),   grvar = NULL )  # This creates a combined plot multi_hist$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"combining-with-dplyr-workflows","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Advanced Usage Patterns","what":"Combining with dplyr Workflows","title":"R Programming Guide for jjstatsplot","text":"","code":"# Preprocessing with dplyr, then plotting mtcars_processed <- mtcars %>%   mutate(     cyl_factor = factor(cyl, labels = c(\"4-cyl\", \"6-cyl\", \"8-cyl\")),     am_factor = factor(am, labels = c(\"Automatic\", \"Manual\"))   ) %>%   filter(hp > 100)  # Use processed data result <- jjbetweenstats(   data = mtcars_processed,   dep = \"mpg\",   group = \"cyl_factor\" )  result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"extracting-statistical-information","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Advanced Usage Patterns","what":"Extracting Statistical Information","title":"R Programming Guide for jjstatsplot","text":"","code":"# jjstatsplot functions return rich statistical information corr_analysis <- jjcorrmat(   data = mtcars[, c(\"mpg\", \"hp\", \"wt\")],   dep = c(\"mpg\", \"hp\", \"wt\"),   grvar = NULL )  # The plot contains statistical annotations print(corr_analysis$plot)  # Access underlying data if needed (structure varies by function) str(corr_analysis, max.level = 2)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"plot-modifications","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Customization and Theming","what":"Plot Modifications","title":"R Programming Guide for jjstatsplot","text":"","code":"# Extract base plot and modify base_plot <- jjscatterstats(   data = mtcars,   dep = \"mpg\",   group = \"hp\",   grvar = NULL )$plot  # Add custom modifications tryCatch({   custom_plot <- base_plot +     labs(       title = \"Fuel Efficiency vs Horsepower\",       subtitle = \"Modified jjstatsplot output\",       caption = \"Data: mtcars dataset\"     ) +     theme_minimal() +     theme(       plot.title = element_text(size = 16, face = \"bold\"),       plot.subtitle = element_text(size = 12)     )      print(custom_plot) }, error = function(e) {   cat(\"Plot customization temporarily unavailable due to compatibility issues.\\n\")   print(base_plot) })"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"chunk-options-for-optimal-display","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Integration with R Markdown","what":"Chunk Options for Optimal Display","title":"R Programming Guide for jjstatsplot","text":"","code":"# Recommended chunk options for jjstatsplot in R Markdown:  # ```{r plot-name, fig.width=8, fig.height=6, dpi=300} # result <- jjhistostats(data = mydata, dep = \"variable\") # result$plot # ```"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"creating-function-wrappers","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Integration with R Markdown","what":"Creating Function Wrappers","title":"R Programming Guide for jjstatsplot","text":"","code":"# Create convenience wrappers for common analyses quick_histogram <- function(data, variable, group_by = NULL) {   result <- jjhistostats(     data = data,     dep = variable,     grvar = group_by   )      if (is.null(group_by)) {     return(result$plot)   } else {     return(result$plot2)   } }  # Usage tryCatch({   quick_histogram(mtcars, \"mpg\", \"cyl\") }, error = function(e) {   cat(\"Function wrapper example temporarily unavailable due to data compatibility issues.\\n\")   cat(\"Error:\", e$message, \"\\n\") })"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"batch-analysis-functions","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Integration with R Markdown","what":"Batch Analysis Functions","title":"R Programming Guide for jjstatsplot","text":"","code":"# Function to create multiple plots analyze_variables <- function(data, variables, group_var = NULL) {   plots <- list()      for (var in variables) {     result <- jjhistostats(       data = data,       dep = var,       grvar = group_var     )          plots[[var]] <- if (is.null(group_var)) result$plot else result$plot2   }      return(plots) }  # Create multiple histograms numeric_vars <- c(\"mpg\", \"hp\", \"wt\") tryCatch({   plot_list <- analyze_variables(mtcars, numeric_vars, \"cyl\")   # Display first plot   print(plot_list$mpg) }, error = function(e) {   cat(\"Batch analysis example temporarily unavailable due to data compatibility issues.\\n\")   cat(\"Error:\", e$message, \"\\n\") })"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"common-issues-and-solutions","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Error Handling and Debugging","what":"Common Issues and Solutions","title":"R Programming Guide for jjstatsplot","text":"","code":"# Safe function wrapper with error handling safe_jjhistostats <- function(data, dep, ...) {   tryCatch({     result <- jjhistostats(data = data, dep = dep, ...)     return(result$plot)   }, error = function(e) {     message(\"Error creating histogram: \", e$message)     return(NULL)   }) }  # Usage with potential problematic data plot_result <- safe_jjhistostats(mtcars, \"nonexistent_variable\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"data-validation","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Error Handling and Debugging","what":"Data Validation","title":"R Programming Guide for jjstatsplot","text":"","code":"# Function to check data before analysis validate_data <- function(data, variables) {   issues <- list()      # Check if variables exist   missing_vars <- variables[!variables %in% names(data)]   if (length(missing_vars) > 0) {     issues$missing_variables <- missing_vars   }      # Check for sufficient data   for (var in variables) {     if (var %in% names(data)) {       non_missing <- sum(!is.na(data[[var]]))       if (non_missing < 10) {         issues$insufficient_data <- c(issues$insufficient_data, var)       }     }   }      return(issues) }  # Example usage issues <- validate_data(mtcars, c(\"mpg\", \"hp\", \"nonexistent\")) print(issues)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"large-datasets","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Performance Considerations","what":"Large Datasets","title":"R Programming Guide for jjstatsplot","text":"","code":"# For large datasets, consider sampling large_data_plot <- function(data, dep, sample_size = 1000) {   if (nrow(data) > sample_size) {     sampled_data <- data[sample(nrow(data), sample_size), ]     message(\"Sampling \", sample_size, \" rows from \", nrow(data), \" total rows\")     data <- sampled_data   }      jjhistostats(data = data, dep = dep, grvar = NULL)$plot }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"function-usage","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Best Practices Summary","what":"1. Function Usage","title":"R Programming Guide for jjstatsplot","text":"Always check return structure: $plot vs $plot2 Handle missing data appropriately Validate variable names analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"data-preparation","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Best Practices Summary","what":"2. Data Preparation","title":"R Programming Guide for jjstatsplot","text":"Use meaningful variable names factor labels Ensure appropriate data types (numeric, factor) Consider data transformations needed","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"workflow-integration","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Best Practices Summary","what":"3. Workflow Integration","title":"R Programming Guide for jjstatsplot","text":"Combine dplyr data preprocessing Create wrapper functions repeated analyses Use error handling robust scripts","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"output-management","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Best Practices Summary","what":"4. Output Management","title":"R Programming Guide for jjstatsplot","text":"Extract plots result$plot Modify plots using standard ggplot2 syntax Save plots appropriate dimensions resolution","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/14-r-programming-guide.html","id":"documentation","dir":"Articles","previous_headings":"Using jjstatsplot Functions in R > Best Practices Summary","what":"5. Documentation","title":"R Programming Guide for jjstatsplot","text":"Document analysis choices Include variable descriptions Report statistical assumptions violations guide provides foundation using jjstatsplot functions programmatically R. functions offer convenient way create publication-ready statistical visualizations minimal code maintaining access underlying ggplot2 objects customization.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"introduction-to-grafify-scientific-plots","dir":"Articles","previous_headings":"","what":"Introduction to Grafify Scientific Plots","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"grafify function ClinicoPath provides access powerful grafify R package creating beautiful, color-blind friendly scientific visualizations. module specifically designed clinical research, experimental data analysis, scientific publications.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots","what":"Key Features","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"12+ Color-blind friendly palettes optimized scientific visualization Multiple plot types including scatter plots, box plots, violin plots, specialized designs Integrated statistical analysis ANOVA, t-tests, correlations, post-hoc comparisons Experimental design support randomized blocks, repeated measures, factorial designs -analysis paired data longitudinal studies Publication-ready styling professional themes customization options","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"accessing-grafify-in-jamovi","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots","what":"Accessing Grafify in jamovi","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"grafify functionality available jamovi interface: Load data jamovi Navigate Analyses → ClinicoPath → JJ Plots → Grafify Select variables analysis Choose plot type available options Customize colors, themes, statistical options Export high-resolution plots publication","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"basic-plot-types","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Available Plot Types","what":"Basic Plot Types","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"grafify module supports core visualization types: scatterbar: Scatter plots summary statistics error bars scatterbox: Box plots individual data points overlaid scatterviolin: Violin plots showing data distribution points histogram: Distribution histograms grouping options density: Density plots continuous data visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"specialized-plot-types","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Available Plot Types","what":"Specialized Plot Types","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"befafter_box: -comparisons paired data befafter_colors: Color-coded -visualizations scatter_3d: Three-dimensional scatter plots scatter_4d: Four-dimensional scatter plots size/color mapping","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"color-palettes","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots","what":"Color Palettes","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"Grafify includes scientifically optimized, color-blind friendly palettes: default: Standard palette general use vibrant: High-contrast colors presentations contrast: Maximum contrast accessibility bright: Bright colors highlighting muted: Subtle colors professional publications dark: Dark theme compatible colors","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"example-data-setup","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots","what":"Example Data Setup","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"","code":"# Create example clinical trial data set.seed(123) clinical_data <- data.frame(   patient_id = 1:120,   treatment = rep(c(\"Control\", \"Drug A\", \"Drug B\"), each = 40),   age_group = rep(c(\"Young\", \"Middle\", \"Senior\"), times = 40),   gender = rep(c(\"Male\", \"Female\"), times = 60),   biomarker_baseline = rnorm(120, mean = 10, sd = 3),   biomarker_followup = rnorm(120, mean = 12, sd = 4),   response_score = rnorm(120, mean = 75, sd = 15),   timepoint = rep(c(\"Baseline\", \"Follow-up\"), each = 60) )  # Display data structure str(clinical_data) head(clinical_data)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"example-visualizations","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots","what":"Example Visualizations","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"examples types plots can create grafify jamovi:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"scatter-plot-with-error-bars","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Example Visualizations","what":"Scatter Plot with Error Bars","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"","code":"# This demonstrates the type of plot grafify creates with scatterbar summary_data <- clinical_data %>%   group_by(treatment) %>%   summarise(     mean_biomarker = mean(biomarker_baseline, na.rm = TRUE),     sd_biomarker = sd(biomarker_baseline, na.rm = TRUE),     .groups = 'drop'   )  ggplot(clinical_data, aes(x = treatment, y = biomarker_baseline, color = treatment)) +   geom_point(position = position_jitter(width = 0.2), alpha = 0.7, size = 2) +   geom_point(data = summary_data, aes(y = mean_biomarker), size = 4) +   geom_errorbar(data = summary_data,                  aes(y = mean_biomarker,                      ymin = mean_biomarker - sd_biomarker,                      ymax = mean_biomarker + sd_biomarker),                 width = 0.2, size = 1) +   scale_color_manual(values = c(\"#E69F00\", \"#56B4E9\", \"#009E73\")) +   theme_minimal() +   labs(title = \"Biomarker Levels by Treatment Group\",        subtitle = \"Points show individual values, error bars show standard deviation\",        y = \"Biomarker Level (Baseline)\", x = \"Treatment Group\") +   theme(legend.position = \"none\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"box-plot-with-individual-points","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Example Visualizations","what":"Box Plot with Individual Points","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"","code":"ggplot(clinical_data, aes(x = treatment, y = response_score, color = gender)) +   geom_boxplot(alpha = 0.7, outlier.shape = NA, position = position_dodge(width = 0.8)) +   geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2),               alpha = 0.6, size = 1.5) +   scale_color_manual(values = c(\"#E69F00\", \"#56B4E9\")) +   theme_minimal() +   labs(title = \"Response Scores by Treatment and Gender\",        subtitle = \"Box plots with individual data points overlaid\",        y = \"Response Score\", x = \"Treatment Group\", color = \"Gender\") +   theme(legend.position = \"top\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"before-after-comparison","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Example Visualizations","what":"Before-After Comparison","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"","code":"# Reshape data for before-after comparison before_after_data <- data.frame(   patient_id = rep(1:60, 2),   treatment = rep(rep(c(\"Control\", \"Drug A\", \"Drug B\"), each = 20), 2),   timepoint = rep(c(\"Baseline\", \"Follow-up\"), each = 60),   biomarker = c(clinical_data$biomarker_baseline[1:60],                  clinical_data$biomarker_followup[1:60]) )  ggplot(before_after_data, aes(x = timepoint, y = biomarker, color = treatment)) +   geom_line(aes(group = patient_id), alpha = 0.3) +   geom_point(alpha = 0.7, size = 2) +   stat_summary(fun = mean, geom = \"point\", size = 4, shape = 15) +   stat_summary(fun = mean, geom = \"line\", aes(group = treatment), size = 1.5) +   scale_color_manual(values = c(\"#E69F00\", \"#56B4E9\", \"#009E73\")) +   theme_minimal() +   labs(title = \"Biomarker Changes: Baseline to Follow-up\",        subtitle = \"Individual patient trajectories with group means\",        y = \"Biomarker Level\", x = \"Time Point\", color = \"Treatment\") +   theme(legend.position = \"top\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"statistical-analysis-integration","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots","what":"Statistical Analysis Integration","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"Grafify integrates statistical analysis options:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"available-statistical-methods","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Statistical Analysis Integration","what":"Available Statistical Methods","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"One-way ANOVA: Comparing multiple groups Two-way ANOVA: Factorial designs two factors Mixed models: Repeated measures nested designs T-tests: Pairwise comparisons Correlations: Relationship analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"post-hoc-comparisons","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Statistical Analysis Integration","what":"Post-hoc Comparisons","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"Pairwise: possible group comparisons vs Reference: Comparisons control group Trends: Testing linear/polynomial trends","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"biomarker-analysis","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Clinical Research Applications","what":"Biomarker Analysis","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"Grafify particularly useful : Dose-response relationships: Visualizing drug concentration effects Treatment comparisons: Comparing multiple therapeutic interventions Longitudinal studies: Tracking changes time Diagnostic performance: ROC-style visualizations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"publication-ready-output","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Clinical Research Applications","what":"Publication-Ready Output","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"Features scientific publication: High-resolution export: 300+ DPI journals Customizable themes: Professional styling options Color-blind accessibility: palettes tested accessibility Statistical annotations: Automatic p-value reporting","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Best Practices","what":"Data Preparation","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"Clean data analysis Check outliers missing values Ensure proper factor levels grouping variables Consider transformations skewed data","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"plot-selection","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Best Practices","what":"Plot Selection","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"Choose appropriate plot types data structure Consider audience selecting colors Balance detail clarity complex visualizations Test accessibility color-blind simulation tools","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"statistical-considerations","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Best Practices","what":"Statistical Considerations","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"Check assumptions applying statistical tests Consider multiple comparisons post-hoc tests Report effect sizes along p-values Validate findings appropriate sample sizes","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"common-issues","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Troubleshooting","what":"Common Issues","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"Missing data: Handle appropriately analysis Factor ordering: Ensure logical ordering categorical variables Color conflicts: Test palettes specific data Export problems: Check resolution file format settings","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"getting-help","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots > Troubleshooting","what":"Getting Help","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"jamovi Community: Active user forums support Documentation: Comprehensive help files within jamovi Examples: Built-datasets tutorials Updates: Regular feature additions improvements","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-grafify-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"Introduction to Grafify Scientific Plots","what":"Conclusion","title":"Scientific Visualization with Grafify: Comprehensive Guide","text":"grafify module ClinicoPath provides powerful, accessible tools scientific visualization. integration jamovi makes advanced plotting techniques available researchers without programming experience, maintaining flexibility quality needed professional scientific publication. combining color-blind friendly design, statistical integration, publication-ready output, grafify serves comprehensive solution clinical experimental data visualization needs.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-troubleshooting-faq.html","id":"troubleshooting-guide","dir":"Articles","previous_headings":"","what":"Troubleshooting Guide","title":"Troubleshooting Guide for ClinicoPath","text":"guide help solve common issues might encounter using ClinicoPath module jamovi.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-troubleshooting-faq.html","id":"my-plot-is-blank-or-doesnt-show-up","dir":"Articles","previous_headings":"Troubleshooting Guide > Common Problems and Solutions","what":"“My plot is blank or doesn’t show up!”","title":"Troubleshooting Guide for ClinicoPath","text":"common issue. things check: variables right boxes? Make sure moved variables list left correct analysis boxes right (e.g., Dependent Variable, Grouping Variable). enough data? plots require minimum amount data. example, comparing groups, need least patients group. using correct variable type? Make sure using continuous variables (like age lab values) categorical variables (like treatment groups diagnosis) correct places. variable treated text instead number category, can cause problems. [Screenshot jamovi data view showing change variable’s data type “Text” “Continuous” “Nominal”.] ***","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-troubleshooting-faq.html","id":"i-get-an-error-message-about-insufficient-data-or-missing-values-","dir":"Articles","previous_headings":"Troubleshooting Guide > Common Problems and Solutions","what":"“I get an error message about ‘insufficient data’ or ‘missing values’.”","title":"Troubleshooting Guide for ClinicoPath","text":"usually means gaps dataset. Check empty cells: Look data spreadsheet jamovi. lot empty cells variables trying analyze, analysis might fail. may need decide remove patients missing data use different analysis method. Check group sizes: comparing groups, make sure group enough patients. can running simple frequency table (Analyses -> Exploration -> Descriptives move grouping variable Variables box).","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-troubleshooting-faq.html","id":"the-text-on-my-plot-is-too-small-or-overlapping-","dir":"Articles","previous_headings":"Troubleshooting Guide > Common Problems and Solutions","what":"“The text on my plot is too small or overlapping.”","title":"Troubleshooting Guide for ClinicoPath","text":"Resize plot: can make plot bigger clicking dragging bottom-right corner plot jamovi results window. often fix overlapping text. Export higher resolution: export plot image, can increase resolution (DPI) export options. make text sharper easier read. [Screenshot jamovi export dialog showing resolution (DPI) setting.] ***","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-troubleshooting-faq.html","id":"for-r-users-common-issues","dir":"Articles","previous_headings":"Troubleshooting Guide","what":"For R Users: Common Issues","title":"Troubleshooting Guide for ClinicoPath","text":"using ClinicoPath package directly R, common issues: Error: object 'variable_name' found: almost always means typo variable name variable exist data frame. Use names(your_data) check exact spelling variable names. Error: Aesthetics must either length 1 data: error often happens missing values (NA) grouping variable. Make sure filter rows missing values plotting. Blank plots: using grouped analysis (grvar argument), plot stored plot2 element results object (e.g., result$plot2).","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/15-troubleshooting-faq.html","id":"when-to-ask-for-help","dir":"Articles","previous_headings":"Troubleshooting Guide","what":"When to Ask for Help","title":"Troubleshooting Guide for ClinicoPath","text":"tried solutions still trouble, can ask help. best place ClinicoPath GitHub Issues page: https://github.com/sbalci/ClinicoPathJamoviModule/issues report issue, please include following information: version jamovi using (Help -> ). version ClinicoPath module installed. description problem steps took get . exact error message seeing. possible, screenshot problem.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"introduction-to-complex-upset-plots","dir":"Articles","previous_headings":"","what":"Introduction to Complex UpSet Plots","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Complex UpSet plots powerful visualization technique analyzing intersections among multiple sets. particularly useful 3 sets, traditional Venn diagrams become cluttered difficult interpret. jcomplexupset function ClinicoPath provides enhanced interface create sophisticated UpSet plots clinical pathological research.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"when-to-use-upset-plots","dir":"Articles","previous_headings":"Introduction to Complex UpSet Plots","what":"When to Use UpSet Plots","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"UpSet plots ideal : Treatment Combinations: Analyzing treatments used together Biomarker Patterns: Understanding co-occurrence multiple biomarkers Complication Analysis: Identifying common combinations side effects Diagnostic Workflows: Visualizing tests performed together Molecular Subtyping: Analyzing mutation patterns cancer research","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"advantages-over-venn-diagrams","dir":"Articles","previous_headings":"Introduction to Complex UpSet Plots","what":"Advantages over Venn Diagrams","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Scalability: Handle 10+ sets effectively Quantitative: Show exact intersection sizes Readable: Matrix layout prevents overlapping regions Flexible: Support weighted intersections complex annotations","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"loading-required-packages","dir":"Articles","previous_headings":"Getting Started","what":"Loading Required Packages","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"library(jjstatsplot) library(dplyr) library(ggplot2)  # Load test datasets data(\"jcomplexupset_test_data\") data(\"molecular_subtype_data\")  data(\"diagnostic_test_data\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"basic-dataset-structure","dir":"Articles","previous_headings":"Getting Started","what":"Basic Dataset Structure","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"UpSet plots, need: Binary Variables: Columns representing set membership (TRUE/FALSE) Sufficient Sample Size: Adequate observations meaningful intersections Multiple Sets: least 2 sets, ideally 3-8 best visualization","code":"# Examine the treatment data structure str(jcomplexupset_test_data[, c(\"Surgery\", \"Chemotherapy\", \"Radiotherapy\", \"Immunotherapy\", \"TargetedTherapy\")])  # Summary of treatment combinations treatment_vars <- c(\"Surgery\", \"Chemotherapy\", \"Radiotherapy\", \"Immunotherapy\", \"TargetedTherapy\") summary(jcomplexupset_test_data[, treatment_vars])"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"simple-treatment-analysis","dir":"Articles","previous_headings":"Basic UpSet Plots","what":"Simple Treatment Analysis","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Let’s start basic analysis treatment combinations:","code":"# Basic UpSet plot for treatment modalities # Note: This demonstrates jcomplexupset functionality using ggplot2 # In jamovi, you would use the jcomplexupset analysis from the menu  # Create a simplified demonstration plot library(ggplot2)  # For demonstration, let's show how treatment combinations would be visualized treatment_combinations <- jcomplexupset_test_data %>%   select(Surgery, Chemotherapy, Radiotherapy, Immunotherapy, TargetedTherapy) %>%   mutate(     combination = paste(       ifelse(Surgery == 1, \"Surgery\", \"\"),       ifelse(Chemotherapy == 1, \"Chemo\", \"\"),       ifelse(Radiotherapy == 1, \"Radio\", \"\"),        ifelse(Immunotherapy == 1, \"Immuno\", \"\"),       ifelse(TargetedTherapy == 1, \"Targeted\", \"\"),       sep = \"+\"     )   ) %>%   # Clean up the combination strings   mutate(combination = gsub(\"\\\\++\", \"+\", combination)) %>%   mutate(combination = gsub(\"^\\\\+|\\\\+$\", \"\", combination)) %>%   filter(combination != \"\") %>%   count(combination, sort = TRUE) %>%   top_n(10)  ggplot(treatment_combinations, aes(x = reorder(combination, n), y = n)) +   geom_col(fill = \"#2E86AB\", alpha = 0.8) +   coord_flip() +   theme_minimal() +   labs(title = \"Treatment Combination Analysis\",        subtitle = \"Frequency of different treatment modalities and their combinations\",        x = \"Treatment Combination\", y = \"Frequency\") +   theme(axis.text.x = element_text(angle = 45, hjust = 1))"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"biomarker-pattern-analysis","dir":"Articles","previous_headings":"Basic UpSet Plots","what":"Biomarker Pattern Analysis","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Analyze biomarker co-occurrence patterns:","code":"# Note: Due to ComplexUpset package dependencies, we'll demonstrate with a simpler visualization # In practice, jcomplexupset would create an UpSet plot for biomarker patterns  # Create a demonstration of biomarker co-occurrence biomarker_data <- jcomplexupset_test_data %>%   select(HER2_Positive, ER_Positive, PR_Positive, PDL1_Positive) %>%   mutate(     combination = paste(       ifelse(HER2_Positive == 1, \"HER2+\", \"\"),       ifelse(ER_Positive == 1, \"ER+\", \"\"),       ifelse(PR_Positive == 1, \"PR+\", \"\"),        ifelse(PDL1_Positive == 1, \"PDL1+\", \"\"),       sep = \"/\"     )   ) %>%   mutate(combination = gsub(\"/+\", \"/\", combination)) %>%   mutate(combination = gsub(\"^/|/$\", \"\", combination)) %>%   filter(combination != \"\") %>%   count(combination, sort = TRUE) %>%   top_n(10)  ggplot(biomarker_data, aes(x = reorder(combination, n), y = n)) +   geom_col(fill = \"#E74C3C\", alpha = 0.8) +   coord_flip() +   theme_minimal() +   labs(     title = \"Biomarker Expression Patterns\",     subtitle = \"Co-occurrence of key biomarkers in cancer patients\",     x = \"Biomarker Combination\",      y = \"Frequency\"   ) +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Note: The jcomplexupset function would normally create an UpSet plot like this: # jcomplexupset( #   data = jcomplexupset_test_data, #   set_vars = c(\"HER2_Positive\", \"ER_Positive\", \"PR_Positive\", \"PDL1_Positive\"), #   plot_title = \"Biomarker Expression Patterns\", #   plot_subtitle = \"Co-occurrence of key biomarkers in cancer patients\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"custom-themes-and-colors","dir":"Articles","previous_headings":"Advanced Visualization Options","what":"Custom Themes and Colors","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Note: Professional publication-ready styling with jcomplexupset # Due to ComplexUpset package issues, showing alternative visualization  # Create treatment combination analysis treatment_styled <- jcomplexupset_test_data %>%   select(Surgery, Chemotherapy, Radiotherapy, Immunotherapy) %>%   mutate(     combination = paste(       ifelse(Surgery == 1, \"Surgery\", \"\"),       ifelse(Chemotherapy == 1, \"Chemo\", \"\"),       ifelse(Radiotherapy == 1, \"Radio\", \"\"),        ifelse(Immunotherapy == 1, \"Immuno\", \"\"),       sep = \"+\"     )   ) %>%   mutate(combination = gsub(\"\\\\++\", \"+\", combination)) %>%   mutate(combination = gsub(\"^\\\\+|\\\\+$\", \"\", combination)) %>%   filter(combination != \"\", rowSums(select(., Surgery:Immunotherapy)) >= 1) %>%   count(combination, sort = TRUE) %>%   filter(n >= 3) %>%   top_n(10)  ggplot(treatment_styled, aes(x = reorder(combination, n), y = n)) +   geom_col(fill = \"#440154\", alpha = 0.8) +   coord_flip() +   theme_minimal() +   labs(     title = \"Treatment Combinations in Oncology\",     subtitle = \"Analysis of multimodal treatment approaches\",     x = \"Treatment Combination\",      y = \"Frequency\"   ) +   theme(     text = element_text(size = 12),     axis.text = element_text(size = 11),     plot.title = element_text(size = 14, face = \"bold\")   )  # Note: The actual jcomplexupset call would be: # jcomplexupset( #   data = jcomplexupset_test_data, #   set_vars = c(\"Surgery\", \"Chemotherapy\", \"Radiotherapy\", \"Immunotherapy\"), #   theme_style = \"theme_minimal\", #   color_palette = \"viridis\", #   text_size = 12, #   min_size = 3, #   plot_title = \"Treatment Combinations in Oncology\", #   plot_subtitle = \"Analysis of multimodal treatment approaches\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"adding-annotations","dir":"Articles","previous_headings":"Advanced Visualization Options","what":"Adding Annotations","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Note: UpSet plot with intersection size annotations would normally use jcomplexupset # Due to ComplexUpset dependency issues, showing summary instead  # Analysis of treatment response patterns response_vars <- c(\"Complete_Response\", \"Partial_Response\", \"Stable_Disease\", \"Progressive_Disease\") response_summary <- jcomplexupset_test_data[, response_vars]  # Check response patterns (should be mutually exclusive) response_counts <- colSums(response_summary, na.rm = TRUE) cat(\"Treatment Response Distribution:\\n\") print(response_counts)  # Create visualization of response distribution response_df <- data.frame(   Response = names(response_counts),   Count = as.numeric(response_counts) )  ggplot(response_df, aes(x = reorder(Response, Count), y = Count)) +   geom_col(fill = c(\"#E8F5E8\", \"#FFEB3B\", \"#FF9800\", \"#F44336\"), alpha = 0.8) +   coord_flip() +   theme_classic() +   labs(     title = \"Treatment Response Patterns\",     subtitle = \"Distribution of response categories (mutually exclusive)\",     x = \"Response Category\",      y = \"Number of Patients\"   ) +   theme(     plot.title = element_text(size = 14, face = \"bold\"),     axis.text = element_text(size = 11)   )  # Note: Actual jcomplexupset call would be: # jcomplexupset( #   data = jcomplexupset_test_data, #   set_vars = c(\"Complete_Response\", \"Partial_Response\", \"Stable_Disease\", \"Progressive_Disease\"), #   annotations = \"intersection_size\", #   base_annotations_height = 2, #   min_size = 1, #   theme_style = \"theme_classic\", #   color_palette = \"Set2\", #   plot_title = \"Treatment Response Patterns\", #   plot_subtitle = \"Distribution of response categories (mutually exclusive)\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"molecular-subtyping-analysis","dir":"Articles","previous_headings":"Clinical Applications","what":"Molecular Subtyping Analysis","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Analyze mutation patterns molecular subtyping:","code":"# Mutation pattern analysis mutation_vars <- c(\"BRCA1_Mutation\", \"BRCA2_Mutation\", \"TP53_Mutation\", \"PIK3CA_Mutation\", \"KRAS_Mutation\")  # Note: This section demonstrates jcomplexupset functionality # Due to ComplexUpset package dependency issues, the actual function call is commented out # The jcomplexupset function would create an UpSet plot here  cat('UpSet plot would be displayed here with jcomplexupset function\\n') cat('This demonstrates set intersection analysis capabilities\\n')  # Original function call (commented out due to dependency issues): # jcomplexupset( #   data = molecular_subtype_data, #   set_vars = mutation_vars, #   value_var = NULL, #   min_size = 2, #   sort_by = \"cardinality\", #   show_percentages = FALSE, #   theme_style = \"theme_bw\", #   color_palette = \"Dark2\", #   plot_title = \"Genetic Mutation Patterns\", #   plot_subtitle = \"Co-occurrence of driver mutations in cancer samples\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"pathway-analysis","dir":"Articles","previous_headings":"Clinical Applications","what":"Pathway Analysis","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Pathway alteration patterns pathway_vars <- c(\"PI3K_Pathway\", \"WNT_Pathway\", \"RB_Pathway\", \"DNA_Repair\")  # Note: This section demonstrates jcomplexupset functionality # Due to ComplexUpset package dependency issues, the actual function call is commented out # The jcomplexupset function would create an UpSet plot here  cat('UpSet plot would be displayed here with jcomplexupset function\\n') cat('This demonstrates set intersection analysis capabilities\\n')  # Original function call (commented out due to dependency issues): # jcomplexupset( #   data = molecular_subtype_data, #   set_vars = pathway_vars, #   value_var = NULL, #   annotations = \"intersection_ratio\", #   sort_by = \"degree\", #   keep_empty_groups = FALSE, #   plot_title = \"Pathway Alteration Patterns\", #   plot_subtitle = \"Simultaneous pathway disruptions in cancer\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"diagnostic-workflow-analysis","dir":"Articles","previous_headings":"Clinical Applications","what":"Diagnostic Workflow Analysis","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Analyze patterns diagnostic test utilization:","code":"# Imaging modality combinations imaging_vars <- c(\"CT_Scan\", \"MRI\", \"PET_Scan\", \"Ultrasound\", \"Biopsy\")  # Note: This section demonstrates jcomplexupset functionality # Due to ComplexUpset package dependency issues, the actual function call is commented out # The jcomplexupset function would create an UpSet plot here  cat('UpSet plot would be displayed here with jcomplexupset function\\n') cat('This demonstrates set intersection analysis capabilities\\n')  # Original function call (commented out due to dependency issues): # jcomplexupset( #   data = diagnostic_test_data, #   set_vars = imaging_vars, #   value_var = NULL, #   min_size = 10, #   max_degree = 4, #   sort_by = \"cardinality\", #   theme_style = \"theme_minimal\", #   color_palette = \"plasma\", #   plot_title = \"Diagnostic Imaging Combinations\", #   plot_subtitle = \"Patterns of imaging modality utilization\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"statistical-analysis-integration","dir":"Articles","previous_headings":"Advanced Features","what":"Statistical Analysis Integration","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# UpSet plot with comprehensive statistics # Note: This section demonstrates jcomplexupset functionality # Due to ComplexUpset package dependency issues, the actual function call is commented out # The jcomplexupset function would create an UpSet plot here  cat('UpSet plot would be displayed here with jcomplexupset function\\n') cat('This demonstrates set intersection analysis capabilities\\n')  # Original function call (commented out due to dependency issues): # jcomplexupset( #   data = jcomplexupset_test_data, #   set_vars = c(\"Surgery\", \"Chemotherapy\", \"Radiotherapy\", \"Immunotherapy\"), #   value_var = NULL, #   show_statistics = TRUE, #   show_interpretation = TRUE, #   min_size = 5, #   annotations = \"intersection_size\", #   plot_title = \"Treatment Analysis with Statistics\", #   plot_subtitle = \"Comprehensive analysis of treatment combinations\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"customizing-plot-dimensions","dir":"Articles","previous_headings":"Advanced Features","what":"Customizing Plot Dimensions","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Adjust plot proportions for better visualization # Note: This section demonstrates jcomplexupset functionality # Due to ComplexUpset package dependency issues, the actual function call is commented out # The jcomplexupset function would create an UpSet plot here  cat('UpSet plot would be displayed here with jcomplexupset function\\n') cat('This demonstrates set intersection analysis capabilities\\n')  # Original function call (commented out due to dependency issues): # jcomplexupset( #   data = diagnostic_test_data, #   set_vars = c(\"Oncology\", \"Surgery\", \"Radiology\", \"Pathology\"), #   value_var = NULL, #   width_ratio = 0.4, #   height_ratio = 0.6, #   sort_by = \"cardinality\", #   theme_style = \"theme_classic\", #   plot_title = \"Specialist Consultation Patterns\", #   plot_subtitle = \"Multi-disciplinary care coordination\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"reading-upset-plots","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Reading UpSet Plots","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Set Sizes (Left): Individual bars show many elements set Intersection Matrix (Bottom): Dots connected lines show sets intersected Intersection Sizes (Top): Bars show size intersection Sorting: Intersections typically sorted size (largest first) degree (number sets)","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"treatment-combinations","dir":"Articles","previous_headings":"Interpretation Guidelines > Clinical Insights","what":"Treatment Combinations","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Monotherapy vs. Combination: Compare single treatments vs. multi-modal approaches Standard vs. Novel: Identify emerging treatment patterns Resource Utilization: Understand treatment complexity cost implications","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"biomarker-patterns","dir":"Articles","previous_headings":"Interpretation Guidelines > Clinical Insights","what":"Biomarker Patterns","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Molecular Subtypes: Identify distinct molecular patterns Prognostic Groups: Correlate patterns outcomes Treatment Selection: Guide precision medicine approaches","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"diagnostic-workflows","dir":"Articles","previous_headings":"Interpretation Guidelines > Clinical Insights","what":"Diagnostic Workflows","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Efficiency Analysis: Identify redundant missing tests Quality Indicators: Assess completeness workups Cost Optimization: Streamline diagnostic pathways","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"Best Practices","what":"Data Preparation","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Example of data preprocessing for UpSet analysis treatment_data <- jcomplexupset_test_data %>%   # Ensure binary variables are logical   mutate(     across(c(Surgery, Chemotherapy, Radiotherapy, Immunotherapy), as.logical)   ) %>%   # Remove cases with no treatments (if needed)   filter(     Surgery | Chemotherapy | Radiotherapy | Immunotherapy   )  # Check data quality cat(\"Sample size after preprocessing:\", nrow(treatment_data), \"\\n\") cat(\"Treatment coverage:\\n\") print(colSums(treatment_data[, c(\"Surgery\", \"Chemotherapy\", \"Radiotherapy\", \"Immunotherapy\")]))"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"visualization-guidelines","dir":"Articles","previous_headings":"Best Practices","what":"Visualization Guidelines","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Set Selection: Use 3-8 sets optimal readability Minimum Size: Filter small intersections (min_size ≥ 3-5) Sorting: Choose appropriate sorting (size vs. degree vs. ratio) Colors: Use colorblind-friendly palettes Annotations: Add relevant statistical information","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"parameter-optimization","dir":"Articles","previous_headings":"Best Practices","what":"Parameter Optimization","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Optimized parameters for clinical data # Note: This section demonstrates jcomplexupset functionality # Due to ComplexUpset package dependency issues, the actual function call is commented out # The jcomplexupset function would create an UpSet plot here  cat('UpSet plot would be displayed here with jcomplexupset function\\n') cat('This demonstrates set intersection analysis capabilities\\n')  # Original function call (commented out due to dependency issues): # jcomplexupset( #   data = jcomplexupset_test_data, #   set_vars = c(\"Surgery\", \"Chemotherapy\", \"Radiotherapy\", \"Immunotherapy\", \"TargetedTherapy\"), #   value_var = NULL, #   min_size = 8,           # Filter small intersections #   max_degree = 3,         # Limit complexity #   sort_by = \"cardinality\",       # Most interpretable sorting #   sort_order = \"descending\", #   keep_empty_groups = FALSE,  # Remove empty intersections #   show_percentages = FALSE,    # Add percentage information #   theme_style = \"theme_minimal\", #   color_palette = \"viridis\", #   text_size = 11, #   plot_title = \"Optimized Treatment Combination Analysis\", #   plot_subtitle = \"Filtered for intersections with ≥8 patients\" # )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"empty-intersections","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Empty Intersections","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Problem: Too many empty intersections # Note: This section demonstrates jcomplexupset functionality # Due to ComplexUpset package dependency issues, the actual function call is commented out # The jcomplexupset function would create an UpSet plot here  cat('UpSet plot would be displayed here with jcomplexupset function\\n') cat('This demonstrates set intersection analysis capabilities\\n')  # Original function call (commented out due to dependency issues): # jcomplexupset( #   data = your_data, #   set_vars = your_variables, #   value_var = NULL, #   keep_empty_groups = FALSE,  # Solution: Remove empty groups #   min_size = 5               # Solution: Increase minimum size # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"too-many-sets","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Too Many Sets","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Problem: Plot becomes unreadable with >8 sets # Solution: Group related variables or create multiple plots grouped_vars1 <- c(\"Surgery\", \"Chemotherapy\", \"Radiotherapy\") grouped_vars2 <- c(\"Immunotherapy\", \"TargetedTherapy\", \"Hormone_Therapy\")  # Create separate plots for each group"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"data-type-issues","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Data Type Issues","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Problem: Variables not recognized as binary # Solution: Convert to logical your_data <- your_data %>%   mutate(     var1 = as.logical(var1),     var2 = case_when(       var2 == \"Yes\" ~ TRUE,       var2 == \"No\" ~ FALSE,       TRUE ~ NA     )   )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"stratified-analysis","dir":"Articles","previous_headings":"Advanced Examples","what":"Stratified Analysis","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Separate analysis by patient groups # Example: Treatment patterns by age group young_patients <- jcomplexupset_test_data %>% filter(Age < 50) elderly_patients <- jcomplexupset_test_data %>% filter(Age >= 65)  # Young patients # Note: This section demonstrates jcomplexupset functionality # Due to ComplexUpset package dependency issues, the actual function call is commented out # The jcomplexupset function would create an UpSet plot here  cat('UpSet plot would be displayed here with jcomplexupset function\\n') cat('This demonstrates set intersection analysis capabilities\\n')  # Original function call (commented out due to dependency issues): # jcomplexupset( #   data = young_patients, #   set_vars = c(\"Surgery\", \"Chemotherapy\", \"Radiotherapy\", \"Immunotherapy\"), #   value_var = NULL, #   min_size = 3, #   plot_title = \"Treatment Patterns in Young Patients (<50 years)\", #   plot_subtitle = paste(\"N =\", nrow(young_patients), \"patients\") # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"time-series-analysis","dir":"Articles","previous_headings":"Advanced Examples","what":"Time-Series Analysis","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Example of temporal analysis setup # (Would require time-stamped data in practice) cat(\"For temporal UpSet analysis, consider:\\n\") cat(\"- Creating time windows (quarters, years)\\n\") cat(\"- Analyzing treatment evolution over time\\n\")  cat(\"- Comparing guideline adherence across periods\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"statistical-summary","dir":"Articles","previous_headings":"Reporting Results","what":"Statistical Summary","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# Generate summary statistics for reporting treatment_vars <- c(\"Surgery\", \"Chemotherapy\", \"Radiotherapy\", \"Immunotherapy\") treatment_summary <- jcomplexupset_test_data[, treatment_vars]  # Individual treatment frequencies individual_freq <- colSums(treatment_summary) cat(\"Individual treatment frequencies:\\n\") print(individual_freq)  # Most common combinations combinations <- treatment_summary %>%   group_by(across(all_of(treatment_vars))) %>%   summarise(count = n(), .groups = \"drop\") %>%   arrange(desc(count)) %>%   filter(count > 5)  cat(\"\\nMost common treatment combinations (n > 5):\\n\") print(combinations)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"publication-ready-figures","dir":"Articles","previous_headings":"Reporting Results","what":"Publication-Ready Figures","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"","code":"# High-quality figure for publication # Note: This section demonstrates jcomplexupset functionality # Due to ComplexUpset package dependency issues, the actual function call is commented out # The jcomplexupset function would create an UpSet plot here  cat('UpSet plot would be displayed here with jcomplexupset function\\n') cat('This demonstrates set intersection analysis capabilities\\n')  # Original function call (commented out due to dependency issues): # jcomplexupset( #   data = jcomplexupset_test_data, #   set_vars = c(\"Surgery\", \"Chemotherapy\", \"Radiotherapy\", \"Immunotherapy\"), #   value_var = NULL, #   min_size = 8, #   sort_by = \"cardinality\", #   theme_style = \"theme_classic\", #   color_palette = \"Set2\", #   text_size = 12, #   show_percentages = FALSE, #   plot_title = \"\",  # Remove title for publication #   plot_subtitle = \"\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"jcomplexupset function provides powerful flexible tool visualizing complex set relationships clinical pathological research. Key takeaways: Use UpSet plots analyzing 3+ sets Venn diagrams become cluttered Focus clinically meaningful intersections setting appropriate minimum sizes Customize visualizations match analysis goals audience Combine statistical analysis comprehensive insights Consider stratified analyses different patient populations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/16-jcomplexupset-comprehensive.html","id":"further-reading","dir":"Articles","previous_headings":"Conclusion","what":"Further Reading","title":"Complex UpSet Plot Visualization with jcomplexupset","text":"Complex UpSet package documentation Set visualization best practices Clinical data visualization guidelines Statistical analysis intersection patterns vignette demonstrates comprehensive capabilities jcomplexupset function clinical pathological research applications.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Statistical Data Extraction from ggstatsplot","text":"jextractggstats function provides comprehensive interface extracting statistical data ggstatsplot analyses within jamovi framework. function allows researchers access detailed statistical results computed ggstatsplot, making available custom reporting, meta-analysis, integration analytical workflows. Note: function currently updated compatibility latest versions ggstatsplot. examples demonstrate intended functionality.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"","what":"Key Features","title":"Statistical Data Extraction from ggstatsplot","text":"Multiple Analysis Types: Supports -groups comparisons, within-subjects analysis, histogram distributions, correlations, scatterplots, categorical data analysis, contingency table analysis, one-sample tests Comprehensive Data Extraction: Extracts subtitle data, caption information, pairwise comparisons, descriptive statistics Flexible Statistical Testing: Supports parametric, non-parametric, robust, Bayesian methods Customizable Output: Multiple extraction components formatting options Natural Language Interpretation: Provides automated interpretation results","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"loading-required-packages","dir":"Articles","previous_headings":"","what":"Loading Required Packages","title":"Statistical Data Extraction from ggstatsplot","text":"","code":"library(jjstatsplot) library(dplyr) library(ggplot2)  # Load example data data(histopathology, package = \"ClinicoPath\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"direct-ggstatsplot-examples","dir":"Articles","previous_headings":"Basic Usage","what":"Direct ggstatsplot Examples","title":"Statistical Data Extraction from ggstatsplot","text":"now, demonstrate underlying ggstatsplot functionality jextractggstats designed work :","code":"library(ggstatsplot)  # Histogram with statistical details gghistostats(   data = histopathology,   x = Age,   type = \"parametric\",   centrality.plotting = TRUE ) # Between-groups comparison ggbetweenstats(   data = histopathology,   x = Sex,   y = Age,   type = \"parametric\",   pairwise.comparisons = TRUE ) # Correlation analysis ggscatterstats(   data = histopathology,   x = Age,   y = OverallTime,   type = \"parametric\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"intended-jextractggstats-usage","dir":"Articles","previous_headings":"","what":"Intended jextractggstats Usage","title":"Statistical Data Extraction from ggstatsplot","text":"compatibility issues resolved, function work follows:","code":"# Basic histogram analysis with statistical tests result_histogram <- jextractggstats(   data = histopathology,   dep_var = \"Age\",   group_var = NULL,   analysis_type = \"histogram\",   extract_components = \"all\",   detailed_results = TRUE,   show_interpretation = TRUE )  # Between-groups comparison result_between <- jextractggstats(   data = histopathology,   dep_var = \"Age\",   group_var = \"Sex\",   analysis_type = \"between_stats\",   statistical_test = \"parametric\",   extract_components = \"all\",   pairwise_comparisons = TRUE,   pairwise_correction = \"holm\",   detailed_results = TRUE )  # Correlation analysis result_correlation <- jextractggstats(   data = histopathology,   dep_var = \"Age\",   group_var = \"OverallTime\",   analysis_type = \"correlation\",   statistical_test = \"parametric\",   extract_components = \"all\",   detailed_results = TRUE,   show_interpretation = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"function-parameters","dir":"Articles","previous_headings":"","what":"Function Parameters","title":"Statistical Data Extraction from ggstatsplot","text":"jextractggstats function supports following key parameters:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"core-parameters","dir":"Articles","previous_headings":"Function Parameters","what":"Core Parameters","title":"Statistical Data Extraction from ggstatsplot","text":"data: dataset analyze dep_var: Dependent variable (outcome variable) group_var: Grouping variable (independent variable, optional) analysis_type: Type analysis (“histogram”, “between_stats”, “correlation”, etc.)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"statistical-options","dir":"Articles","previous_headings":"Function Parameters","what":"Statistical Options","title":"Statistical Data Extraction from ggstatsplot","text":"statistical_test: “parametric”, “nonparametric”, “robust”, “bayes” effect_size_type: “eta”, “omega”, “cohens_d”, “hedges_g”, etc. conf_level: Confidence level (default: 0.95)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"extraction-options","dir":"Articles","previous_headings":"Function Parameters","what":"Extraction Options","title":"Statistical Data Extraction from ggstatsplot","text":"extract_components: “”, “subtitle_data”, “caption_data”, “pairwise_data”, “descriptive_data” pairwise_comparisons: Enable pairwise comparisons (TRUE/FALSE) pairwise_correction: Multiple comparison correction method","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"output-options","dir":"Articles","previous_headings":"Function Parameters","what":"Output Options","title":"Statistical Data Extraction from ggstatsplot","text":"detailed_results: Include detailed statistical summary (TRUE/FALSE) show_interpretation: Include natural language interpretation (TRUE/FALSE) output_format: “table”, “dataframe”, “json”","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"analysis-types","dir":"Articles","previous_headings":"Statistical Methods Supported","what":"Analysis Types","title":"Statistical Data Extraction from ggstatsplot","text":"Histogram Analysis: Single variable distribution statistical tests -Groups: Compare means/distributions across groups Within-Subjects: Paired/repeated measures comparisons Correlation: Relationship continuous variables Scatterplot: Enhanced correlation marginal distributions Bar Chart: Categorical data analysis Contingency: Two categorical variables association One-Sample: Test theoretical value","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"statistical-tests","dir":"Articles","previous_headings":"Statistical Methods Supported","what":"Statistical Tests","title":"Statistical Data Extraction from ggstatsplot","text":"Parametric: t-tests, ANOVA, Pearson correlation Non-parametric: Mann-Whitney, Kruskal-Wallis, Spearman correlation Robust: Trimmed means, robust statistics Bayesian: Bayesian equivalents Bayes factors","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"clinical-applications","dir":"Articles","previous_headings":"","what":"Clinical Applications","title":"Statistical Data Extraction from ggstatsplot","text":"function designed various clinical pathological research applications:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"biomarker-analysis","dir":"Articles","previous_headings":"Clinical Applications","what":"Biomarker Analysis","title":"Statistical Data Extraction from ggstatsplot","text":"Compare biomarker levels patient groups Analyze marker correlations clinical outcomes Extract effect sizes meta-analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"survival-analysis-components","dir":"Articles","previous_headings":"Clinical Applications","what":"Survival Analysis Components","title":"Statistical Data Extraction from ggstatsplot","text":"Compare survival times groups Analyze prognostic factors Extract hazard ratios confidence intervals","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"pathological-grade-analysis","dir":"Articles","previous_headings":"Clinical Applications","what":"Pathological Grade Analysis","title":"Statistical Data Extraction from ggstatsplot","text":"Compare continuous variables tumor grade Analyze categorical associations Multiple comparison corrections","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"current-status-and-future-development","dir":"Articles","previous_headings":"","what":"Current Status and Future Development","title":"Statistical Data Extraction from ggstatsplot","text":"jextractggstats function currently updated ensure compatibility latest versions ggstatsplot related dependencies. core functionality implemented fully functional compatibility issues resolved.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"key-features-in-development","dir":"Articles","previous_headings":"Current Status and Future Development","what":"Key Features in Development:","title":"Statistical Data Extraction from ggstatsplot","text":"Enhanced error handling edge cases Support additional ggstatsplot functions Improved data extraction algorithms Better integration jamovi framework","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Statistical Data Extraction from ggstatsplot","text":"jextractggstats function provide comprehensive solution extracting statistical data ggstatsplot analyses within jamovi framework. Key advantages include: Comprehensive Extraction: Access statistical components computed ggstatsplot Multiple Analysis Types: Support various statistical analyses visualizations Flexible Configuration: Extensive customization options different research needs Integration Ready: Extracted data suitable meta-analysis custom reporting Clinical Applications: Designed biomarker analysis, survival studies, pathological research","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"key-applications","dir":"Articles","previous_headings":"Summary","what":"Key Applications","title":"Statistical Data Extraction from ggstatsplot","text":"Research Documentation: Extract detailed statistics manuscripts reports Meta-Analysis: Gather effect sizes confidence intervals systematic reviews Custom Visualization: Access underlying data specialized plotting Quality Control: Verify statistical computations assumptions Educational Use: Access step--step statistical calculations teaching function bridges gap ggstatsplot’s powerful statistical capabilities need detailed, accessible statistical output clinical pathological research contexts.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/17-jextractggstats-comprehensive.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"Statistical Data Extraction from ggstatsplot","text":"","code":"sessionInfo()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Forest Plot Visualization with jforester","text":"jforester function provides comprehensive forest plot visualization capabilities meta-analyses, systematic reviews, clinical trial results. creates publication-ready forest plots display point estimates confidence intervals professional format suitable academic publications. Forest plots essential tools evidence-based medicine visualizing results multiple studies subgroup analyses. allow researchers : Display effect sizes confidence intervals across multiple studies Visualize heterogeneity studies Present summary statistics meta-analysis results Compare subgroups treatment effects Communicate statistical findings effectively","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"simple-meta-analysis-forest-plot","dir":"Articles","previous_headings":"Basic Forest Plot Creation","what":"Simple Meta-Analysis Forest Plot","title":"Forest Plot Visualization with jforester","text":"Let’s start basic forest plot using meta-analysis data odds ratios:","code":"# Load meta-analysis data data(jforester_meta_analysis_data, package = \"ClinicoPath\")  # Display the first few rows of our dataset head(jforester_meta_analysis_data) # Create a basic forest plot basic_forest <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   plot_title = \"Meta-Analysis of Treatment Effectiveness\",   x_axis_label = \"Odds Ratio (95% CI)\" )  # The plot will be displayed in jamovi interface"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"understanding-the-components","dir":"Articles","previous_headings":"Basic Forest Plot Creation","what":"Understanding the Components","title":"Forest Plot Visualization with jforester","text":"forest plot displays several key components: Study labels: Names identifiers study (left side) Point estimates: Central points representing effect sizes Confidence intervals: Horizontal lines showing uncertainty Reference line: Vertical line indicating “effect” (typically 1 ratios) Scale: X-axis showing range effect sizes","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"odds-ratios","dir":"Articles","previous_headings":"Different Effect Types","what":"Odds Ratios","title":"Forest Plot Visualization with jforester","text":"Odds ratios commonly used case-control studies logistic regression:","code":"# Meta-analysis with odds ratios or_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   plot_title = \"Treatment Effect: Odds Ratios\",   x_axis_label = \"Odds Ratio\",   reference_line = 1.0 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"risk-ratios","dir":"Articles","previous_headings":"Different Effect Types","what":"Risk Ratios","title":"Forest Plot Visualization with jforester","text":"Risk ratios used cohort studies clinical trials:","code":"# Load cardiovascular risk ratio data data(jforester_cardio_rr_data, package = \"ClinicoPath\")  # Create risk ratio forest plot rr_plot <- jforester(   data = jforester_cardio_rr_data,   study_labels = \"trial_name\",   estimates = \"risk_ratio\",   ci_lower = \"rr_lower\",   ci_upper = \"rr_upper\",   sample_sizes = \"participants\",   events = \"events_treatment\",   effect_type = \"rr\",   plot_title = \"Cardiovascular Risk Reduction\",   x_axis_label = \"Risk Ratio (95% CI)\",   reference_line = 1.0 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"hazard-ratios","dir":"Articles","previous_headings":"Different Effect Types","what":"Hazard Ratios","title":"Forest Plot Visualization with jforester","text":"Hazard ratios used survival analysis:","code":"# Load survival data data(jforester_survival_hr_data, package = \"ClinicoPath\")  # Create hazard ratio forest plot hr_plot <- jforester(   data = jforester_survival_hr_data,   study_labels = \"study_id\",   estimates = \"hazard_ratio\",   ci_lower = \"hr_lower\",   ci_upper = \"hr_upper\",   sample_sizes = \"total_patients\",   events = \"deaths\",   effect_type = \"hr\",   plot_title = \"Survival Analysis: Treatment Effect\",   x_axis_label = \"Hazard Ratio (95% CI)\",   reference_line = 1.0 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"mean-differences","dir":"Articles","previous_headings":"Different Effect Types","what":"Mean Differences","title":"Forest Plot Visualization with jforester","text":"Mean differences used continuous outcomes:","code":"# Load mean difference data data(jforester_mean_diff_data, package = \"ClinicoPath\")  # Create mean difference forest plot md_plot <- jforester(   data = jforester_mean_diff_data,   study_labels = \"study_ref\",   estimates = \"mean_difference\",   ci_lower = \"md_lower\",   ci_upper = \"md_upper\",   sample_sizes = \"sample_n\",   events = NULL,   effect_type = \"md\",   plot_title = \"Cognitive Score Improvement\",   x_axis_label = \"Mean Difference in Cognitive Score\",   reference_line = 0.0,   log_scale = FALSE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"standardized-mean-differences","dir":"Articles","previous_headings":"Different Effect Types","what":"Standardized Mean Differences","title":"Forest Plot Visualization with jforester","text":"Standardized mean differences (Cohen’s d) used effect size comparisons:","code":"# Load standardized mean difference data data(jforester_smd_data, package = \"ClinicoPath\")  # Create standardized mean difference forest plot smd_plot <- jforester(   data = jforester_smd_data,   study_labels = \"paper_citation\",   estimates = \"cohens_d\",   ci_lower = \"smd_lower\",   ci_upper = \"smd_upper\",   sample_sizes = \"treatment_n\",   events = NULL,   effect_type = \"smd\",   plot_title = \"Effect Size Analysis\",   x_axis_label = \"Standardized Mean Difference (Cohen's d)\",   reference_line = 0.0,   log_scale = FALSE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"color-schemes","dir":"Articles","previous_headings":"Advanced Customization","what":"Color Schemes","title":"Forest Plot Visualization with jforester","text":"function provides several built-color schemes:","code":"# Medical color scheme (red) medical_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   color_scheme = \"medical\",   plot_title = \"Medical Color Scheme\" )  # Forest green color scheme forest_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   color_scheme = \"forest\",   plot_title = \"Forest Green Color Scheme\" )  # Custom colors custom_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   color_scheme = \"custom\",   custom_point_color = \"#FF5722\",   custom_ci_color = \"#9E9E9E\",   plot_title = \"Custom Color Scheme\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"point-sizes-and-sample-size-weighting","dir":"Articles","previous_headings":"Advanced Customization","what":"Point Sizes and Sample Size Weighting","title":"Forest Plot Visualization with jforester","text":"Point sizes can reflect sample sizes provide visual weight indication:","code":"# Forest plot with sample size weighting weighted_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   point_size_range = \"large\",   plot_title = \"Sample Size Weighted Forest Plot\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"confidence-levels","dir":"Articles","previous_headings":"Advanced Customization","what":"Confidence Levels","title":"Forest Plot Visualization with jforester","text":"Different confidence levels can specified:","code":"# 99% confidence intervals conf_99_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   confidence_level = \"99\",   plot_title = \"99% Confidence Intervals\" )  # 90% confidence intervals conf_90_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   confidence_level = \"90\",   plot_title = \"90% Confidence Intervals\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"summary-effect-display","dir":"Articles","previous_headings":"Summary Statistics and Meta-Analysis","what":"Summary Effect Display","title":"Forest Plot Visualization with jforester","text":"can display overall summary statistics:","code":"# Forest plot with summary effect summary_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   show_summary = TRUE,   summary_estimate = 1.45,   summary_ci_lower = 1.23,   summary_ci_upper = 1.67,   plot_title = \"Meta-Analysis with Summary Effect\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"heterogeneity-statistics","dir":"Articles","previous_headings":"Summary Statistics and Meta-Analysis","what":"Heterogeneity Statistics","title":"Forest Plot Visualization with jforester","text":"Display heterogeneity information:","code":"# Forest plot with heterogeneity statistics heterogeneity_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   show_heterogeneity = TRUE,   plot_title = \"Forest Plot with Heterogeneity Assessment\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"study-weights","dir":"Articles","previous_headings":"Summary Statistics and Meta-Analysis","what":"Study Weights","title":"Forest Plot Visualization with jforester","text":"Include study weights analysis:","code":"# Forest plot with study weights weights_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   include_weights = TRUE,   show_table = TRUE,   plot_title = \"Forest Plot with Study Weights\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"comprehensive-data-display","dir":"Articles","previous_headings":"Data Tables and Additional Information","what":"Comprehensive Data Display","title":"Forest Plot Visualization with jforester","text":"Show detailed data tables alongside forest plot:","code":"# Forest plot with comprehensive data table comprehensive_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   show_table = TRUE,   include_weights = TRUE,   plot_title = \"Comprehensive Forest Plot Display\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"arrow-labels-for-interpretation","dir":"Articles","previous_headings":"Data Tables and Additional Information","what":"Arrow Labels for Interpretation","title":"Forest Plot Visualization with jforester","text":"Add directional arrows aid interpretation:","code":"# Forest plot with arrow labels arrow_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   arrow_labels = TRUE,   left_arrow_label = \"Favors Control\",   right_arrow_label = \"Favors Treatment\",   plot_title = \"Forest Plot with Directional Labels\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"logarithmic-vs-linear-scales","dir":"Articles","previous_headings":"Scale and Reference Lines","what":"Logarithmic vs Linear Scales","title":"Forest Plot Visualization with jforester","text":"Choose appropriate scales data:","code":"# Logarithmic scale (default for ratios) log_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   log_scale = TRUE,   plot_title = \"Logarithmic Scale Forest Plot\" )  # Linear scale (for mean differences) linear_plot <- jforester(   data = jforester_mean_diff_data,   study_labels = \"study_ref\",   estimates = \"mean_difference\",   ci_lower = \"md_lower\",   ci_upper = \"md_upper\",   sample_sizes = \"sample_n\",   events = NULL,   effect_type = \"md\",   log_scale = FALSE,   plot_title = \"Linear Scale Forest Plot\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"custom-reference-lines","dir":"Articles","previous_headings":"Scale and Reference Lines","what":"Custom Reference Lines","title":"Forest Plot Visualization with jforester","text":"Set custom reference lines specific contexts:","code":"# Custom reference line custom_ref_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   reference_line = 1.5,   plot_title = \"Custom Reference Line (OR = 1.5)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"complex-meta-analysis-example","dir":"Articles","previous_headings":"","what":"Complex Meta-Analysis Example","title":"Forest Plot Visualization with jforester","text":"Using complex meta-analysis dataset multiple variables:","code":"# Load complex meta-analysis data data(jforester_complex_meta_data, package = \"ClinicoPath\")  # Display dataset structure str(jforester_complex_meta_data) # Comprehensive forest plot with all features complex_plot <- jforester(   data = jforester_complex_meta_data,   study_labels = \"study_label\",   estimates = \"effect_estimate\",   ci_lower = \"lower_ci\",   ci_upper = \"upper_ci\",   sample_sizes = \"total_participants\",   events = NULL,   effect_type = \"or\",   show_summary = TRUE,   summary_estimate = 1.25,   summary_ci_lower = 1.12,   summary_ci_upper = 1.39,   show_heterogeneity = TRUE,   include_weights = TRUE,   show_table = TRUE,   color_scheme = \"medical\",   plot_title = \"Comprehensive Meta-Analysis Forest Plot\",   x_axis_label = \"Effect Size (Odds Ratio)\",   arrow_labels = TRUE,   left_arrow_label = \"Favors Control\",   right_arrow_label = \"Favors Treatment\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"plot-dimensions-and-quality","dir":"Articles","previous_headings":"Publication and Export Options","what":"Plot Dimensions and Quality","title":"Forest Plot Visualization with jforester","text":"Customize plot dimensions publication:","code":"# High-quality plot for publication publication_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   plot_width = 12,   plot_height = 10,     dpi = 300,   echo = TRUE,   eval = FALSE,   font_family = \"Times\",   export_format = \"pdf\",   plot_title = \"Publication-Ready Forest Plot\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"font-customization","dir":"Articles","previous_headings":"Publication and Export Options","what":"Font Customization","title":"Forest Plot Visualization with jforester","text":"Different font families various publication requirements:","code":"# Arial font (default) arial_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   font_family = \"Arial\",   plot_title = \"Arial Font Forest Plot\" )  # Times New Roman font times_plot <- jforester(   data = jforester_meta_analysis_data,   study_labels = \"study_name\",   estimates = \"odds_ratio\",   ci_lower = \"or_lower_ci\",   ci_upper = \"or_upper_ci\",   sample_sizes = \"sample_size\",   events = \"events\",   effect_type = \"or\",   font_family = \"Times\",   plot_title = \"Times New Roman Font Forest Plot\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"odds-ratios-or","dir":"Articles","previous_headings":"Interpretation Guidelines > Understanding Effect Measures","what":"Odds Ratios (OR)","title":"Forest Plot Visualization with jforester","text":"= 1: difference groups > 1: Increased odds treatment group < 1: Decreased odds treatment group Clinical significance: Consider statistical significance clinical relevance","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"risk-ratios-rr","dir":"Articles","previous_headings":"Interpretation Guidelines > Understanding Effect Measures","what":"Risk Ratios (RR)","title":"Forest Plot Visualization with jforester","text":"RR = 1: difference risk RR > 1: Increased risk treatment group RR < 1: Decreased risk treatment group Interpretation: intuitive odds ratios absolute risk","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"hazard-ratios-hr","dir":"Articles","previous_headings":"Interpretation Guidelines > Understanding Effect Measures","what":"Hazard Ratios (HR)","title":"Forest Plot Visualization with jforester","text":"HR = 1: difference hazard HR > 1: Increased hazard (worse survival) HR < 1: Decreased hazard (better survival) Time--event: Represents instantaneous risk time","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"mean-differences-md","dir":"Articles","previous_headings":"Interpretation Guidelines > Understanding Effect Measures","what":"Mean Differences (MD)","title":"Forest Plot Visualization with jforester","text":"MD = 0: difference groups MD > 0: Higher values treatment group MD < 0: Lower values treatment group Units: units original measurement","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"standardized-mean-differences-smd","dir":"Articles","previous_headings":"Interpretation Guidelines > Understanding Effect Measures","what":"Standardized Mean Differences (SMD)","title":"Forest Plot Visualization with jforester","text":"Small effect: |SMD| = 0.2 Medium effect: |SMD| = 0.5 Large effect: |SMD| = 0.8 Unitless: Allows comparison across different scales","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"visual-assessment","dir":"Articles","previous_headings":"Interpretation Guidelines > Assessing Heterogeneity","what":"Visual Assessment","title":"Forest Plot Visualization with jforester","text":"Overlapping CIs: Suggests consistency Non-overlapping CIs: Suggests heterogeneity Outliers: Studies unusual results","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"statistical-measures","dir":"Articles","previous_headings":"Interpretation Guidelines > Assessing Heterogeneity","what":"Statistical Measures","title":"Forest Plot Visualization with jforester","text":"0-25%: Low heterogeneity 25-50%: Moderate heterogeneity 50-75%: Substantial heterogeneity 75-100%: Considerable heterogeneity","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"statistical-vs-clinical-significance","dir":"Articles","previous_headings":"Interpretation Guidelines > Clinical Considerations","what":"Statistical vs Clinical Significance","title":"Forest Plot Visualization with jforester","text":"Statistical significance: p < 0.05 (CI doesn’t cross null) Clinical significance: Meaningful difference practice Minimum clinically important difference: Pre-specified threshold","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"confidence-intervals","dir":"Articles","previous_headings":"Interpretation Guidelines > Clinical Considerations","what":"Confidence Intervals","title":"Forest Plot Visualization with jforester","text":"Wide CIs: Greater uncertainty, smaller studies Narrow CIs: Less uncertainty, larger studies Crossing null: Non-significant result","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"data-quality","dir":"Articles","previous_headings":"Best Practices","what":"Data Quality","title":"Forest Plot Visualization with jforester","text":"Complete case analysis: Remove studies missing data Data validation: Check logical inconsistencies Outlier detection: Identify investigate extreme values","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"visualization","dir":"Articles","previous_headings":"Best Practices","what":"Visualization","title":"Forest Plot Visualization with jforester","text":"Appropriate scale: Log scale ratios, linear differences Clear labeling: Descriptive titles axis labels Consistent formatting: Use standard conventions","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"reporting","dir":"Articles","previous_headings":"Best Practices","what":"Reporting","title":"Forest Plot Visualization with jforester","text":"Study characteristics: Include sample sizes, study quality Statistical methods: Describe analysis approach Heterogeneity assessment: Report ² Q-test results Sensitivity analysis: Test robustness findings","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"data-format-issues","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Data Format Issues","title":"Forest Plot Visualization with jforester","text":"","code":"# Ensure numeric variables are properly formatted data$odds_ratio <- as.numeric(data$odds_ratio) data$ci_lower <- as.numeric(data$ci_lower) data$ci_upper <- as.numeric(data$ci_upper)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"missing-data-handling","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Missing Data Handling","title":"Forest Plot Visualization with jforester","text":"","code":"# Check for missing values summary(data[c(\"odds_ratio\", \"ci_lower\", \"ci_upper\")])  # Remove incomplete cases complete_data <- data[complete.cases(data[c(\"odds_ratio\", \"ci_lower\", \"ci_upper\")]), ]"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"scale-issues","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Scale Issues","title":"Forest Plot Visualization with jforester","text":"","code":"# For ratios, use log scale log_scale = TRUE  # For differences, use linear scale log_scale = FALSE"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Forest Plot Visualization with jforester","text":"jforester function provides comprehensive solution creating publication-ready forest plots R. Key features include: Multiple effect types: Support , RR, HR, MD, SMD Flexible customization: Colors, fonts, sizes, layouts Statistical integration: Summary statistics heterogeneity assessment Publication ready: High-quality output journals presentations Forest plots essential tools visualizing meta-analysis results communicating statistical findings effectively. jforester function makes easy create professional-quality forest plots meet publication standards enhance presentation research findings. advanced meta-analysis techniques statistical methods, consider consulting specialized meta-analysis packages statistical guidance institution’s biostatistician epidemiologist.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/18-jforester-comprehensive.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Forest Plot Visualization with jforester","text":"Cochrane Handbook Systematic Reviews Interventions PRISMA Statement Reporting Systematic Reviews Higgins JP, Thompson SG. Quantifying heterogeneity meta-analysis. Stat Med. 2002;21(11):1539-58. Borenstein M, Hedges LV, Higgins JP, Rothstein HR. Introduction Meta-Analysis. Wiley, 2009. Riley RD, Higgins JP, Deeks JJ. Interpretation random effects meta-analyses. BMJ. 2011;342:d549.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/19-jforestmodel-comprehensive.html","id":"visualizing-regression-models-with-forest-plots","dir":"Articles","previous_headings":"","what":"Visualizing Regression Models with Forest Plots","title":"Visualizing Regression Models with Forest Plots","text":"forest plot powerful way visualize results statistical model. allows see effect several different predictors outcome . clinical research, forest plots often used display results regression models, showing odds ratios hazard ratios various risk factors.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/19-jforestmodel-comprehensive.html","id":"the-clinical-scenario","dir":"Articles","previous_headings":"Visualizing Regression Models with Forest Plots","what":"The Clinical Scenario","title":"Visualizing Regression Models with Forest Plots","text":"researcher working BreastCancer dataset wants understand cellular characteristics strongly associated tumor malignant. research question : risk factors breast tumor malignant, strength association? build logistic regression model answer question visualize results forest plot.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/19-jforestmodel-comprehensive.html","id":"what-is-a-logistic-regression","dir":"Articles","previous_headings":"Visualizing Regression Models with Forest Plots","what":"What is a Logistic Regression?","title":"Visualizing Regression Models with Forest Plots","text":"make plot, ’s helpful understand model behind . logistic regression statistical method used predict binary outcome (outcome two possibilities, like “benign” “malignant”) set predictor variables. model calculates odds ratio predictor, tells us odds outcome change one-unit increase predictor.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/19-jforestmodel-comprehensive.html","id":"step-1-the-analysis-in-jamovi","dir":"Articles","previous_headings":"Visualizing Regression Models with Forest Plots","what":"Step 1: The Analysis in jamovi","title":"Visualizing Regression Models with Forest Plots","text":"Load BreastCancer.omv dataset jamovi. main analysis ribbon, click JJStatsPlot -> Advanced -> Forest Plot Regression Model. [Screenshot jamovi analysis ribbon showing path Forest Plot.] *** Move Class variable (contains “benign” “malignant”) Dependent Variable box. outcome want predict. Move predictor variables, Cl.thickness, Cell.size, Cell.shape, Predictor Variables box. Model Type, select Logistic Regression (glm). [Screenshot analysis window showing variables assigned.] ***","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/19-jforestmodel-comprehensive.html","id":"step-2-the-output-plot","dir":"Articles","previous_headings":"Visualizing Regression Models with Forest Plots","what":"Step 2: The Output Plot","title":"Visualizing Regression Models with Forest Plots","text":"jamovi first fit logistic regression model behind scenes generate following forest plot results:","code":"# Load the data data(BreastCancer, package = \"ClinicoPath\")  # The jforestmodel function fits the model and creates the plot jforestmodel(   data = BreastCancer,   dependent_var = \"Class\",   predictor_vars = c(\"Cl.thickness\", \"Cell.size\", \"Cell.shape\",                      \"Marg.adhesion\", \"Epith.c.size\", \"Bare.nuclei\"),   model_type = \"glm\",   family = \"binomial\",   exponentiate = TRUE,   plot_title = \"Predictors of Breast Cancer Malignancy\",   x_axis_label = \"Odds Ratio (95% Confidence Interval)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/19-jforestmodel-comprehensive.html","id":"step-3-interpreting-the-forest-plot","dir":"Articles","previous_headings":"Visualizing Regression Models with Forest Plots","what":"Step 3: Interpreting the Forest Plot","title":"Visualizing Regression Models with Forest Plots","text":"forest plot shows odds ratio predictor variable. Vertical Line: vertical line odds ratio 1.0 represents “effect”. predictor’s confidence interval crosses line, statistically significant. Points: point represents odds ratio predictor. “best guess” effect variable. Horizontal Lines: horizontal lines represent 95% confidence interval odds ratio. gives us range plausible values true odds ratio. read results: Cl.thickness (Clump Thickness): odds ratio greater 1, confidence interval cross 1. means every one-unit increase clump thickness, odds tumor malignant increase significantly. Cell.size (Uniformity Cell Size): variable also odds ratio greater 1, confidence interval cross 1, indicating larger cell sizes associated higher odds malignancy. variables plot statistically significant predictors malignancy none confidence intervals cross vertical line 1.0.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/19-jforestmodel-comprehensive.html","id":"step-4-reporting-the-results","dir":"Articles","previous_headings":"Visualizing Regression Models with Forest Plots","what":"Step 4: Reporting the Results","title":"Visualizing Regression Models with Forest Plots","text":"reporting results forest plot, describe model report odds ratios confidence intervals key predictors. logistic regression model built predict likelihood malignant diagnosis based cellular characteristics. results displayed forest plot. Several factors found significantly associated odds malignancy. example, one-unit increase clump thickness, odds tumor malignant increased factor X (= X, 95% CI [Y, Z]). Similarly, uniformity cell size also significant predictor (= , 95% CI [B, C]). (Note: fill X, Y, Z, , B, C values output table jamovi.)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Advanced Heatmap Visualization with jggheatmap","text":"jggheatmap function provides comprehensive heatmap visualization capabilities clinical research data analysis. creates publication-ready heatmaps advanced clustering, scaling, customization options, making ideal gene expression analysis, correlation matrices, clinical parameter visualization, matrix-based data. Heatmaps essential tools clinical research : Gene Expression Analysis: Visualizing expression patterns across samples genes Correlation Matrices: Displaying relationships multiple variables Clinical Parameter Clustering: Identifying patterns patient characteristics Biomarker Discovery: Exploring associations high-dimensional data Quality Control: Identifying outliers batch effects datasets","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"","what":"Key Features","title":"Advanced Heatmap Visualization with jggheatmap","text":"jggheatmap function supports: Flexible Data Input: Matrix variables pivot format (row/column/value) Advanced Clustering: Hierarchical clustering multiple distance linkage methods Data Scaling: Row, column, global normalization options Rich Visualization: Multiple color schemes, cell shapes, annotation options Interactive Elements: Dendrograms, value displays, custom labeling Export Options: Multiple output formats customizable dimensions","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"matrix-variables-approach","dir":"Articles","previous_headings":"Basic Heatmap Creation","what":"Matrix Variables Approach","title":"Advanced Heatmap Visualization with jggheatmap","text":"simplest way create heatmap using matrix variables approach numeric data:","code":"# Load histopathology data data(histopathology, package = \"ClinicoPath\")  # Display the first few rows of relevant numeric variables head(histopathology[c(\"Age\", \"TStage\", \"Grade\", \"LVI\", \"PNI\")]) # Create a basic heatmap using matrix variables (correlation matrix) basic_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   plot_title = \"Clinical Parameters Correlation Heatmap\",   show_colorbar = TRUE,   colorbar_title = \"Correlation\" )  # The plot will be displayed in jamovi interface"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"understanding-matrix-variables","dir":"Articles","previous_headings":"Basic Heatmap Creation","what":"Understanding Matrix Variables","title":"Advanced Heatmap Visualization with jggheatmap","text":"using matrix variables: selected variable becomes column heatmap row dataset becomes row heatmap Values displayed colors according selected color scheme numeric variables included","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"rowcolumnvalue-structure","dir":"Articles","previous_headings":"Pivot Format Approach","what":"Row/Column/Value Structure","title":"Advanced Heatmap Visualization with jggheatmap","text":"data needs reshaped matrix format, use pivot approach:","code":"# Create example data in pivot format pivot_data <- histopathology[1:20, ] %>%   select(PatientID, Grade, TStage, Age) %>%   mutate(     PatientID = paste0(\"Patient_\", row_number()),     Grade = paste0(\"Grade_\", Grade)   ) %>%   # Create long format for demonstration   pivot_longer(cols = c(TStage, Age), names_to = \"Measure\", values_to = \"Value\")  head(pivot_data) # Create heatmap using pivot format pivot_heatmap <- jggheatmap(   data = pivot_data,   row_var = \"PatientID\",   col_var = \"Measure\",   value_var = \"Value\",   plot_title = \"Patient Measures Heatmap\",   cluster_rows = TRUE,   cluster_cols = FALSE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"row-scaling-z-score-by-rows","dir":"Articles","previous_headings":"Data Scaling Options","what":"Row Scaling (Z-score by rows)","title":"Advanced Heatmap Visualization with jggheatmap","text":"Row scaling normalizes row mean=0 sd=1, useful comparing patterns across variables:","code":"# Row scaling for cross-variable comparison row_scaled_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\", \"LVI\", \"PNI\"),   scaling = \"row\",   plot_title = \"Row-Scaled Clinical Parameters\",   colorbar_title = \"Z-Score\",   color_scheme = \"blue_red\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"column-scaling","dir":"Articles","previous_headings":"Data Scaling Options","what":"Column Scaling","title":"Advanced Heatmap Visualization with jggheatmap","text":"Column scaling normalizes variable independently:","code":"# Column scaling for variable standardization column_scaled_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\", \"LVI\", \"PNI\"),   scaling = \"column\",   plot_title = \"Column-Scaled Clinical Parameters\",   colorbar_title = \"Standardized Value\",   color_scheme = \"viridis\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"global-scaling","dir":"Articles","previous_headings":"Data Scaling Options","what":"Global Scaling","title":"Advanced Heatmap Visualization with jggheatmap","text":"Global scaling applies standardization across entire matrix:","code":"# Global scaling for overall comparison global_scaled_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   scaling = \"global\",   plot_title = \"Globally-Scaled Parameters\",   colorbar_title = \"Global Z-Score\",   color_scheme = \"plasma\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"hierarchical-clustering","dir":"Articles","previous_headings":"Clustering Analysis","what":"Hierarchical Clustering","title":"Advanced Heatmap Visualization with jggheatmap","text":"Enable clustering reveal patterns group similar rows/columns:","code":"# Basic clustering with default settings clustered_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\", \"LVI\", \"PNI\"),   cluster_rows = TRUE,   cluster_cols = TRUE,   scaling = \"row\",   plot_title = \"Clustered Clinical Parameters\",   show_dendrograms = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"clustering-methods","dir":"Articles","previous_headings":"Clustering Analysis","what":"Clustering Methods","title":"Advanced Heatmap Visualization with jggheatmap","text":"Different clustering methods reveal different patterns:","code":"# Ward's method clustering ward_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\", \"LVI\", \"PNI\"),   cluster_rows = TRUE,   cluster_cols = TRUE,   clustering_method = \"ward.D2\",   scaling = \"row\",   plot_title = \"Ward's Method Clustering\" )  # Average linkage clustering average_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   cluster_rows = TRUE,   cluster_cols = TRUE,   clustering_method = \"average\",   scaling = \"row\",   plot_title = \"Average Linkage Clustering\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"distance-methods","dir":"Articles","previous_headings":"Clustering Analysis","what":"Distance Methods","title":"Advanced Heatmap Visualization with jggheatmap","text":"Choose appropriate distance metrics data type:","code":"# Pearson correlation distance correlation_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\", \"LVI\", \"PNI\"),   cluster_rows = TRUE,   cluster_cols = TRUE,   distance_method = \"pearson\",   clustering_method = \"complete\",   scaling = \"row\",   plot_title = \"Pearson Correlation Distance\" )  # Manhattan distance manhattan_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   cluster_rows = TRUE,   cluster_cols = TRUE,   distance_method = \"manhattan\",   scaling = \"column\",   plot_title = \"Manhattan Distance Clustering\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"built-in-color-schemes","dir":"Articles","previous_headings":"Color Schemes and Visualization","what":"Built-in Color Schemes","title":"Advanced Heatmap Visualization with jggheatmap","text":"function provides several professional color schemes:","code":"# Viridis color scheme (perceptually uniform) viridis_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   color_scheme = \"viridis\",   plot_title = \"Viridis Color Scheme\",   scaling = \"row\" )  # Spectral color scheme (diverging) spectral_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   color_scheme = \"spectral\",   plot_title = \"Spectral Color Scheme\",   scaling = \"row\" )  # RdYlBu scheme (red-yellow-blue) rdylbu_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   color_scheme = \"rdylbu\",   plot_title = \"RdYlBu Color Scheme\",   scaling = \"row\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"cell-value-display","dir":"Articles","previous_headings":"Color Schemes and Visualization","what":"Cell Value Display","title":"Advanced Heatmap Visualization with jggheatmap","text":"Show actual values within cells detailed analysis:","code":"# Display cell values with custom formatting values_heatmap <- jggheatmap(   data = histopathology[1:15, ],  # Smaller subset for readability   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   show_values = TRUE,   value_format = \"decimal1\",   text_size = 10,   plot_title = \"Heatmap with Cell Values\",   scaling = \"none\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"label-and-text-customization","dir":"Articles","previous_headings":"Advanced Customization","what":"Label and Text Customization","title":"Advanced Heatmap Visualization with jggheatmap","text":"Control appearance row column labels:","code":"# Custom label styling custom_labels_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\", \"LVI\"),   show_row_labels = TRUE,   show_col_labels = TRUE,   row_label_size = 8,   col_label_size = 12,   plot_title = \"Custom Label Styling\",   scaling = \"row\" )  # Hide specific labels minimal_labels_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   show_row_labels = FALSE,   show_col_labels = TRUE,   col_label_size = 14,   plot_title = \"Minimal Labeling\",   scaling = \"row\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"plot-dimensions-and-layout","dir":"Articles","previous_headings":"Advanced Customization","what":"Plot Dimensions and Layout","title":"Advanced Heatmap Visualization with jggheatmap","text":"Customize plot size appearance:","code":"# Large format for publication publication_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\", \"LVI\", \"PNI\"),   plot_width = 1000,   plot_height = 800,   cluster_rows = TRUE,   cluster_cols = TRUE,   scaling = \"row\",   plot_title = \"Publication-Ready Heatmap\",   colorbar_title = \"Standardized Expression\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"cell-appearance-options","dir":"Articles","previous_headings":"Advanced Customization","what":"Cell Appearance Options","title":"Advanced Heatmap Visualization with jggheatmap","text":"Customize cell shapes colors:","code":"# Custom cell appearance custom_cells_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   cell_shape = \"circle\",   border_color = \"black\",   na_color = \"gray50\",   plot_title = \"Custom Cell Appearance\",   scaling = \"row\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"creating-correlation-heatmaps","dir":"Articles","previous_headings":"Correlation Matrix Visualization","what":"Creating Correlation Heatmaps","title":"Advanced Heatmap Visualization with jggheatmap","text":"Heatmaps excellent visualizing correlation matrices:","code":"# Calculate correlation matrix numeric_vars <- c(\"Age\", \"TStage\", \"Grade\", \"LVI\", \"PNI\") correlation_matrix <- cor(histopathology[numeric_vars], use = \"complete.obs\")  # Convert to long format for jggheatmap correlation_long <- correlation_matrix %>%   as.data.frame() %>%   rownames_to_column(\"Variable1\") %>%   pivot_longer(cols = -Variable1, names_to = \"Variable2\", values_to = \"Correlation\")  head(correlation_long) # Create correlation heatmap correlation_heatmap <- jggheatmap(   data = correlation_long,   row_var = \"Variable1\",   col_var = \"Variable2\",    value_var = \"Correlation\",   cluster_rows = TRUE,   cluster_cols = TRUE,   color_scheme = \"blue_red\",   plot_title = \"Clinical Parameter Correlations\",   colorbar_title = \"Pearson r\",   show_values = TRUE,   value_format = \"decimal2\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"multiple-output-formats","dir":"Articles","previous_headings":"Output Options and Data Export","what":"Multiple Output Formats","title":"Advanced Heatmap Visualization with jggheatmap","text":"function supports different output formats:","code":"# Plot only (default) plot_only_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   output_format = \"plot_only\",   plot_title = \"Plot Only Output\" )  # Data matrix output data_matrix_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   output_format = \"data_matrix\",   scaling = \"row\",   plot_title = \"Data Matrix Output\" )  # Both plot and data both_output_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   output_format = \"both\",   cluster_rows = TRUE,   cluster_cols = TRUE,   scaling = \"row\",   plot_title = \"Combined Output\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"gene-expression-analysis","dir":"Articles","previous_headings":"Clinical Research Applications","what":"Gene Expression Analysis","title":"Advanced Heatmap Visualization with jggheatmap","text":"genomic data analysis (simulated example):","code":"# Simulate gene expression data set.seed(123) gene_expression <- data.frame(   Patient = paste0(\"P\", 1:20),   Gene1 = rnorm(20, 5, 2),   Gene2 = rnorm(20, 3, 1.5),   Gene3 = rnorm(20, 7, 2.5),   Gene4 = rnorm(20, 4, 1),   Gene5 = rnorm(20, 6, 2) )  # Create gene expression heatmap gene_heatmap <- jggheatmap(   data = gene_expression,   matrix_vars = c(\"Gene1\", \"Gene2\", \"Gene3\", \"Gene4\", \"Gene5\"),   cluster_rows = TRUE,   cluster_cols = TRUE,   scaling = \"row\",   color_scheme = \"viridis\",   plot_title = \"Gene Expression Heatmap\",   colorbar_title = \"Log2 Expression\",   show_dendrograms = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"biomarker-analysis","dir":"Articles","previous_headings":"Clinical Research Applications","what":"Biomarker Analysis","title":"Advanced Heatmap Visualization with jggheatmap","text":"Analyzing biomarker patterns:","code":"# Create biomarker data subset biomarker_data <- histopathology %>%   select(Age, TStage, Grade, LVI, PNI) %>%   slice_head(n = 30)  # Focus on first 30 patients  # Comprehensive biomarker heatmap biomarker_heatmap <- jggheatmap(   data = biomarker_data,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\", \"LVI\", \"PNI\"),   cluster_rows = TRUE,   cluster_cols = TRUE,   clustering_method = \"ward.D2\",   distance_method = \"euclidean\",   scaling = \"column\",   color_scheme = \"spectral\",   show_values = FALSE,   show_dendrograms = TRUE,   plot_title = \"Clinical Biomarker Patterns\",   colorbar_title = \"Normalized Value\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"identifying-outliers","dir":"Articles","previous_headings":"Quality Control and Batch Effects","what":"Identifying Outliers","title":"Advanced Heatmap Visualization with jggheatmap","text":"Use heatmaps identify unusual patterns:","code":"# Create QC heatmap with highlighting qc_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\", \"LVI\", \"PNI\"),   cluster_rows = TRUE,   cluster_cols = FALSE,   scaling = \"row\",   color_scheme = \"blue_red\",   plot_title = \"Quality Control Heatmap\",   show_values = FALSE,   border_color = \"white\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"dendrogram-display","dir":"Articles","previous_headings":"Interactive Features and Annotations","what":"Dendrogram Display","title":"Advanced Heatmap Visualization with jggheatmap","text":"Show clustering relationships:","code":"# Detailed dendrogram display dendrogram_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\", \"LVI\", \"PNI\"),   cluster_rows = TRUE,   cluster_cols = TRUE,   show_dendrograms = TRUE,   dendrogram_height = 0.3,   clustering_method = \"complete\",   distance_method = \"pearson\",   scaling = \"row\",   plot_title = \"Heatmap with Dendrograms\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"annotation-variables","dir":"Articles","previous_headings":"Interactive Features and Annotations","what":"Annotation Variables","title":"Advanced Heatmap Visualization with jggheatmap","text":"Add contextual information (available):","code":"# Heatmap with annotations annotated_heatmap <- jggheatmap(   data = histopathology,   matrix_vars = c(\"Age\", \"TStage\", \"Grade\"),   annotation_var = \"Grade\",   annotation_colors = \"set1\",   cluster_rows = TRUE,   cluster_cols = TRUE,   scaling = \"row\",   plot_title = \"Annotated Heatmap\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"color-interpretation","dir":"Articles","previous_headings":"Interpretation Guidelines > Reading Heatmaps Effectively","what":"Color Interpretation","title":"Advanced Heatmap Visualization with jggheatmap","text":"Hot colors (red/yellow): High values positive associations Cool colors (blue/green): Low values negative associations White/neutral: Baseline association","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"clustering-patterns","dir":"Articles","previous_headings":"Interpretation Guidelines > Reading Heatmaps Effectively","what":"Clustering Patterns","title":"Advanced Heatmap Visualization with jggheatmap","text":"Row clusters: Groups samples similar profiles Column clusters: Groups variables similar patterns Dendrogram height: Indicates dissimilarity; longer branches = different","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"data-scaling-impact","dir":"Articles","previous_headings":"Interpretation Guidelines > Reading Heatmaps Effectively","what":"Data Scaling Impact","title":"Advanced Heatmap Visualization with jggheatmap","text":"scaling: Preserves original value relationships Row scaling: Emphasizes patterns within sample Column scaling: Emphasizes patterns within variable Global scaling: Provides overall standardization","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"distance-metrics","dir":"Articles","previous_headings":"Interpretation Guidelines > Statistical Considerations","what":"Distance Metrics","title":"Advanced Heatmap Visualization with jggheatmap","text":"Euclidean: Standard geometric distance, sensitive scale Manhattan: Sum absolute differences, robust outliers Pearson: Based linear correlation, good expression data Spearman: Based rank correlation, robust non-linear relationships","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"clustering-methods-1","dir":"Articles","previous_headings":"Interpretation Guidelines > Statistical Considerations","what":"Clustering Methods","title":"Advanced Heatmap Visualization with jggheatmap","text":"Complete: Conservative, creates compact clusters Average: Balanced approach, widely used Single: Liberal, can create elongated clusters Ward: Minimizes within-cluster variance, good even-sized groups","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"Best Practices","what":"Data Preparation","title":"Advanced Heatmap Visualization with jggheatmap","text":"Quality Control: Remove samples/variables excessive missing data Outlier Assessment: Identify evaluate extreme values Normalization: Choose appropriate scaling method data type Variable Selection: Include relevant variables sufficient variability","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"visualization-design","dir":"Articles","previous_headings":"Best Practices","what":"Visualization Design","title":"Advanced Heatmap Visualization with jggheatmap","text":"Color Choice: Use perceptually uniform color schemes possible Label Clarity: Ensure labels readable informative Plot Size: Match dimensions intended use (screen vs. publication) Legend: Include clear color bar appropriate title","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"interpretation","dir":"Articles","previous_headings":"Best Practices","what":"Interpretation","title":"Advanced Heatmap Visualization with jggheatmap","text":"Pattern Recognition: Look blocks similar colors Cluster Validation: Verify clusters make biological sense Statistical Significance: Remember patterns may statistically significant Replication: Validate patterns independent datasets possible","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"data-format-problems","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Data Format Problems","title":"Advanced Heatmap Visualization with jggheatmap","text":"","code":"# Ensure numeric variables data$variable <- as.numeric(data$variable)  # Handle missing values data <- data[complete.cases(data[variables]), ]  # Check for constant variables apply(data[variables], 2, var, na.rm = TRUE)  # Should be > 0"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"visualization-issues","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Visualization Issues","title":"Advanced Heatmap Visualization with jggheatmap","text":"","code":"# For too many variables, consider subsetting important_vars <- c(\"Gene1\", \"Gene2\", \"Gene3\")  # Select key variables  # For overcrowded labels, adjust sizes or hide them row_label_size = 6 show_row_labels = FALSE"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"performance-optimization","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Performance Optimization","title":"Advanced Heatmap Visualization with jggheatmap","text":"","code":"# For large datasets, consider sampling sample_data <- data[sample(nrow(data), 100), ]  # Or focus on most variable features var_scores <- apply(data[variables], 2, var, na.rm = TRUE) top_vars <- names(sort(var_scores, decreasing = TRUE)[1:20])"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"time-series-heatmaps","dir":"Articles","previous_headings":"Advanced Applications","what":"Time Series Heatmaps","title":"Advanced Heatmap Visualization with jggheatmap","text":"longitudinal data analysis:","code":"# Simulate time series data time_series_data <- expand.grid(   Patient = paste0(\"P\", 1:10),   Timepoint = paste0(\"T\", 1:5) ) %>%   mutate(     Biomarker1 = rnorm(50, 5, 2),     Biomarker2 = rnorm(50, 3, 1),     Biomarker3 = rnorm(50, 7, 2)   )  # Create time series heatmap timeseries_heatmap <- jggheatmap(   data = time_series_data,   row_var = \"Patient\",   col_var = \"Timepoint\",   value_var = \"Biomarker1\",   cluster_rows = TRUE,   cluster_cols = FALSE,  # Keep temporal order   color_scheme = \"plasma\",   plot_title = \"Longitudinal Biomarker Changes\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"multi-level-comparisons","dir":"Articles","previous_headings":"Advanced Applications","what":"Multi-Level Comparisons","title":"Advanced Heatmap Visualization with jggheatmap","text":"comparing different conditions:","code":"# Create condition-specific data condition_data <- histopathology %>%   mutate(Condition = ifelse(Grade > 2, \"High_Grade\", \"Low_Grade\")) %>%   select(Condition, Age, TStage, LVI, PNI) %>%   group_by(Condition) %>%   summarise(     across(c(Age, TStage, LVI, PNI), mean, na.rm = TRUE),     .groups = \"drop\"   )  # Create comparison heatmap comparison_heatmap <- jggheatmap(   data = condition_data,   matrix_vars = c(\"Age\", \"TStage\", \"LVI\", \"PNI\"),   cluster_rows = FALSE,   cluster_cols = TRUE,   scaling = \"column\",   color_scheme = \"blue_red\",   plot_title = \"Condition Comparison Heatmap\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Advanced Heatmap Visualization with jggheatmap","text":"jggheatmap function provides comprehensive solution advanced heatmap visualization clinical research. Key benefits include: Flexible Data Input: Support matrix pivot data formats Advanced Analytics: Hierarchical clustering multiple distance linkage methods Professional Quality: Publication-ready outputs extensive customization Clinical Integration: Designed medical research applications Scalability: Handles datasets small studies large genomic analyses Heatmaps powerful tools exploring complex datasets, identifying patterns, communicating findings effectively. jggheatmap function makes easy create professional-quality visualizations meet publication standards enhance research presentations. specific applications research domain, consider consulting biostatistician bioinformatician ensure appropriate analysis methods interpretation results.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/20-jggheatmap-comprehensive.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Advanced Heatmap Visualization with jggheatmap","text":"Wilkinson L, Friendly M. History Cluster Heat Map. American Statistician. 2009;63(2):179-184. Weinstein JN, et al. Cancer Genome Atlas Pan-Cancer analysis project. Nature Genetics. 2013;45(10):1113-20. Eisen MB, et al. Cluster analysis display genome-wide expression patterns. PNAS. 1998;95(25):14863-8. Ward JH. Hierarchical Grouping Optimize Objective Function. Journal American Statistical Association. 1963;58(301):236-244. Murtagh F, Contreras P. Algorithms hierarchical clustering: overview. Wiley Interdisciplinary Reviews: Data Mining Knowledge Discovery. 2012;2(1):86-97.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Ridge Plot Visualization with jggridges","text":"jggridges function provides comprehensive ridge plot visualization capabilities comparing distributions across multiple groups. Ridge plots (also known joy plots) particularly effective visualizing distribution continuous variable across different categories, making ideal clinical research applications. Ridge plots superior traditional methods like box plots violin plots : Multiple Groups: need compare distributions across many groups (>5) Distribution Shape: shape distribution important, just summary statistics Space Efficiency: need display many distributions compact format Pattern Recognition: want identify trends patterns across ordered categories Visual Appeal: need publication-quality, aesthetically pleasing visualizations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"","what":"Key Features","title":"Ridge Plot Visualization with jggridges","text":"jggridges function supports: Multiple Plot Types: Basic ridgelines, density ridges, gradient density ridges, violin ridges Flexible Aesthetics: Customizable colors, transparency, scaling Statistical Overlays: Quantile lines, mean lines, jittered data points Advanced Options: Multiple bandwidth methods, theme styles, faceting Statistical Output: Summary statistics interpretations group Publication Ready: Professional themes customizable labels","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"simple-distribution-comparison","dir":"Articles","previous_headings":"Basic Ridge Plots","what":"Simple Distribution Comparison","title":"Ridge Plot Visualization with jggridges","text":"Let’s start basic ridge plot comparing age distributions across tumor grades:","code":"# Load histopathology data data(histopathology, package = \"ClinicoPath\")  # Basic ridge plot of age by tumor grade basic_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   plot_type = \"density_ridges\",   plot_title = \"Age Distribution by Tumor Grade\",   x_label = \"Age (years)\",   y_label = \"Tumor Grade\" )  # The plot will be displayed in jamovi interface"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"understanding-the-output","dir":"Articles","previous_headings":"Basic Ridge Plots","what":"Understanding the Output","title":"Ridge Plot Visualization with jggridges","text":"Ridge plots display: - X-axis: continuous variable analyzed - Y-axis: Categories groups comparison - Ridge Height: Probability density point - Overlap: Shows distributions overlap groups","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"density-ridges","dir":"Articles","previous_headings":"Plot Types","what":"Density Ridges","title":"Ridge Plot Visualization with jggridges","text":"common type, showing smooth density estimates:","code":"# Density ridges with custom scaling density_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   plot_type = \"density_ridges\",   scale = 1.5,  # Increase ridge height   alpha = 0.8,  # Slight transparency   plot_title = \"Density Ridge Plot of Age by Grade\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"gradient-density-ridges","dir":"Articles","previous_headings":"Plot Types","what":"Gradient Density Ridges","title":"Ridge Plot Visualization with jggridges","text":"Add color gradients show density variation:","code":"# Gradient density ridges gradient_ridge <- jggridges(   data = histopathology,   x_var = \"MeasurementA\",   y_var = \"TStage\",   plot_type = \"density_ridges_gradient\",   color_palette = \"viridis\",   plot_title = \"Gradient Ridge Plot: Biomarker A by T-Stage\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"basic-ridgelines","dir":"Articles","previous_headings":"Plot Types","what":"Basic Ridgelines","title":"Ridge Plot Visualization with jggridges","text":"pre-computed densities simple line plots:","code":"# Basic ridgeline plot ridgeline <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   plot_type = \"ridgeline\",   plot_title = \"Basic Ridgeline Plot\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"violin-ridges","dir":"Articles","previous_headings":"Plot Types","what":"Violin Ridges","title":"Ridge Plot Visualization with jggridges","text":"Combination ridge plots violin plots:","code":"# Density ridge plot (violin_ridges not available in ggridges) density_ridge <- jggridges(   data = histopathology,   x_var = \"OverallTime\",   y_var = \"Group\",   plot_type = \"density_ridges\",   plot_title = \"Density Ridge Plot: Survival Time by Treatment Group\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"quantile-lines","dir":"Articles","previous_headings":"Statistical Overlays","what":"Quantile Lines","title":"Ridge Plot Visualization with jggridges","text":"Show specific quantiles within distribution:","code":"# Ridge plot with quantile lines quantile_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   plot_type = \"density_ridges\",   quantile_lines = TRUE,   quantiles = \"0.25, 0.5, 0.75\",   plot_title = \"Age Distribution with Quartiles\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"mean-lines","dir":"Articles","previous_headings":"Statistical Overlays","what":"Mean Lines","title":"Ridge Plot Visualization with jggridges","text":"Add vertical lines showing group means:","code":"# Ridge plot with mean lines mean_ridge <- jggridges(   data = histopathology,   x_var = \"MeasurementB\",   y_var = \"Grade_Level\",   plot_type = \"density_ridges\",   show_mean = TRUE,   plot_title = \"Biomarker B Distribution with Mean Lines\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"jittered-points","dir":"Articles","previous_headings":"Statistical Overlays","what":"Jittered Points","title":"Ridge Plot Visualization with jggridges","text":"Show individual data points ridges:","code":"# Ridge plot with jittered points (raincloud style) points_ridge <- jggridges(   data = histopathology[sample(nrow(histopathology), 100), ],  # Subset for clarity   x_var = \"Age\",   y_var = \"Sex\",   plot_type = \"density_ridges\",   jittered_points = TRUE,   point_alpha = 0.4,   plot_title = \"Age Distribution by Sex with Raw Data\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"color-variables","dir":"Articles","previous_headings":"Aesthetic Customization","what":"Color Variables","title":"Ridge Plot Visualization with jggridges","text":"Use third variable color ridges:","code":"# Ridge plot with color mapping color_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"TStage\",   color_var = \"LVI\",   color_palette = \"Set1\",   plot_type = \"density_ridges\",   plot_title = \"Age by T-Stage, Colored by LVI Status\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"scale-and-transparency","dir":"Articles","previous_headings":"Aesthetic Customization","what":"Scale and Transparency","title":"Ridge Plot Visualization with jggridges","text":"Control ridge height opacity:","code":"# Customized scale and transparency custom_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   scale = 2.0,      # Double the ridge height   alpha = 0.6,      # 60% opacity   rel_min_height = 0.02,  # Minimum height threshold   plot_title = \"Customized Ridge Heights and Transparency\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"theme-styles","dir":"Articles","previous_headings":"Aesthetic Customization","what":"Theme Styles","title":"Ridge Plot Visualization with jggridges","text":"Apply different ggplot2 themes:","code":"# Ridge plot with minimal theme minimal_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   theme_style = \"theme_minimal\",   plot_title = \"Minimal Theme Ridge Plot\" )  # Ridge plot with classic theme classic_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   theme_style = \"theme_classic\",   plot_title = \"Classic Theme Ridge Plot\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"bandwidth-selection","dir":"Articles","previous_headings":"Advanced Features","what":"Bandwidth Selection","title":"Ridge Plot Visualization with jggridges","text":"Control density estimation smoothness:","code":"# Different bandwidth methods bandwidth_methods <- c(\"nrd0\", \"nrd\", \"ucv\", \"SJ\")  for (method in bandwidth_methods) {   ridge_plot <- jggridges(     data = histopathology,     x_var = \"Age\",     y_var = \"Grade_Level\",     plot_type = \"density_ridges\",     bandwidth = method,     plot_title = paste(\"Bandwidth Method:\", method)   ) }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"faceting","dir":"Articles","previous_headings":"Advanced Features","what":"Faceting","title":"Ridge Plot Visualization with jggridges","text":"Create separate panels subgroups:","code":"# Faceted ridge plot facet_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   facet_var = \"Sex\",   plot_type = \"density_ridges\",   plot_title = \"Age Distribution by Grade, Faceted by Sex\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"reverse-order","dir":"Articles","previous_headings":"Advanced Features","what":"Reverse Order","title":"Ridge Plot Visualization with jggridges","text":"Reverse order groups Y-axis:","code":"# Reversed order ridge plot reverse_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   reverse_order = TRUE,   plot_title = \"Reversed Order: Low Grade at Top\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"biomarker-analysis","dir":"Articles","previous_headings":"Clinical Research Applications","what":"Biomarker Analysis","title":"Ridge Plot Visualization with jggridges","text":"Compare biomarker distributions across disease stages:","code":"# Biomarker comparison across stages biomarker_ridge <- jggridges(   data = histopathology,   x_var = \"MeasurementA\",   y_var = \"TStage\",   plot_type = \"density_ridges_gradient\",   color_palette = \"plasma\",   quantile_lines = TRUE,   quantiles = \"0.5\",   plot_title = \"Biomarker A Levels by Tumor Stage\",   x_label = \"Biomarker A Expression\",   y_label = \"T Stage\",   show_statistics = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"treatment-response","dir":"Articles","previous_headings":"Clinical Research Applications","what":"Treatment Response","title":"Ridge Plot Visualization with jggridges","text":"Visualize continuous outcomes across treatment groups:","code":"# Treatment response visualization treatment_ridge <- jggridges(   data = histopathology,   x_var = \"OverallTime\",   y_var = \"Group\",   color_var = \"Death\",   plot_type = \"density_ridges\",   show_mean = TRUE,   plot_title = \"Survival Time Distribution by Treatment Group\",   x_label = \"Overall Survival Time (months)\",   y_label = \"Treatment Group\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"multi-category-comparisons","dir":"Articles","previous_headings":"Clinical Research Applications","what":"Multi-category Comparisons","title":"Ridge Plot Visualization with jggridges","text":"Compare distributions across multiple categorical variables:","code":"# Complex multi-category comparison complex_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   color_var = \"LVI\",   facet_var = \"Sex\",   plot_type = \"density_ridges\",   scale = 1.5,   alpha = 0.7,   quantile_lines = TRUE,   quantiles = \"0.25, 0.5, 0.75\",   plot_title = \"Comprehensive Age Distribution Analysis\",   plot_subtitle = \"By Grade, LVI Status, and Sex\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"viridis-family","dir":"Articles","previous_headings":"Color Palettes","what":"Viridis Family","title":"Ridge Plot Visualization with jggridges","text":"Perceptually uniform color scales:","code":"# Viridis palette options viridis_palettes <- c(\"viridis\", \"plasma\", \"inferno\", \"magma\")  for (palette in viridis_palettes) {   ridge_plot <- jggridges(     data = histopathology,     x_var = \"Age\",     y_var = \"Grade_Level\",     plot_type = \"density_ridges_gradient\",     color_palette = palette,     plot_title = paste(\"Color Palette:\", palette)   ) }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"colorbrewer-palettes","dir":"Articles","previous_headings":"Color Palettes","what":"ColorBrewer Palettes","title":"Ridge Plot Visualization with jggridges","text":"Qualitative color schemes categorical data:","code":"# ColorBrewer palette examples brewer_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   color_var = \"Sex\",   color_palette = \"Set2\",   plot_type = \"density_ridges\",   plot_title = \"ColorBrewer Set2 Palette\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"summary-statistics","dir":"Articles","previous_headings":"Statistical Analysis","what":"Summary Statistics","title":"Ridge Plot Visualization with jggridges","text":"Generate detailed statistics group:","code":"# Ridge plot with statistics stats_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   plot_type = \"density_ridges\",   show_statistics = TRUE,   show_interpretation = TRUE,   plot_title = \"Age Distribution with Statistical Summary\" )  # Statistics table includes: # - N (sample size) # - Mean and SD # - Median and quartiles # - Min and Max values"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"interpretation-output","dir":"Articles","previous_headings":"Statistical Analysis","what":"Interpretation Output","title":"Ridge Plot Visualization with jggridges","text":"Get automated interpretation results:","code":"# Ridge plot with interpretation interpret_ridge <- jggridges(   data = histopathology,   x_var = \"MeasurementA\",   y_var = \"TStage\",   show_interpretation = TRUE,   plot_title = \"Biomarker Analysis with Interpretation\" )  # Interpretation includes: # - Dataset overview # - Overall distribution characteristics # - Group comparisons # - Visual insights"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"Best Practices","what":"Data Preparation","title":"Ridge Plot Visualization with jggridges","text":"Check Data Types: Ensure X variable numeric Y variable categorical Handle Missing Data: Function removes incomplete cases automatically Group Sizes: Ensure adequate sample size per group (n > 10 recommended) Outliers: Consider impact density estimation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"visual-design","dir":"Articles","previous_headings":"Best Practices","what":"Visual Design","title":"Ridge Plot Visualization with jggridges","text":"Use scale = 1.0 minimal overlap Use scale > 1.5 emphasized differences Use scale < 1.0 many groups Use gradient continuous density representation Use categorical colors group comparisons Consider colorblind-friendly palettes Use descriptive axis labels Add informative titles subtitles Consider rotating long group labels","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"statistical-considerations","dir":"Articles","previous_headings":"Best Practices","what":"Statistical Considerations","title":"Ridge Plot Visualization with jggridges","text":"“nrd0” (default): Good general purpose “SJ”: Better multimodal distributions “ucv”: Unbiased cross-validation Show median (0.5) central tendency Show quartiles (0.25, 0.75) spread Consider deciles detailed analysis","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"too-many-groups","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Too Many Groups","title":"Ridge Plot Visualization with jggridges","text":"","code":"# If you have many groups, adjust scale and consider ordering many_groups_ridge <- jggridges(   data = data_with_many_groups,   x_var = \"value\",   y_var = \"group\",   scale = 0.9,  # Reduce overlap   rel_min_height = 0.01,  # Show smaller ridges   expand_panel = FALSE  # Compact display )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"sparse-data","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Sparse Data","title":"Ridge Plot Visualization with jggridges","text":"","code":"# For sparse data, adjust bandwidth sparse_ridge <- jggridges(   data = sparse_data,   x_var = \"value\",   y_var = \"group\",   bandwidth = \"SJ\",  # Adaptive bandwidth   plot_type = \"density_ridges\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"overlapping-labels","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Overlapping Labels","title":"Ridge Plot Visualization with jggridges","text":"","code":"# Handle overlapping Y-axis labels label_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   theme_style = \"theme_minimal\",   expand_panel = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"complete-example","dir":"Articles","previous_headings":"","what":"Complete Example","title":"Ridge Plot Visualization with jggridges","text":"’s comprehensive example using major features:","code":"# Comprehensive ridge plot analysis comprehensive_ridge <- jggridges(   data = histopathology,   x_var = \"Age\",   y_var = \"Grade_Level\",   color_var = \"LVI\",   plot_type = \"density_ridges_gradient\",   scale = 1.8,   alpha = 0.8,   rel_min_height = 0.01,   bandwidth = \"nrd0\",   quantile_lines = TRUE,   quantiles = \"0.1, 0.25, 0.5, 0.75, 0.9\",   show_mean = TRUE,   color_palette = \"viridis\",   reverse_order = FALSE,   expand_panel = TRUE,   theme_style = \"theme_ridges\",   x_label = \"Patient Age (years)\",   y_label = \"Tumor Grade Category\",   plot_title = \"Age Distribution Analysis by Tumor Grade\",   plot_subtitle = \"Colored by Lymphovascular Invasion Status\",   show_statistics = TRUE,   show_interpretation = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Ridge Plot Visualization with jggridges","text":"jggridges function provides powerful flexible tool creating ridge plots clinical research. Key benefits include: Efficient Visualization: Compare many distributions single plot Pattern Recognition: Easily identify trends across ordered categories Statistical Integration: Built-summary statistics interpretations Publication Quality: Professional themes customization options Clinical Relevance: Designed medical research applications Ridge plots particularly valuable traditional methods like box plots fail capture full complexity data distributions, making essential tool modern clinical data visualization.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/21-jggridges-comprehensive.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Ridge Plot Visualization with jggridges","text":"Wilke, C.O. (2017). ggridges: Ridgeline plots ggplot2. R package version 0.5.3. Hintze, J. L., & Nelson, R. D. (1998). Violin plots: box plot-density trace synergism. American Statistician, 52(2), 181-184. Kampstra, P. (2008). Beanplot: boxplot alternative visual comparison distributions. Journal Statistical Software, 28(1), 1-9.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"overview","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier","what":"Overview","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"jggsankeyfier function creates flow diagrams visualize quantities flow different categories time different stages. guide covers three main diagram types: Sankey Diagrams: Visualize flows source target nodes thickness proportional flow magnitude Alluvial Diagrams: Show categorical variables change across multiple dimensions time points Parallel Sets: Alternative representation using straight lines instead curves","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"when-to-use-each-type","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Understanding Flow Diagrams","what":"When to Use Each Type","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"Sankey Diagrams ideal : - Budget allocation expenditure flows - Energy consumption patterns - Material flows manufacturing - Website traffic patterns - Patient referral pathways Alluvial Diagrams excel showing: - Treatment progression multiple stages - Educational pathways outcomes - Customer journey mapping - Survey response changes time - Multi-step process optimization Parallel Sets useful : - Categorical data relationships - Survey response patterns - Classification hierarchies - Decision tree visualizations","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"simple-source-target-flow","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Basic Usage Examples","what":"Simple Source-Target Flow","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Load test data data(\"simple_flow_data\", package = \"ClinicoPath\")  # Basic sankey diagram # jggsankeyfier( #   data = simple_flow_data, #   value_var = \"flow_amount\", #   source_var = \"from_node\",  #   target_var = \"to_node\", #   diagram_type = \"sankey\", #   plot_title = \"Simple Flow Diagram\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"multi-level-alluvial-diagram","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Basic Usage Examples","what":"Multi-Level Alluvial Diagram","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Load complex data data(\"complex_alluvial_data\", package = \"ClinicoPath\")  # Multi-level alluvial diagram # jggsankeyfier( #   data = complex_alluvial_data, #   value_var = \"revenue\", #   node_vars = c(\"level_1\", \"level_2\", \"level_3\", \"level_4\"), #   diagram_type = \"alluvial\", #   plot_title = \"Multi-Level Revenue Flow\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"treatment-pathway-analysis","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Clinical Research Applications","what":"Treatment Pathway Analysis","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Load treatment pathway data data(\"treatment_pathways_data\", package = \"ClinicoPath\")  # Visualize treatment progression # jggsankeyfier( #   data = treatment_pathways_data, #   value_var = \"patient_count\", #   node_vars = c(\"initial_diagnosis\", \"first_treatment\", \"response\", \"final_outcome\"), #   grouping_var = \"age_group\", #   diagram_type = \"alluvial\", #   color_palette = \"viridis\", #   plot_title = \"Cancer Treatment Pathways\", #   plot_subtitle = \"Patient flow through treatment stages\", #   show_statistics = TRUE, #   show_interpretation = TRUE # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"patient-outcome-flows","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Clinical Research Applications","what":"Patient Outcome Flows","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Create outcome-focused view # jggsankeyfier( #   data = treatment_pathways_data, #   value_var = \"patient_count\",  #   source_var = \"response\", #   target_var = \"final_outcome\", #   grouping_var = \"age_group\", #   diagram_type = \"sankey\", #   color_palette = \"set3\", #   plot_title = \"Treatment Response to Final Outcome\", #   flow_direction = \"left_right\", #   show_labels = TRUE, #   show_values = TRUE # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"business-process-optimization","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Business Process Analysis","what":"Business Process Optimization","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Load business process data data(\"business_process_data\", package = \"ClinicoPath\")  # Analyze process flows # jggsankeyfier( #   data = business_process_data, #   value_var = \"process_value\", #   node_vars = c(\"department_start\", \"process_step_1\", \"process_step_2\", \"final_outcome\"), #   grouping_var = \"region\", #   time_var = \"quarter\",  #   diagram_type = \"alluvial\", #   color_palette = \"plasma\", #   plot_title = \"Business Process Value Flow\", #   plot_subtitle = \"Quarterly process analysis by region\", #   sort_nodes = \"by_value\", #   value_format = \"rounded\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"sales-pipeline-analysis","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Business Process Analysis","what":"Sales Pipeline Analysis","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Focus on successful outcomes successful_processes <- business_process_data %>%   filter(final_outcome %in% c(\"Closed Won\", \"On Hold\"))  # jggsankeyfier( #   data = successful_processes, #   value_var = \"process_value\", #   source_var = \"department_start\", #   target_var = \"final_outcome\", #   grouping_var = \"quarter\", #   diagram_type = \"sankey\", #   color_palette = \"dark2\", #   plot_title = \"Successful Sales Pipeline\", #   edge_alpha = 0.8, #   node_width = 0.7, #   show_values = TRUE, #   value_format = \"rounded\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"educational-pathways","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Educational Data Analysis","what":"Educational Pathways","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Load education data data(\"education_pathways_data\", package = \"ClinicoPath\")  # Analyze educational progression # jggsankeyfier( #   data = education_pathways_data, #   value_var = \"student_count\", #   node_vars = c(\"high_school_type\", \"college_admission\", \"major_category\", \"graduation_status\"), #   grouping_var = \"socioeconomic_status\", #   diagram_type = \"alluvial\", #   color_palette = \"pastel1\", #   plot_title = \"Educational Pathway Analysis\", #   plot_subtitle = \"Student progression through education system\", #   show_interpretation = TRUE, #   output_format = \"both\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"college-admission-outcomes","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Educational Data Analysis","what":"College Admission Outcomes","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Focus on college admission patterns # jggsankeyfier( #   data = education_pathways_data, #   value_var = \"student_count\", #   source_var = \"high_school_type\", #   target_var = \"college_admission\", #   grouping_var = \"socioeconomic_status\", #   diagram_type = \"parallel_sets\", #   color_palette = \"viridis\", #   plot_title = \"High School to College Transitions\", #   flow_direction = \"left_right\", #   show_labels = TRUE, #   label_size = 10 # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"system-migration-flows","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Technology Migration Analysis","what":"System Migration Flows","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Load technology migration data data(\"tech_migration_data\", package = \"ClinicoPath\")  # Analyze migration patterns # jggsankeyfier( #   data = tech_migration_data, #   value_var = \"migration_cost\", #   node_vars = c(\"legacy_system\", \"migration_phase_1\", \"migration_phase_2\", \"implementation\"), #   grouping_var = \"business_unit\", #   diagram_type = \"sankey\", #   color_palette = \"set3\", #   plot_title = \"Technology Migration Analysis\", #   plot_subtitle = \"Cost flow through migration phases\", #   sort_nodes = \"by_value\", #   value_format = \"rounded\", #   show_statistics = TRUE # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"custom-color-schemes-and-styling","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Advanced Customization","what":"Custom Color Schemes and Styling","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Advanced styling example # jggsankeyfier( #   data = simple_flow_data, #   value_var = \"flow_value\", #   source_var = \"source\", #   target_var = \"target\", #   grouping_var = \"group\", #   diagram_type = \"alluvial\", #   color_palette = \"viridis\", #   node_width = 0.8, #   edge_alpha = 0.7, #   show_labels = TRUE, #   label_size = 12, #   show_values = TRUE, #   value_format = \"percent\", #   plot_title = \"Custom Styled Flow Diagram\", #   plot_subtitle = \"Demonstrating advanced styling options\", #   theme_style = \"minimal\", #   flow_direction = \"left_right\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"different-flow-directions","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Advanced Customization","what":"Different Flow Directions","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Demonstrate different flow directions directions <- c(\"left_right\", \"top_bottom\", \"right_left\", \"bottom_top\")  # for (direction in directions[1:2]) {  # Show first two for brevity #   print( #     jggsankeyfier( #       data = simple_flow_data, #       value_var = \"flow_amount\", #       source_var = \"from_node\", #       target_var = \"to_node\", #       diagram_type = \"sankey\", #       flow_direction = direction, #       plot_title = paste(\"Flow Direction:\", gsub(\"_\", \" to \", direction)) #     ) #   ) # }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"source-target-format","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Data Preparation Guidelines","what":"Source-Target Format","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"simple flow diagrams, data contain:","code":"# Example source-target format example_data <- data.frame(   source = c(\"A\", \"A\", \"B\", \"B\", \"C\"),   target = c(\"X\", \"Y\", \"X\", \"Z\", \"Y\"),   flow_value = c(50, 30, 25, 40, 35),   category = c(\"Type1\", \"Type2\", \"Type1\", \"Type2\", \"Type1\") )  print(example_data)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"multi-node-format","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Data Preparation Guidelines","what":"Multi-Node Format","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"alluvial diagrams multiple stages:","code":"# Example multi-node format   example_alluvial <- data.frame(   stage_1 = c(\"Start_A\", \"Start_B\", \"Start_A\", \"Start_C\"),   stage_2 = c(\"Mid_X\", \"Mid_Y\", \"Mid_Z\", \"Mid_X\"),    stage_3 = c(\"End_1\", \"End_2\", \"End_1\", \"End_3\"),   value = c(100, 75, 50, 25),   group = c(\"Group1\", \"Group2\", \"Group1\", \"Group3\") )  print(example_alluvial)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"key-elements-to-analyze","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Interpreting Flow Diagrams","what":"Key Elements to Analyze","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"Flow Thickness: Proportional magnitude flow nodes Node Size: Represents total flow node Color Coding: Groups flows categories highlights patterns Flow Convergence: Multiple sources feeding single targets Flow Divergence: Single sources splitting multiple targets","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"statistical-insights","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Interpreting Flow Diagrams","what":"Statistical Insights","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"function provides automatic statistics including: Total flow volume Mean median flow sizes Number distinct flows Maximum minimum flows Flow distribution patterns","code":"# Example with statistics enabled # jggsankeyfier( #   data = simple_flow_data, #   value_var = \"flow_amount\", #   source_var = \"from_node\", #   target_var = \"to_node\", #   diagram_type = \"sankey\", #   show_statistics = TRUE, #   show_interpretation = TRUE, #   output_format = \"both\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"clinical-decision-pathways","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Common Use Cases in Healthcare","what":"Clinical Decision Pathways","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Create synthetic clinical decision data clinical_decisions <- data.frame(   presentation = rep(c(\"Chest Pain\", \"Shortness of Breath\", \"Fatigue\"), each = 50),   initial_test = sample(c(\"ECG\", \"Chest X-ray\", \"Blood Work\", \"Echo\"), 150, replace = TRUE),   diagnosis = sample(c(\"Cardiac\", \"Pulmonary\", \"Other\", \"Normal\"), 150, replace = TRUE),   treatment = sample(c(\"Medication\", \"Surgery\", \"Monitoring\", \"Discharge\"), 150, replace = TRUE),   patient_count = 1 )  # Aggregate data clinical_summary <- clinical_decisions %>%   group_by(presentation, initial_test, diagnosis, treatment) %>%   summarise(patient_count = sum(patient_count), .groups = \"drop\")  # jggsankeyfier( #   data = clinical_summary, #   value_var = \"patient_count\", #   node_vars = c(\"presentation\", \"initial_test\", \"diagnosis\", \"treatment\"), #   diagram_type = \"alluvial\", #   color_palette = \"viridis\", #   plot_title = \"Clinical Decision Pathway Analysis\", #   plot_subtitle = \"Patient flow through diagnostic and treatment stages\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"hospital-department-transfers","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Common Use Cases in Healthcare","what":"Hospital Department Transfers","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Create hospital transfer data hospital_transfers <- data.frame(   admission_dept = sample(c(\"Emergency\", \"Cardiology\", \"Surgery\", \"Medicine\"), 200, replace = TRUE),   transfer_dept = sample(c(\"ICU\", \"Step-down\", \"General Ward\", \"Discharge\"), 200, replace = TRUE),   los_days = sample(1:14, 200, replace = TRUE),   severity = sample(c(\"Low\", \"Medium\", \"High\"), 200, replace = TRUE, prob = c(0.5, 0.3, 0.2)) )  # Aggregate by severity transfer_summary <- hospital_transfers %>%   group_by(admission_dept, transfer_dept, severity) %>%   summarise(patient_count = n(), avg_los = mean(los_days), .groups = \"drop\")  # jggsankeyfier( #   data = transfer_summary, #   value_var = \"patient_count\", #   source_var = \"admission_dept\", #   target_var = \"transfer_dept\", #   grouping_var = \"severity\", #   diagram_type = \"sankey\", #   color_palette = \"plasma\", #   plot_title = \"Hospital Department Transfers\", #   plot_subtitle = \"Patient flow between departments by severity\", #   show_values = TRUE, #   show_interpretation = TRUE # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"large-dataset-handling","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Performance Optimization","what":"Large Dataset Handling","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"large datasets (>10,000 flows), consider: Data Aggregation: Pre-aggregate similar flows Filtering: Focus significant flows Sampling: Use representative subsets exploration","code":"# Example of data aggregation for performance large_dataset_simulation <- data.frame(   source = sample(paste0(\"Source_\", 1:20), 5000, replace = TRUE),   target = sample(paste0(\"Target_\", 1:20), 5000, replace = TRUE),   value = sample(1:100, 5000, replace = TRUE) )  # Aggregate to reduce complexity aggregated_data <- large_dataset_simulation %>%   group_by(source, target) %>%   summarise(total_value = sum(value), flow_count = n(), .groups = \"drop\") %>%   filter(total_value >= quantile(total_value, 0.75))  # Focus on top 25% of flows  # jggsankeyfier( #   data = aggregated_data, #   value_var = \"total_value\",  #   source_var = \"source\", #   target_var = \"target\", #   diagram_type = \"sankey\", #   plot_title = \"Optimized Large Dataset Visualization\", #   plot_subtitle = \"Showing top 25% of flows by value\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"common-issues-and-solutions","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Troubleshooting Guide","what":"Common Issues and Solutions","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"Issue: “flows display” - Solution: Check value variable contains positive numbers - Solution: Verify source/target node variables properly specified Issue: “Overlapping labels” - Solution: Adjust label_size parameter - Solution: Use show_labels = FALSE complex diagrams - Solution: Try different flow_direction settings Issue: “many categories” - Solution: Aggregate low-frequency categories “” - Solution: Filter show significant flows - Solution: Use multi-level grouping Issue: “Memory issues large data” - Solution: Pre-aggregate data visualization - Solution: Sample representative subset - Solution: Filter top N flows value","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"data-quality-checks","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Troubleshooting Guide","what":"Data Quality Checks","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"","code":"# Function to check data quality for flow diagrams check_flow_data <- function(data, value_var, source_var = NULL, target_var = NULL, node_vars = NULL) {      cat(\"Data Quality Assessment for Flow Diagram\\n\")   cat(\"==========================================\\n\\n\")      # Basic data info   cat(\"Dataset dimensions:\", nrow(data), \"rows,\", ncol(data), \"columns\\n\\n\")      # Check value variable   if (!is.null(value_var)) {     values <- data[[value_var]]     cat(\"Value Variable (\", value_var, \"):\\n\")     cat(\"  - Non-missing values:\", sum(!is.na(values)), \"/\", length(values), \"\\n\")     cat(\"  - Range:\", min(values, na.rm = TRUE), \"to\", max(values, na.rm = TRUE), \"\\n\")     cat(\"  - Zero values:\", sum(values == 0, na.rm = TRUE), \"\\n\")     cat(\"  - Negative values:\", sum(values < 0, na.rm = TRUE), \"\\n\\n\")   }      # Check source-target format   if (!is.null(source_var) && !is.null(target_var)) {     cat(\"Source-Target Format:\\n\")     cat(\"  - Unique sources:\", length(unique(data[[source_var]])), \"\\n\")     cat(\"  - Unique targets:\", length(unique(data[[target_var]])), \"\\n\")     cat(\"  - Total unique flows:\", nrow(unique(data[c(source_var, target_var)])), \"\\n\\n\")   }      # Check multi-node format   if (!is.null(node_vars)) {     cat(\"Multi-Node Format:\\n\")     for (var in node_vars) {       cat(\"  -\", var, \"unique values:\", length(unique(data[[var]])), \"\\n\")     }   } }  # Example usage check_flow_data(   data = simple_flow_data,   value_var = \"flow_amount\",   source_var = \"from_node\",    target_var = \"to_node\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"design-principles","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Best Practices","what":"Design Principles","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"Clarity: Keep diagrams simple focused Color Harmony: Use consistent color schemes Proportionality: Ensure flow thickness accurately represents magnitude Labeling: Provide clear, concise labels Context: Include titles subtitles interpretation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"analytical-workflow","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier > Best Practices","what":"Analytical Workflow","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"Data Exploration: Start summary statistics Simple Visualization: Begin basic diagrams Iterative Refinement: Add complexity gradually Validation: Cross-check source data Interpretation: Focus key insights patterns","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jggsankeyfier-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jggsankeyfier","what":"Conclusion","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jggsankeyfier","text":"jggsankeyfier function provides powerful capabilities visualizing flow data across multiple domains. Whether analyzing clinical pathways, business processes, educational outcomes, diagrams offer intuitive ways understand complex relationships identify optimization opportunities. Key takeaways: Choose diagram type based data structure analysis goals Use appropriate aggregation complex datasets Customize visual elements enhance clarity Validate visualizations source data Focus actionable insights flow patterns additional examples advanced techniques, explore comprehensive test datasets included package.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"overview","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier","what":"Overview","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"jjsankeyfier function creates flow diagrams visualize quantities flow different categories time different stages. guide covers three main diagram types: Sankey Diagrams: Visualize flows source target nodes thickness proportional flow magnitude Alluvial Diagrams: Show categorical variables change across multiple dimensions time points Parallel Sets: Alternative representation using straight lines instead curves","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"when-to-use-each-type","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Understanding Flow Diagrams","what":"When to Use Each Type","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"Sankey Diagrams ideal : - Budget allocation expenditure flows - Energy consumption patterns - Material flows manufacturing - Website traffic patterns - Patient referral pathways Alluvial Diagrams excel showing: - Treatment progression multiple stages - Educational pathways outcomes - Customer journey mapping - Survey response changes time - Multi-step process optimization Parallel Sets useful : - Categorical data relationships - Survey response patterns - Classification hierarchies - Decision tree visualizations","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"simple-source-target-flow","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Basic Usage Examples","what":"Simple Source-Target Flow","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Load test data data(\"simple_flow_data\", package = \"ClinicoPath\")  # Basic sankey diagram # jjsankeyfier( #   data = simple_flow_data, #   value_var = \"flow_amount\", #   source_var = \"from_node\",  #   target_var = \"to_node\", #   diagram_type = \"sankey\", #   plot_title = \"Simple Flow Diagram\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"multi-level-alluvial-diagram","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Basic Usage Examples","what":"Multi-Level Alluvial Diagram","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Load complex data data(\"complex_alluvial_data\", package = \"ClinicoPath\")  # Multi-level alluvial diagram # jjsankeyfier( #   data = complex_alluvial_data, #   value_var = \"revenue\", #   node_vars = c(\"level_1\", \"level_2\", \"level_3\", \"level_4\"), #   diagram_type = \"alluvial\", #   plot_title = \"Multi-Level Revenue Flow\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"treatment-pathway-analysis","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Clinical Research Applications","what":"Treatment Pathway Analysis","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Load treatment pathway data data(\"treatment_pathways_data\", package = \"ClinicoPath\")  # Visualize treatment progression # jjsankeyfier( #   data = treatment_pathways_data, #   value_var = \"patient_count\", #   node_vars = c(\"initial_diagnosis\", \"first_treatment\", \"response\", \"final_outcome\"), #   grouping_var = \"age_group\", #   diagram_type = \"alluvial\", #   color_palette = \"viridis\", #   plot_title = \"Cancer Treatment Pathways\", #   plot_subtitle = \"Patient flow through treatment stages\", #   show_statistics = TRUE, #   show_interpretation = TRUE # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"patient-outcome-flows","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Clinical Research Applications","what":"Patient Outcome Flows","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Create outcome-focused view # jjsankeyfier( #   data = treatment_pathways_data, #   value_var = \"patient_count\",  #   source_var = \"response\", #   target_var = \"final_outcome\", #   grouping_var = \"age_group\", #   diagram_type = \"sankey\", #   color_palette = \"set3\", #   plot_title = \"Treatment Response to Final Outcome\", #   flow_direction = \"left_right\", #   show_labels = TRUE, #   show_values = TRUE # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"business-process-optimization","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Business Process Analysis","what":"Business Process Optimization","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Load business process data data(\"business_process_data\", package = \"ClinicoPath\")  # Analyze process flows # jjsankeyfier( #   data = business_process_data, #   value_var = \"process_value\", #   node_vars = c(\"department_start\", \"process_step_1\", \"process_step_2\", \"final_outcome\"), #   grouping_var = \"region\", #   time_var = \"quarter\",  #   diagram_type = \"alluvial\", #   color_palette = \"plasma\", #   plot_title = \"Business Process Value Flow\", #   plot_subtitle = \"Quarterly process analysis by region\", #   sort_nodes = \"by_value\", #   value_format = \"rounded\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"sales-pipeline-analysis","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Business Process Analysis","what":"Sales Pipeline Analysis","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Focus on successful outcomes successful_processes <- business_process_data %>%   filter(final_outcome %in% c(\"Closed Won\", \"On Hold\"))  # jjsankeyfier( #   data = successful_processes, #   value_var = \"process_value\", #   source_var = \"department_start\", #   target_var = \"final_outcome\", #   grouping_var = \"quarter\", #   diagram_type = \"sankey\", #   color_palette = \"dark2\", #   plot_title = \"Successful Sales Pipeline\", #   edge_alpha = 0.8, #   node_width = 0.7, #   show_values = TRUE, #   value_format = \"rounded\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"educational-pathways","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Educational Data Analysis","what":"Educational Pathways","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Load education data data(\"education_pathways_data\", package = \"ClinicoPath\")  # Analyze educational progression # jjsankeyfier( #   data = education_pathways_data, #   value_var = \"student_count\", #   node_vars = c(\"high_school_type\", \"college_admission\", \"major_category\", \"graduation_status\"), #   grouping_var = \"socioeconomic_status\", #   diagram_type = \"alluvial\", #   color_palette = \"pastel1\", #   plot_title = \"Educational Pathway Analysis\", #   plot_subtitle = \"Student progression through education system\", #   show_interpretation = TRUE, #   output_format = \"both\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"college-admission-outcomes","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Educational Data Analysis","what":"College Admission Outcomes","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Focus on college admission patterns # jjsankeyfier( #   data = education_pathways_data, #   value_var = \"student_count\", #   source_var = \"high_school_type\", #   target_var = \"college_admission\", #   grouping_var = \"socioeconomic_status\", #   diagram_type = \"parallel_sets\", #   color_palette = \"viridis\", #   plot_title = \"High School to College Transitions\", #   flow_direction = \"left_right\", #   show_labels = TRUE, #   label_size = 10 # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"system-migration-flows","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Technology Migration Analysis","what":"System Migration Flows","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Load technology migration data data(\"tech_migration_data\", package = \"ClinicoPath\")  # Analyze migration patterns # jjsankeyfier( #   data = tech_migration_data, #   value_var = \"migration_cost\", #   node_vars = c(\"legacy_system\", \"migration_phase_1\", \"migration_phase_2\", \"implementation\"), #   grouping_var = \"business_unit\", #   diagram_type = \"sankey\", #   color_palette = \"set3\", #   plot_title = \"Technology Migration Analysis\", #   plot_subtitle = \"Cost flow through migration phases\", #   sort_nodes = \"by_value\", #   value_format = \"rounded\", #   show_statistics = TRUE # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"custom-color-schemes-and-styling","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Advanced Customization","what":"Custom Color Schemes and Styling","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Advanced styling example # jjsankeyfier( #   data = simple_flow_data, #   value_var = \"flow_value\", #   source_var = \"source\", #   target_var = \"target\", #   grouping_var = \"group\", #   diagram_type = \"alluvial\", #   color_palette = \"viridis\", #   node_width = 0.8, #   edge_alpha = 0.7, #   show_labels = TRUE, #   label_size = 12, #   show_values = TRUE, #   value_format = \"percent\", #   plot_title = \"Custom Styled Flow Diagram\", #   plot_subtitle = \"Demonstrating advanced styling options\", #   theme_style = \"minimal\", #   flow_direction = \"left_right\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"different-flow-directions","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Advanced Customization","what":"Different Flow Directions","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Demonstrate different flow directions directions <- c(\"left_right\", \"top_bottom\", \"right_left\", \"bottom_top\")  # for (direction in directions[1:2]) {  # Show first two for brevity #   print( #     jjsankeyfier( #       data = simple_flow_data, #       value_var = \"flow_amount\", #       source_var = \"from_node\", #       target_var = \"to_node\", #       diagram_type = \"sankey\", #       flow_direction = direction, #       plot_title = paste(\"Flow Direction:\", gsub(\"_\", \" to \", direction)) #     ) #   ) # }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"source-target-format","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Data Preparation Guidelines","what":"Source-Target Format","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"simple flow diagrams, data contain:","code":"# Example source-target format example_data <- data.frame(   source = c(\"A\", \"A\", \"B\", \"B\", \"C\"),   target = c(\"X\", \"Y\", \"X\", \"Z\", \"Y\"),   flow_value = c(50, 30, 25, 40, 35),   category = c(\"Type1\", \"Type2\", \"Type1\", \"Type2\", \"Type1\") )  print(example_data)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"multi-node-format","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Data Preparation Guidelines","what":"Multi-Node Format","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"alluvial diagrams multiple stages:","code":"# Example multi-node format   example_alluvial <- data.frame(   stage_1 = c(\"Start_A\", \"Start_B\", \"Start_A\", \"Start_C\"),   stage_2 = c(\"Mid_X\", \"Mid_Y\", \"Mid_Z\", \"Mid_X\"),    stage_3 = c(\"End_1\", \"End_2\", \"End_1\", \"End_3\"),   value = c(100, 75, 50, 25),   group = c(\"Group1\", \"Group2\", \"Group1\", \"Group3\") )  print(example_alluvial)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"key-elements-to-analyze","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Interpreting Flow Diagrams","what":"Key Elements to Analyze","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"Flow Thickness: Proportional magnitude flow nodes Node Size: Represents total flow node Color Coding: Groups flows categories highlights patterns Flow Convergence: Multiple sources feeding single targets Flow Divergence: Single sources splitting multiple targets","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"statistical-insights","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Interpreting Flow Diagrams","what":"Statistical Insights","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"function provides automatic statistics including: Total flow volume Mean median flow sizes Number distinct flows Maximum minimum flows Flow distribution patterns","code":"# Example with statistics enabled # jjsankeyfier( #   data = simple_flow_data, #   value_var = \"flow_amount\", #   source_var = \"from_node\", #   target_var = \"to_node\", #   diagram_type = \"sankey\", #   show_statistics = TRUE, #   show_interpretation = TRUE, #   output_format = \"both\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"clinical-decision-pathways","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Common Use Cases in Healthcare","what":"Clinical Decision Pathways","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Create synthetic clinical decision data clinical_decisions <- data.frame(   presentation = rep(c(\"Chest Pain\", \"Shortness of Breath\", \"Fatigue\"), each = 50),   initial_test = sample(c(\"ECG\", \"Chest X-ray\", \"Blood Work\", \"Echo\"), 150, replace = TRUE),   diagnosis = sample(c(\"Cardiac\", \"Pulmonary\", \"Other\", \"Normal\"), 150, replace = TRUE),   treatment = sample(c(\"Medication\", \"Surgery\", \"Monitoring\", \"Discharge\"), 150, replace = TRUE),   patient_count = 1 )  # Aggregate data clinical_summary <- clinical_decisions %>%   group_by(presentation, initial_test, diagnosis, treatment) %>%   summarise(patient_count = sum(patient_count), .groups = \"drop\")  # jjsankeyfier( #   data = clinical_summary, #   value_var = \"patient_count\", #   node_vars = c(\"presentation\", \"initial_test\", \"diagnosis\", \"treatment\"), #   diagram_type = \"alluvial\", #   color_palette = \"viridis\", #   plot_title = \"Clinical Decision Pathway Analysis\", #   plot_subtitle = \"Patient flow through diagnostic and treatment stages\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"hospital-department-transfers","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Common Use Cases in Healthcare","what":"Hospital Department Transfers","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Create hospital transfer data hospital_transfers <- data.frame(   admission_dept = sample(c(\"Emergency\", \"Cardiology\", \"Surgery\", \"Medicine\"), 200, replace = TRUE),   transfer_dept = sample(c(\"ICU\", \"Step-down\", \"General Ward\", \"Discharge\"), 200, replace = TRUE),   los_days = sample(1:14, 200, replace = TRUE),   severity = sample(c(\"Low\", \"Medium\", \"High\"), 200, replace = TRUE, prob = c(0.5, 0.3, 0.2)) )  # Aggregate by severity transfer_summary <- hospital_transfers %>%   group_by(admission_dept, transfer_dept, severity) %>%   summarise(patient_count = n(), avg_los = mean(los_days), .groups = \"drop\")  # jjsankeyfier( #   data = transfer_summary, #   value_var = \"patient_count\", #   source_var = \"admission_dept\", #   target_var = \"transfer_dept\", #   grouping_var = \"severity\", #   diagram_type = \"sankey\", #   color_palette = \"plasma\", #   plot_title = \"Hospital Department Transfers\", #   plot_subtitle = \"Patient flow between departments by severity\", #   show_values = TRUE, #   show_interpretation = TRUE # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"large-dataset-handling","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Performance Optimization","what":"Large Dataset Handling","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"large datasets (>10,000 flows), consider: Data Aggregation: Pre-aggregate similar flows Filtering: Focus significant flows Sampling: Use representative subsets exploration","code":"# Example of data aggregation for performance large_dataset_simulation <- data.frame(   source = sample(paste0(\"Source_\", 1:20), 5000, replace = TRUE),   target = sample(paste0(\"Target_\", 1:20), 5000, replace = TRUE),   value = sample(1:100, 5000, replace = TRUE) )  # Aggregate to reduce complexity aggregated_data <- large_dataset_simulation %>%   group_by(source, target) %>%   summarise(total_value = sum(value), flow_count = n(), .groups = \"drop\") %>%   filter(total_value >= quantile(total_value, 0.75))  # Focus on top 25% of flows  # jjsankeyfier( #   data = aggregated_data, #   value_var = \"total_value\",  #   source_var = \"source\", #   target_var = \"target\", #   diagram_type = \"sankey\", #   plot_title = \"Optimized Large Dataset Visualization\", #   plot_subtitle = \"Showing top 25% of flows by value\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"common-issues-and-solutions","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Troubleshooting Guide","what":"Common Issues and Solutions","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"Issue: “flows display” - Solution: Check value variable contains positive numbers - Solution: Verify source/target node variables properly specified Issue: “Overlapping labels” - Solution: Adjust label_size parameter - Solution: Use show_labels = FALSE complex diagrams - Solution: Try different flow_direction settings Issue: “many categories” - Solution: Aggregate low-frequency categories “” - Solution: Filter show significant flows - Solution: Use multi-level grouping Issue: “Memory issues large data” - Solution: Pre-aggregate data visualization - Solution: Sample representative subset - Solution: Filter top N flows value","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"data-quality-checks","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Troubleshooting Guide","what":"Data Quality Checks","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"","code":"# Function to check data quality for flow diagrams check_flow_data <- function(data, value_var, source_var = NULL, target_var = NULL, node_vars = NULL) {      cat(\"Data Quality Assessment for Flow Diagram\\n\")   cat(\"==========================================\\n\\n\")      # Basic data info   cat(\"Dataset dimensions:\", nrow(data), \"rows,\", ncol(data), \"columns\\n\\n\")      # Check value variable   if (!is.null(value_var)) {     values <- data[[value_var]]     cat(\"Value Variable (\", value_var, \"):\\n\")     cat(\"  - Non-missing values:\", sum(!is.na(values)), \"/\", length(values), \"\\n\")     cat(\"  - Range:\", min(values, na.rm = TRUE), \"to\", max(values, na.rm = TRUE), \"\\n\")     cat(\"  - Zero values:\", sum(values == 0, na.rm = TRUE), \"\\n\")     cat(\"  - Negative values:\", sum(values < 0, na.rm = TRUE), \"\\n\\n\")   }      # Check source-target format   if (!is.null(source_var) && !is.null(target_var)) {     cat(\"Source-Target Format:\\n\")     cat(\"  - Unique sources:\", length(unique(data[[source_var]])), \"\\n\")     cat(\"  - Unique targets:\", length(unique(data[[target_var]])), \"\\n\")     cat(\"  - Total unique flows:\", nrow(unique(data[c(source_var, target_var)])), \"\\n\\n\")   }      # Check multi-node format   if (!is.null(node_vars)) {     cat(\"Multi-Node Format:\\n\")     for (var in node_vars) {       cat(\"  -\", var, \"unique values:\", length(unique(data[[var]])), \"\\n\")     }   } }  # Example usage check_flow_data(   data = simple_flow_data,   value_var = \"flow_amount\",   source_var = \"from_node\",    target_var = \"to_node\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"design-principles","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Best Practices","what":"Design Principles","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"Clarity: Keep diagrams simple focused Color Harmony: Use consistent color schemes Proportionality: Ensure flow thickness accurately represents magnitude Labeling: Provide clear, concise labels Context: Include titles subtitles interpretation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"analytical-workflow","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier > Best Practices","what":"Analytical Workflow","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"Data Exploration: Start summary statistics Simple Visualization: Begin basic diagrams Iterative Refinement: Add complexity gradually Validation: Cross-check source data Interpretation: Focus key insights patterns","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/22-jjsankeyfier-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"Sankey & Alluvial Diagrams with jjsankeyfier","what":"Conclusion","title":"Comprehensive Guide to Sankey & Alluvial Diagrams with jjsankeyfier","text":"jjsankeyfier function provides powerful capabilities visualizing flow data across multiple domains. Whether analyzing clinical pathways, business processes, educational outcomes, diagrams offer intuitive ways understand complex relationships identify optimization opportunities. Key takeaways: Choose diagram type based data structure analysis goals Use appropriate aggregation complex datasets Customize visual elements enhance clarity Validate visualizations source data Focus actionable insights flow patterns additional examples advanced techniques, explore comprehensive test datasets included package.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"overview","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats","what":"Overview","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"jggstats function provides advanced statistical visualization capabilities using ggstats package. offers multiple analysis types different statistical contexts: Model Coefficients: Visualize regression coefficients confidence intervals Model Comparisons: Compare multiple models side--side Likert Plots: Specialized visualization Likert scale data Survey Analysis: Weighted survey data visualization Proportion Analysis: Categorical data proportions Cross-tabulation: Relationship categorical variables Weighted Means: Group comparisons survey weights Cascade Analysis: Data filtering sample size tracking","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"when-to-use-each-analysis-type","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Understanding Statistical Visualization","what":"When to Use Each Analysis Type","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"Model Coefficients ideal : - Regression model interpretation - Effect size visualization - Confidence interval display - Variable importance assessment Model Comparisons excel : - Comparing nested models - Model selection visualization - Effect stability across models - Sensitivity analysis display Likert Plots perfect : - Survey response visualization - Attitude scale analysis - Agreement/disagreement patterns - Ordered categorical data Survey Analysis handles: - Complex survey designs - Weighted population estimates - Demographic breakdowns - Representative sampling","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"model-coefficient-visualization","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Basic Usage Examples","what":"Model Coefficient Visualization","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Load test data data(\"linear_model_data\")  # Basic coefficient plot # jggstats( #   data = linear_model_data, #   dependent_var = \"outcome\", #   independent_vars = c(\"age\", \"sex\", \"treatment\"), #   analysis_type = \"ggcoef_model\", #   model_type = \"lm\", #   plot_title = \"Linear Model Coefficients\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"logistic-regression-coefficients","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Basic Usage Examples","what":"Logistic Regression Coefficients","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Load logistic model data data(\"logistic_model_data\")  # Logistic regression coefficient plot # jggstats( #   data = logistic_model_data, #   dependent_var = \"disease\", #   independent_vars = c(\"age\", \"sex\", \"smoking\", \"bmi\"), #   analysis_type = \"ggcoef_model\", #   model_type = \"glm\", #   family = \"binomial\", #   sort_coefficients = TRUE, #   show_significance = TRUE, #   plot_title = \"Disease Risk Factors\", #   plot_subtitle = \"Logistic regression odds ratios\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"survival-analysis-visualization","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Clinical Research Applications","what":"Survival Analysis Visualization","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Load survival data data(\"survival_analysis_data\")  # Cox regression coefficient plot # jggstats( #   data = survival_analysis_data, #   model_formula = \"Surv(survival_time, event) ~ age + sex + stage + treatment\", #   analysis_type = \"ggcoef_model\", #   model_type = \"coxph\", #   show_intercept = FALSE, #   sort_coefficients = TRUE, #   color_palette = \"viridis\", #   plot_title = \"Survival Analysis\", #   plot_subtitle = \"Cox regression hazard ratios\", #   show_model_summary = TRUE, #   show_interpretation = TRUE # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"biomarker-analysis","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Clinical Research Applications","what":"Biomarker Analysis","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Focus on biomarker effects biomarker_data <- logistic_model_data %>%   filter(!is.na(biomarker_level))  # jggstats( #   data = biomarker_data, #   dependent_var = \"disease\", #   independent_vars = c(\"biomarker_level\", \"age\", \"sex\"), #   grouping_var = \"family_history\", #   analysis_type = \"ggcoef_compare\", #   model_type = \"glm\", #   family = \"binomial\", #   confidence_level = 0.95, #   color_palette = \"set1\", #   plot_title = \"Biomarker Effects by Family History\", #   facet_var = \"clinic\", #   facet_type = \"wrap\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"treatment-response-analysis","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Clinical Research Applications","what":"Treatment Response Analysis","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Analyze treatment effects # jggstats( #   data = linear_model_data, #   dependent_var = \"outcome\", #   independent_vars = c(\"treatment\", \"age\", \"baseline_score\"), #   analysis_type = \"ggcoef_model\", #   model_type = \"lm\", #   show_intercept = FALSE, #   standardized = TRUE, #   show_significance = TRUE, #   plot_title = \"Treatment Effects Analysis\", #   plot_subtitle = \"Standardized coefficients\", #   theme_style = \"classic\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"likert-scale-visualization","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Survey Data Analysis","what":"Likert Scale Visualization","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Load survey data data(\"likert_survey_data\")  # Likert plot for satisfaction measures # jggstats( #   data = likert_survey_data, #   dependent_var = \"satisfaction_work\", #   grouping_var = \"department\", #   analysis_type = \"gglikert\", #   likert_levels = 5, #   color_palette = \"viridis\", #   plot_title = \"Work Satisfaction by Department\", #   plot_subtitle = \"Employee survey responses (1-5 scale)\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"weighted-survey-analysis","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Survey Data Analysis","what":"Weighted Survey Analysis","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Load survey proportion data data(\"survey_proportion_data\")  # Weighted survey analysis # jggstats( #   data = survey_proportion_data, #   dependent_var = \"political_preference\", #   weight_var = \"weight\", #   grouping_var = \"age_category\", #   analysis_type = \"ggsurvey\", #   color_palette = \"dark2\", #   plot_title = \"Political Preferences by Age\", #   plot_subtitle = \"Weighted survey estimates\", #   show_interpretation = TRUE # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"cross-tabulation-analysis","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Survey Data Analysis","what":"Cross-tabulation Analysis","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Load cross-tabulation data data(\"cross_tab_data\")  # Cross-tabulation visualization # jggstats( #   data = cross_tab_data, #   dependent_var = \"test_result\", #   grouping_var = \"disease_status\", #   analysis_type = \"stat_cross\", #   color_palette = \"paired\", #   plot_title = \"Diagnostic Test Performance\", #   plot_subtitle = \"Test results by true disease status\", #   facet_var = \"age_group\", #   facet_type = \"wrap\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"academic-achievement-modeling","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Educational Data Analysis","what":"Academic Achievement Modeling","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Load educational data data(\"model_comparison_data\")  # Model achievement predictors # jggstats( #   data = model_comparison_data, #   dependent_var = \"test_score\", #   independent_vars = c(\"socioeconomic_status\", \"parent_education\", \"school_type\", \"class_size\"), #   analysis_type = \"ggcoef_model\", #   model_type = \"lm\", #   sort_coefficients = TRUE, #   show_significance = TRUE, #   plot_title = \"Academic Achievement Predictors\", #   plot_subtitle = \"Factors affecting test scores\", #   show_model_summary = TRUE # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"school-comparison-analysis","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Educational Data Analysis","what":"School Comparison Analysis","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Compare models across districts # jggstats( #   data = model_comparison_data, #   dependent_var = \"test_score\", #   independent_vars = c(\"socioeconomic_status\", \"parent_education\"), #   grouping_var = \"district\", #   analysis_type = \"ggcoef_compare\", #   model_type = \"lm\", #   confidence_level = 0.90, #   color_palette = \"set1\", #   plot_title = \"District-Specific Achievement Models\", #   plot_subtitle = \"Model comparison across school districts\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"mixed-effects-models","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Advanced Statistical Modeling","what":"Mixed Effects Models","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Load longitudinal data data(\"mixed_effects_data\")  # Mixed effects model visualization # jggstats( #   data = mixed_effects_data, #   dependent_var = \"score\", #   independent_vars = c(\"time_months\", \"treatment_group\", \"baseline_severity\"), #   analysis_type = \"ggcoef_model\", #   model_type = \"lmer\", #   show_intercept = FALSE, #   sort_coefficients = TRUE, #   plot_title = \"Longitudinal Treatment Effects\", #   plot_subtitle = \"Mixed effects model coefficients\", #   theme_style = \"minimal\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"complex-survey-design","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Advanced Statistical Modeling","what":"Complex Survey Design","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Load complex survey data data(\"weighted_analysis_data\")  # Weighted means analysis # jggstats( #   data = weighted_analysis_data, #   dependent_var = \"income_thousands\", #   grouping_var = \"head_education\", #   weight_var = \"final_weight\", #   analysis_type = \"stat_weighted_mean\", #   color_palette = \"viridis\", #   plot_title = \"Income by Education Level\", #   plot_subtitle = \"Population-weighted estimates\", #   show_interpretation = TRUE, #   output_format = \"both\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"proportion-analysis","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Advanced Statistical Modeling","what":"Proportion Analysis","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Analyze health coverage proportions # jggstats( #   data = weighted_analysis_data, #   dependent_var = \"insurance_coverage\", #   grouping_var = \"geography\", #   analysis_type = \"stat_prop\", #   color_palette = \"dark2\", #   plot_title = \"Insurance Coverage by Geography\", #   plot_subtitle = \"Proportion analysis\", #   facet_var = \"state_region\", #   facet_type = \"wrap\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"sample-size-tracking","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Data Quality and Cascade Analysis","what":"Sample Size Tracking","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Cascade analysis for data quality # jggstats( #   data = linear_model_data, #   dependent_var = \"outcome\", #   independent_vars = c(\"age\", \"sex\", \"treatment\", \"baseline_score\"), #   analysis_type = \"ggcascade\", #   plot_title = \"Data Cascade Analysis\", #   plot_subtitle = \"Sample size at each analysis step\", #   theme_style = \"classic\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"missing-data-patterns","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Data Quality and Cascade Analysis","what":"Missing Data Patterns","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Create data with missing values incomplete_data <- model_comparison_data incomplete_data$test_score[sample(nrow(incomplete_data), 50)] <- NA incomplete_data$socioeconomic_status[sample(nrow(incomplete_data), 30)] <- NA  # jggstats( #   data = incomplete_data, #   dependent_var = \"test_score\", #   independent_vars = c(\"socioeconomic_status\", \"parent_education\", \"school_type\"), #   analysis_type = \"ggcascade\", #   plot_title = \"Missing Data Impact\", #   plot_subtitle = \"Sample reduction due to missing values\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"custom-styling-and-themes","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Advanced Customization","what":"Custom Styling and Themes","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Advanced styling example # jggstats( #   data = logistic_model_data, #   dependent_var = \"disease\", #   independent_vars = c(\"age\", \"bmi\", \"biomarker_level\"), #   grouping_var = \"smoking\", #   analysis_type = \"ggcoef_model\", #   model_type = \"glm\", #   family = \"binomial\", #   standardized = FALSE, #   show_intercept = FALSE, #   sort_coefficients = TRUE, #   show_significance = TRUE, #   confidence_level = 0.95, #   color_palette = \"viridis\", #   theme_style = \"dark\", #   plot_title = \"Disease Risk Model\", #   plot_subtitle = \"Logistic regression with custom styling\", #   x_label = \"Log Odds Ratio\", #   y_label = \"Risk Factors\", #   show_model_summary = TRUE, #   show_interpretation = TRUE # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"faceted-analysis","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Advanced Customization","what":"Faceted Analysis","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Multi-panel analysis # jggstats( #   data = survey_proportion_data, #   dependent_var = \"approve_policy\", #   grouping_var = \"political_preference\", #   analysis_type = \"stat_prop\", #   facet_var = \"education_level\", #   facet_type = \"wrap\", #   color_palette = \"set1\", #   plot_title = \"Policy Approval by Political Preference\", #   plot_subtitle = \"Broken down by education level\", #   theme_style = \"minimal\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"comparing-different-model-types","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Model Comparison and Selection","what":"Comparing Different Model Types","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Compare different approaches to the same data base_data <- linear_model_data  # Model 1: Simple linear # jggstats( #   data = base_data, #   dependent_var = \"outcome\", #   independent_vars = c(\"age\", \"sex\"), #   analysis_type = \"ggcoef_model\", #   model_type = \"lm\", #   plot_title = \"Simple Linear Model\", #   show_model_summary = TRUE # )  # Model 2: With interactions # jggstats( #   data = base_data, #   model_formula = \"outcome ~ age * sex + treatment\", #   analysis_type = \"ggcoef_model\", #   model_type = \"lm\", #   plot_title = \"Model with Interactions\", #   show_model_summary = TRUE # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"nested-model-comparison","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Model Comparison and Selection","what":"Nested Model Comparison","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Systematic model comparison # jggstats( #   data = model_comparison_data, #   dependent_var = \"test_score\", #   independent_vars = c(\"socioeconomic_status\", \"parent_education\"), #   grouping_var = \"school_type\", #   analysis_type = \"ggcoef_compare\", #   model_type = \"lm\", #   sort_coefficients = TRUE, #   plot_title = \"Nested Model Comparison\", #   plot_subtitle = \"Effects across different school types\", #   output_format = \"both\" # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"understanding-coefficient-plots","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Interpretation Guidelines","what":"Understanding Coefficient Plots","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"Key elements interpret: Point estimates: central value effect Confidence intervals: Uncertainty around estimate Significance: Whether intervals cross zero (coefficients) one (odds ratios) Magnitude: practical importance effects Direction: Positive negative associations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"statistical-significance","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Interpretation Guidelines","what":"Statistical Significance","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Example with significance markers # jggstats( #   data = logistic_model_data, #   dependent_var = \"disease\", #   independent_vars = c(\"age\", \"sex\", \"smoking\", \"family_history\", \"bmi\"), #   analysis_type = \"ggcoef_model\", #   model_type = \"glm\", #   family = \"binomial\", #   show_significance = TRUE, #   sort_coefficients = TRUE, #   plot_title = \"Significance Testing Example\", #   plot_subtitle = \"Stars indicate statistical significance\", #   show_interpretation = TRUE # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"large-dataset-handling","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Performance Considerations","what":"Large Dataset Handling","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"large datasets (>10,000 observations), consider: Model complexity: Simpler models fit faster Variable selection: Focus key predictors Sampling: Use representative subsets exploration","code":"# Example with larger dataset simulation large_data <- do.call(rbind, replicate(5, linear_model_data, simplify = FALSE)) large_data$id <- 1:nrow(large_data)  # Efficient analysis # jggstats( #   data = large_data, #   dependent_var = \"outcome\", #   independent_vars = c(\"age\", \"sex\", \"treatment\"), #   analysis_type = \"ggcoef_model\", #   model_type = \"lm\", #   plot_title = \"Large Dataset Analysis\", #   plot_subtitle = paste(\"N =\", nrow(large_data), \"observations\") # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"common-issues-and-solutions","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Troubleshooting Guide","what":"Common Issues and Solutions","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"Issue: “Model convergence problems” - Solution: Check perfect separation logistic models - Solution: Consider variable scaling continuous predictors - Solution: Remove highly correlated predictors Issue: “Confidence intervals wide” - Solution: Increase sample size possible - Solution: Consider variable transformation - Solution: Check outliers affecting estimates Issue: “Plot readability problems” - Solution: Reduce number variables displayed - Solution: Use faceting complex comparisons - Solution: Adjust text size plot dimensions","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"data-quality-checks","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Troubleshooting Guide","what":"Data Quality Checks","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"","code":"# Function to check data suitability check_modeling_data <- function(data, dependent_var, independent_vars) {      cat(\"Data Quality Assessment for Statistical Modeling\\n\")   cat(\"=============================================\\n\\n\")      # Basic info   cat(\"Dataset dimensions:\", nrow(data), \"rows,\", ncol(data), \"columns\\n\\n\")      # Check dependent variable   if (!is.null(dependent_var)) {     dep_data <- data[[dependent_var]]     cat(\"Dependent Variable (\", dependent_var, \"):\\n\")     cat(\"  - Type:\", class(dep_data)[1], \"\\n\")     cat(\"  - Missing values:\", sum(is.na(dep_data)), \"/\", length(dep_data), \"\\n\")     if (is.numeric(dep_data)) {       cat(\"  - Range:\", round(min(dep_data, na.rm = TRUE), 2), \"to\",            round(max(dep_data, na.rm = TRUE), 2), \"\\n\")     } else {       cat(\"  - Unique values:\", length(unique(dep_data[!is.na(dep_data)])), \"\\n\")     }     cat(\"\\n\")   }      # Check independent variables   if (!is.null(independent_vars)) {     cat(\"Independent Variables:\\n\")     for (var in independent_vars) {       if (var %in% names(data)) {         var_data <- data[[var]]         cat(\"  -\", var, \":\")         cat(\" Type:\", class(var_data)[1])         cat(\", Missing:\", sum(is.na(var_data)))         if (is.numeric(var_data)) {           cat(\", Range:\", round(min(var_data, na.rm = TRUE), 2), \"-\",                round(max(var_data, na.rm = TRUE), 2))         } else {           cat(\", Levels:\", length(unique(var_data[!is.na(var_data)])))         }         cat(\"\\n\")       }     }   } }  # Example usage check_modeling_data(   data = linear_model_data,   dependent_var = \"outcome\",   independent_vars = c(\"age\", \"sex\", \"treatment\") )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"analysis-workflow","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Best Practices","what":"Analysis Workflow","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"Exploratory Analysis: Start descriptive statistics Model Building: Begin simple models, add complexity gradually Diagnostics: Check model assumptions fit Visualization: Use coefficient plots interpretation Validation: Cross-validate findings possible","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"visualization-principles","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats > Best Practices","what":"Visualization Principles","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"Clarity: Keep plots simple focused Consistency: Use consistent color schemes styling Context: Provide adequate titles labels Accuracy: Ensure statistical correctness Accessibility: Consider colorblind-friendly palettes","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jggstats-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"Enhanced Statistical Visualization with jggstats","what":"Conclusion","title":"Comprehensive Guide to Enhanced Statistical Visualization with jggstats","text":"jggstats function provides comprehensive tools statistical visualization across multiple domains. Whether analyzing clinical trials, survey data, educational outcomes, enhanced visualizations help communicate statistical findings effectively. Key advantages: Comprehensive: Supports multiple analysis types Flexible: Extensive customization options Accurate: Built robust statistical foundations Interpretable: Clear visual communication results Scalable: Handles various dataset sizes complexities additional examples advanced techniques, explore comprehensive test datasets included package.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"introduction-to-jjbarstats","dir":"Articles","previous_headings":"","what":"Introduction to jjbarstats","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"jjbarstats function powerful wrapper around ggstatsplot package creates publication-ready bar charts automatic statistical testing. function designed specifically analyzing categorical data relationships clinical research settings.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"Introduction to jjbarstats","what":"Key Features","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Automatic Statistical Testing: Performs chi-squared tests, Fisher’s exact tests, appropriate tests based data Multiple Variable Support: Handle single multiple dependent variables simultaneously Grouped Analysis: Split analysis additional grouping variables Flexible Statistical Methods: Choose parametric, non-parametric, robust, Bayesian approaches Pairwise Comparisons: Automatic post-hoc testing multiple comparison correction Professional Visualization: Publication-ready plots statistical annotations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"when-to-use-jjbarstats","dir":"Articles","previous_headings":"Introduction to jjbarstats","what":"When to Use jjbarstats","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Use jjbarstats need : Compare proportions across different groups Analyze treatment effectiveness clinical trials Examine relationships categorical variables Create publication-ready visualizations statistical tests Perform quality improvement analysis Analyze survey responses patient feedback","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"single-dependent-variable-analysis","dir":"Articles","previous_headings":"Basic Usage","what":"Single Dependent Variable Analysis","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Let’s start basic example using medical study data compare treatment responses across different treatment groups: creates bar chart showing distribution treatment responses (Complete Response, Partial Response, Response) across different treatment groups (Control, Treatment , Treatment B), along chi-squared test results.","code":"# Basic bar chart comparing treatment response across groups jjbarstats(   data = medical_study_data,   dep = response,   group = treatment_group,   grvar = NULL )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"multiple-dependent-variables","dir":"Articles","previous_headings":"Basic Usage","what":"Multiple Dependent Variables","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"can analyze multiple dependent variables simultaneously:","code":"# Analyze multiple outcomes in clinical trial # jjbarstats( #   data = clinical_trial_data, #   dep = c(primary_outcome, side_effects), #   group = drug_dosage, #   grvar = NULL # )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"different-statistical-methods","dir":"Articles","previous_headings":"Advanced Statistical Options","what":"Different Statistical Methods","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"function supports four different statistical approaches:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"parametric-analysis-default","dir":"Articles","previous_headings":"Advanced Statistical Options > Different Statistical Methods","what":"Parametric Analysis (Default)","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"","code":"jjbarstats(   data = patient_satisfaction_data,   dep = satisfaction_level,   group = service_type,   typestatistics = \"parametric\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"non-parametric-analysis","dir":"Articles","previous_headings":"Advanced Statistical Options > Different Statistical Methods","what":"Non-parametric Analysis","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"","code":"jjbarstats(   data = diagnostic_test_data,   dep = test_result,   group = test_method,   typestatistics = \"nonparametric\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"robust-analysis","dir":"Articles","previous_headings":"Advanced Statistical Options > Different Statistical Methods","what":"Robust Analysis","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"","code":"jjbarstats(   data = quality_improvement_data,   dep = implementation_status,   group = improvement_category,   typestatistics = \"robust\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"bayesian-analysis","dir":"Articles","previous_headings":"Advanced Statistical Options > Different Statistical Methods","what":"Bayesian Analysis","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"","code":"jjbarstats(   data = medical_study_data,   dep = severity,   group = treatment_group,   typestatistics = \"bayes\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"using-the-grvar-parameter","dir":"Articles","previous_headings":"Grouped Analysis with Splitting Variables","what":"Using the grvar Parameter","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"grvar parameter allows split analysis additional grouping variable, creating separate plots level: creates separate bar charts male female patients, allowing examine whether treatment effects differ gender.","code":"# Analyze treatment response by treatment group, split by gender jjbarstats(   data = medical_study_data,   dep = response,   group = treatment_group,   grvar = gender )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"complex-grouped-analysis","dir":"Articles","previous_headings":"Grouped Analysis with Splitting Variables","what":"Complex Grouped Analysis","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"","code":"# Patient satisfaction by service type, split by department jjbarstats(   data = patient_satisfaction_data,   dep = satisfaction_level,   group = service_type,   grvar = department )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"enabling-pairwise-comparisons","dir":"Articles","previous_headings":"Pairwise Comparisons and Multiple Testing","what":"Enabling Pairwise Comparisons","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"two groups, pairwise comparisons help identify specific groups differ:","code":"# jjbarstats( #   data = clinical_trial_data, #   dep = primary_outcome, #   group = drug_dosage, #   pairwisecomparisons = TRUE, #   padjustmethod = \"holm\" # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"multiple-comparison-correction-methods","dir":"Articles","previous_headings":"Pairwise Comparisons and Multiple Testing","what":"Multiple Comparison Correction Methods","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Different correction methods available control multiple testing:","code":"# Bonferroni correction (most conservative) jjbarstats(   data = diagnostic_test_data,   dep = test_result,   group = laboratory,   pairwisecomparisons = TRUE,   padjustmethod = \"bonferroni\" ) # Benjamini-Hochberg correction (controls false discovery rate) jjbarstats(   data = quality_improvement_data,   dep = priority_level,   group = department_involved,   pairwisecomparisons = TRUE,   padjustmethod = \"BH\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"controlling-pairwise-display","dir":"Articles","previous_headings":"Pairwise Comparisons and Multiple Testing","what":"Controlling Pairwise Display","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"can control pairwise comparisons displayed:","code":"# Show only significant comparisons jjbarstats(   data = medical_study_data,   dep = response,   group = treatment_group,   pairwisecomparisons = TRUE,   pairwisedisplay = \"significant\" ) # Show all comparisons jjbarstats(   data = patient_satisfaction_data,   dep = staff_rating,   group = service_type,   pairwisecomparisons = TRUE,   pairwisedisplay = \"everything\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"treatment-efficacy-analysis","dir":"Articles","previous_headings":"Real-World Clinical Applications","what":"Treatment Efficacy Analysis","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Analyzing treatment effectiveness across different patient subgroups:","code":"# Comprehensive treatment analysis jjbarstats(   data = medical_study_data,   dep = response,   group = treatment_group,   grvar = severity,   typestatistics = \"nonparametric\",   pairwisecomparisons = TRUE,   padjustmethod = \"BH\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"quality-improvement-analysis","dir":"Articles","previous_headings":"Real-World Clinical Applications","what":"Quality Improvement Analysis","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Tracking implementation status across different improvement categories:","code":"jjbarstats(   data = quality_improvement_data,   dep = c(implementation_status, priority_level),   group = improvement_category,   typestatistics = \"parametric\",   pairwisecomparisons = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"diagnostic-test-evaluation","dir":"Articles","previous_headings":"Real-World Clinical Applications","what":"Diagnostic Test Evaluation","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Comparing test performance across different methods laboratories:","code":"jjbarstats(   data = diagnostic_test_data,   dep = test_result,   group = test_method,   grvar = laboratory,   typestatistics = \"robust\",   pairwisecomparisons = TRUE,   pairwisedisplay = \"significant\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"patient-satisfaction-survey-analysis","dir":"Articles","previous_headings":"Real-World Clinical Applications","what":"Patient Satisfaction Survey Analysis","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Analyzing satisfaction levels across different service types departments:","code":"jjbarstats(   data = patient_satisfaction_data,   dep = satisfaction_level,   group = service_type,   grvar = department,   typestatistics = \"nonparametric\",   pairwisecomparisons = TRUE,   padjustmethod = \"holm\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"working-with-real-histopathology-data","dir":"Articles","previous_headings":"","what":"Working with Real Histopathology Data","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Using histopathology dataset comes ClinicoPath:","code":"# Analyze lymphovascular invasion by treatment group jjbarstats(   data = histopathology,   dep = LVI,   group = Group,   typestatistics = \"nonparametric\",   pairwisecomparisons = TRUE ) # Multiple outcome analysis jjbarstats(   data = histopathology,   dep = c(LVI, PNI),   group = Grade_Level,   typestatistics = \"parametric\" ) # Grouped analysis by sex jjbarstats(   data = histopathology,   dep = LymphNodeMetastasis,   group = Grade_Level,   grvar = Sex,   typestatistics = \"robust\",   pairwisecomparisons = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"using-original-ggstatsplot-theme","dir":"Articles","previous_headings":"Customization and Theming","what":"Using Original ggstatsplot Theme","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"","code":"jjbarstats(   data = medical_study_data,   dep = response,   group = treatment_group,   originaltheme = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"custom-theming","dir":"Articles","previous_headings":"Customization and Theming","what":"Custom Theming","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"function respects jamovi’s theming system originaltheme = FALSE (default), allowing consistent styling across analyses.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"statistical-method-selection","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Statistical Method Selection","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Parametric: Use data meets assumptions (large sample sizes, expected frequencies ≥ 5) Non-parametric: Default choice categorical data, fewer assumptions Robust: Good middle ground, less sensitive outliers Bayesian: want incorporate prior knowledge report Bayes factors","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"multiple-comparison-correction","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Multiple Comparison Correction","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Holm: Good balance power Type error control Bonferroni: conservative, use Type error critical BH (Benjamini-Hochberg): Controls false discovery rate, good exploratory analysis None: specific priori hypotheses","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"sample-size-considerations","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Sample Size Considerations","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Chi-squared tests require expected frequencies ≥ 5 cell Fisher’s exact test automatically used small samples Consider effect sizes, just p-values","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"data-preparation-tips","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Data Preparation Tips","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"","code":"# Ensure categorical variables are properly formatted medical_study_clean <- medical_study_data %>%   mutate(     treatment_group = factor(treatment_group,                             levels = c(\"Control\", \"Treatment A\", \"Treatment B\")),     response = factor(response,                      levels = c(\"No Response\", \"Partial Response\", \"Complete Response\"))   )  # Verify factor levels str(medical_study_clean[c(\"treatment_group\", \"response\")])"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"issue-1-empty-cells-or-small-counts","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Issue 1: Empty Cells or Small Counts","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"empty cells small counts, function automatically switches appropriate tests:","code":"# Create data with small counts small_sample <- medical_study_data[1:20, ]  jjbarstats(   data = small_sample,   dep = response,   group = treatment_group,   typestatistics = \"nonparametric\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"issue-2-too-many-categories","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Issue 2: Too Many Categories","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"many categories, consider grouping using different visualization:","code":"# Example with multiple categories jjbarstats(   data = patient_satisfaction_data,   dep = satisfaction_level,   group = department,   pairwisecomparisons = FALSE  # Disable pairwise for clarity )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"issue-3-missing-data","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Issue 3: Missing Data","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"function automatically handles missing data excl = TRUE (default):","code":"# Demonstrate missing data handling data_with_na <- medical_study_data data_with_na$response[1:5] <- NA  jjbarstats(   data = data_with_na,   dep = response,   group = treatment_group,   excl = TRUE  # Exclude missing values )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"understanding-the-statistical-output","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Understanding the Statistical Output","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Chi-squared test: Tests independence categorical variables Effect size (Cramér’s V): Measures strength association (0 = association, 1 = perfect association) Confidence intervals: Provide range plausible values effect Pairwise comparisons: Show specific groups differ","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"clinical-significance-vs-statistical-significance","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Clinical Significance vs Statistical Significance","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"Always consider clinical relevance alongside statistical significance Effect sizes help interpret practical importance Confidence intervals provide information precision","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"reporting-results","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Reporting Results","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"reporting results jjbarstats: Describe statistical test used (chi-squared, Fisher’s exact, etc.) Report effect size (Cramér’s V) confidence intervals Mention multiple comparison correction applicable Provide sample sizes group Include actual plot publication","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"multi-stage-analysis-workflow","dir":"Articles","previous_headings":"Advanced Examples","what":"Multi-stage Analysis Workflow","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"","code":"# Step 1: Overall analysis # overall_result <- jjbarstats( #   data = clinical_trial_data, #   dep = primary_outcome, #   group = drug_dosage, #   typestatistics = \"nonparametric\", #   pairwisecomparisons = TRUE, #   padjustmethod = \"BH\" # )  # Step 2: Subgroup analysis by study phase # subgroup_result <- jjbarstats( #   data = clinical_trial_data, #   dep = primary_outcome, #   group = drug_dosage, #   grvar = study_phase, #   typestatistics = \"nonparametric\", #   pairwisecomparisons = TRUE # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"comparative-analysis-across-different-outcomes","dir":"Articles","previous_headings":"Advanced Examples","what":"Comparative Analysis Across Different Outcomes","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"","code":"# Compare primary and secondary outcomes # jjbarstats( #   data = clinical_trial_data, #   dep = c(primary_outcome, side_effects, baseline_condition), #   group = drug_dosage, #   typestatistics = \"robust\", #   pairwisecomparisons = FALSE # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"jjbarstats function provides comprehensive solution categorical data analysis clinical research settings. integration ggstatsplot ecosystem ensures statistical rigor visual appeal, making excellent choice : Clinical trial analysis Quality improvement studies Survey research Diagnostic test evaluation Healthcare outcomes research function’s flexibility statistical methods, multiple comparison corrections, visualization options makes suitable exploratory confirmatory analysis phases research projects.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"further-resources","dir":"Articles","previous_headings":"Conclusion","what":"Further Resources","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"ggstatsplot documentation ClinicoPath package documentation Statistical methods references categorical data analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/23-jjbarstats-comprehensive.html","id":"session-information","dir":"Articles","previous_headings":"Conclusion","what":"Session Information","title":"Comprehensive Bar Chart Analysis with jjbarstats","text":"","code":"sessionInfo()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Network Visualization with jjarcdiagram","text":"jjarcdiagram() function ClinicoPath provides elegant network visualization using arc diagrams. Arc diagrams particularly effective displaying hierarchical relationships, sequential connections, network structures minimal visual clutter.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"Introduction","what":"Key Features","title":"Network Visualization with jjarcdiagram","text":"Multiple Network Types: Social networks, organizational hierarchies, gene regulation, supply chains Flexible Layouts: Horizontal vertical arrangements Dynamic Sizing: Nodes sized degree centrality fixed values Group Coloring: Automatic color assignment based categorical variables Weight Visualization: Arc thickness proportional connection strength Network Analytics: Built-calculation network metrics centrality measures Interactive Customization: Extensive styling layout options vignette demonstrates features jjarcdiagram function using various real-world network datasets.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"loading-required-libraries-and-data","dir":"Articles","previous_headings":"","what":"Loading Required Libraries and Data","title":"Network Visualization with jjarcdiagram","text":"","code":"library(jjstatsplot)  # Load the original arc diagram dataset data(\"arcDiagram\")  # Preview the data structure str(arcDiagram) head(arcDiagram)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"data-requirements","dir":"Articles","previous_headings":"","what":"Data Requirements","title":"Network Visualization with jjarcdiagram","text":"jjarcdiagram function works edge list data representing network connections:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"required-variables","dir":"Articles","previous_headings":"Data Requirements","what":"Required Variables:","title":"Network Visualization with jjarcdiagram","text":"Source Node: Starting point connections (factor character) Target Node: Endpoint connections (factor character)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"optional-variables","dir":"Articles","previous_headings":"Data Requirements","what":"Optional Variables:","title":"Network Visualization with jjarcdiagram","text":"Edge Weight: Numeric values representing connection strength Node Groups: Categorical variable color coding nodes","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"data-format","dir":"Articles","previous_headings":"Data Requirements","what":"Data Format:","title":"Network Visualization with jjarcdiagram","text":"row represents one edge/connection Source target can identifiers (names, IDs, etc.) Weights positive numeric values Groups can categorical variable","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"simple-network-visualization","dir":"Articles","previous_headings":"Basic Arc Diagram","what":"Simple Network Visualization","title":"Network Visualization with jjarcdiagram","text":"","code":"# Basic arc diagram without weights or groups jjarcdiagram(   data = arcDiagram,   source = \"source\",   target = \"target\",   showNodes = TRUE,   horizontal = TRUE,   plotTitle = \"Basic Network Structure\",   group = NULL,   weight = NULL )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"network-with-edge-weights","dir":"Articles","previous_headings":"Basic Arc Diagram","what":"Network with Edge Weights","title":"Network Visualization with jjarcdiagram","text":"","code":"# Arc diagram with edge weights jjarcdiagram(   data = arcDiagram,   source = \"source\",   target = \"target\",   weight = \"weight\",   arcWidth = \"weight\",   showNodes = TRUE,   plotTitle = \"Weighted Network Connections\",   group = NULL )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"network-with-group-colors","dir":"Articles","previous_headings":"Basic Arc Diagram","what":"Network with Group Colors","title":"Network Visualization with jjarcdiagram","text":"","code":"# Arc diagram with group-based coloring jjarcdiagram(   data = arcDiagram,   source = \"source\",   target = \"target\",   weight = \"weight\",   group = \"group\",   colorByGroup = TRUE,   showLegend = TRUE,   showStats = TRUE,   plotTitle = \"Network with Group-Based Coloring\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"social-network-analysis","dir":"Articles","previous_headings":"Advanced Network Datasets","what":"Social Network Analysis","title":"Network Visualization with jjarcdiagram","text":"","code":"# Load social network test data data(\"jjarcdiagram_social_network\")  # Preview the social network data str(social_network_data) head(social_network_data)  # Create social network visualization jjarcdiagram(   data = social_network_data,   source = \"source\",   target = \"target\",    weight = \"weight\",   group = \"group\",   colorByGroup = TRUE,   showLegend = TRUE,   nodeSize = \"degree\",   sortNodes = \"degree\",   sortDecreasing = TRUE,   showStats = TRUE,   plotTitle = \"Social Network Analysis - Relationship Strength\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"academic-collaboration-network","dir":"Articles","previous_headings":"Advanced Network Datasets","what":"Academic Collaboration Network","title":"Network Visualization with jjarcdiagram","text":"","code":"# Load academic collaboration data data(\"jjarcdiagram_academic_network\")  # Preview the academic network data str(academic_network_data) head(academic_network_data)  # Create academic collaboration visualization jjarcdiagram(   data = academic_network_data,   source = \"author1\",   target = \"author2\",   weight = \"publications\",   group = \"department\",   colorByGroup = TRUE,   showLegend = TRUE,   nodeSize = \"degree\",   arcWidth = \"weight\",   sortNodes = \"group\",   showStats = TRUE,   plotTitle = \"Academic Collaboration Network by Department\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"organizational-hierarchy","dir":"Articles","previous_headings":"Advanced Network Datasets","what":"Organizational Hierarchy","title":"Network Visualization with jjarcdiagram","text":"","code":"# Load organizational hierarchy data data(\"jjarcdiagram_org_hierarchy\")  # Preview the organizational data str(org_hierarchy_data) head(org_hierarchy_data)  # Create organizational hierarchy visualization jjarcdiagram(   data = org_hierarchy_data,   source = \"employee\",   target = \"reports_to\",   weight = \"relationship_strength\",   group = \"department\",   colorByGroup = TRUE,   showLegend = TRUE,   directed = TRUE,   sortNodes = \"group\",   nodeSize = \"degree\",   horizontal = FALSE,   showStats = TRUE,   plotTitle = \"Organizational Reporting Structure\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"gene-regulatory-network","dir":"Articles","previous_headings":"Advanced Network Datasets","what":"Gene Regulatory Network","title":"Network Visualization with jjarcdiagram","text":"","code":"# Load gene regulatory network data data(\"jjarcdiagram_gene_network\")  # Preview the gene network data str(gene_network_data) head(gene_network_data)  # Create gene regulatory network visualization jjarcdiagram(   data = gene_network_data,   source = \"regulator\",   target = \"target\",   weight = \"regulation_score\",   group = \"pathway\",   colorByGroup = TRUE,   showLegend = TRUE,   nodeSize = \"degree\",   arcWidth = \"weight\",   sortNodes = \"degree\",   sortDecreasing = TRUE,   showStats = TRUE,   plotTitle = \"Gene Regulatory Network by Pathway\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"supply-chain-network","dir":"Articles","previous_headings":"Advanced Network Datasets","what":"Supply Chain Network","title":"Network Visualization with jjarcdiagram","text":"","code":"# Load supply chain data data(\"jjarcdiagram_supply_chain\")  # Preview the supply chain data str(supply_chain_data) head(supply_chain_data)  # Create supply chain visualization jjarcdiagram(   data = supply_chain_data,   source = \"supplier\",   target = \"customer\",   weight = \"volume\",   group = \"industry\",   colorByGroup = TRUE,   showLegend = TRUE,   nodeSize = \"degree\",   arcWidth = \"weight\",   sortNodes = \"group\",   horizontal = TRUE,   showStats = TRUE,   plotTitle = \"Supply Chain Network by Industry\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"horizontal-vs-vertical-layouts","dir":"Articles","previous_headings":"Layout and Styling Options","what":"Horizontal vs Vertical Layouts","title":"Network Visualization with jjarcdiagram","text":"","code":"# Horizontal layout jjarcdiagram(   data = simple_weighted_network,   source = \"from_node\",   target = \"to_node\",   weight = \"connection_weight\",   horizontal = TRUE,   showNodes = TRUE,   plotTitle = \"Horizontal Arc Diagram\" )  # Vertical layout jjarcdiagram(   data = simple_weighted_network,   source = \"from_node\",   target = \"to_node\",   weight = \"connection_weight\",   horizontal = FALSE,   showNodes = TRUE,   plotTitle = \"Vertical Arc Diagram\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"node-sizing-options","dir":"Articles","previous_headings":"Layout and Styling Options","what":"Node Sizing Options","title":"Network Visualization with jjarcdiagram","text":"","code":"# Fixed node size jjarcdiagram(   data = academic_network_data,   source = \"author1\",   target = \"author2\",   weight = \"publications\",   group = \"department\",   nodeSize = \"fixed\",   nodeSizeValue = 3,   colorByGroup = TRUE,   plotTitle = \"Fixed Node Sizes\" )  # Degree-based node sizing jjarcdiagram(   data = academic_network_data,   source = \"author1\",   target = \"author2\",   weight = \"publications\",   group = \"department\",   nodeSize = \"degree\",   colorByGroup = TRUE,   plotTitle = \"Degree-Based Node Sizing\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"arc-width-customization","dir":"Articles","previous_headings":"Layout and Styling Options","what":"Arc Width Customization","title":"Network Visualization with jjarcdiagram","text":"","code":"# Fixed arc width jjarcdiagram(   data = supply_chain_data,   source = \"supplier\",   target = \"customer\",   weight = \"volume\",   arcWidth = \"fixed\",   arcWidthValue = 2,   plotTitle = \"Fixed Arc Width\" )  # Weight-proportional arc width jjarcdiagram(   data = supply_chain_data,   source = \"supplier\",   target = \"customer\",   weight = \"volume\",   arcWidth = \"weight\",   arcWidthValue = 3,   plotTitle = \"Weight-Proportional Arc Width\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"arc-transparency-effects","dir":"Articles","previous_headings":"Layout and Styling Options","what":"Arc Transparency Effects","title":"Network Visualization with jjarcdiagram","text":"","code":"# Test different transparency levels transparency_levels <- c(0.2, 0.5, 0.8)  for(alpha in transparency_levels) {   cat(\"\\n=== Arc Transparency:\", alpha, \"===\\n\")   result <- jjarcdiagram(     data = social_network_data,     source = \"source\",     target = \"target\",     weight = \"weight\",     group = \"group\",     arcTransparency = alpha,     colorByGroup = TRUE,     plotTitle = paste(\"Arc Transparency =\", alpha)   ) }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"sorting-by-different-criteria","dir":"Articles","previous_headings":"Node Sorting and Ordering","what":"Sorting by Different Criteria","title":"Network Visualization with jjarcdiagram","text":"","code":"# Sort by node names jjarcdiagram(   data = gene_network_data,   source = \"regulator\",   target = \"target\",   weight = \"regulation_score\",   group = \"pathway\",   sortNodes = \"name\",   colorByGroup = TRUE,   plotTitle = \"Sorted by Node Names\" )  # Sort by degree centrality jjarcdiagram(   data = gene_network_data,   source = \"regulator\",   target = \"target\",   weight = \"regulation_score\",   group = \"pathway\",   sortNodes = \"degree\",   sortDecreasing = TRUE,   colorByGroup = TRUE,   plotTitle = \"Sorted by Degree (Descending)\" )  # Sort by groups jjarcdiagram(   data = gene_network_data,   source = \"regulator\",   target = \"target\",   weight = \"regulation_score\",   group = \"pathway\",   sortNodes = \"group\",   colorByGroup = TRUE,   showLegend = TRUE,   plotTitle = \"Sorted by Groups\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"directed-vs-undirected-networks","dir":"Articles","previous_headings":"Network Direction Options","what":"Directed vs Undirected Networks","title":"Network Visualization with jjarcdiagram","text":"","code":"# Directed network (default for hierarchical data) jjarcdiagram(   data = org_hierarchy_data,   source = \"employee\",   target = \"reports_to\",   weight = \"relationship_strength\",   group = \"department\",   directed = TRUE,   colorByGroup = TRUE,   plotTitle = \"Directed Network (Organizational Hierarchy)\" )  # Undirected network (treat connections as bidirectional) jjarcdiagram(   data = org_hierarchy_data,   source = \"employee\",   target = \"reports_to\",   weight = \"relationship_strength\",   group = \"department\",   directed = FALSE,   colorByGroup = TRUE,   plotTitle = \"Undirected Network (Mutual Relationships)\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"minimal-networks","dir":"Articles","previous_headings":"Edge Case Scenarios","what":"Minimal Networks","title":"Network Visualization with jjarcdiagram","text":"","code":"# Load minimal test data data(\"jjarcdiagram_minimal_network\")  # Visualize minimal network jjarcdiagram(   data = minimal_network_data,   source = \"from\",   target = \"to\",   weight = \"strength\",   group = \"category\",   colorByGroup = TRUE,   showStats = TRUE,   plotTitle = \"Minimal Network (3 nodes)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"networks-with-self-loops","dir":"Articles","previous_headings":"Edge Case Scenarios","what":"Networks with Self-loops","title":"Network Visualization with jjarcdiagram","text":"","code":"# Load self-loop test data data(\"jjarcdiagram_selfloop_network\")  # Visualize network with self-loops jjarcdiagram(   data = selfloop_network_data,   source = \"node1\",   target = \"node2\",   weight = \"weight\",   group = \"type\",   colorByGroup = TRUE,   showNodes = TRUE,   showStats = TRUE,   plotTitle = \"Network with Self-loops\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"large-networks","dir":"Articles","previous_headings":"Edge Case Scenarios","what":"Large Networks","title":"Network Visualization with jjarcdiagram","text":"","code":"# Load large network test data data(\"jjarcdiagram_large_network\")  # Preview large network cat(\"Large network size:\", nrow(large_network_data), \"edges\\n\") cat(\"Unique nodes:\", length(unique(c(large_network_data$source, large_network_data$target))), \"\\n\")  # Visualize large network jjarcdiagram(   data = large_network_data,   source = \"source\",   target = \"target\",   weight = \"weight\",   group = \"cluster\",   colorByGroup = TRUE,   nodeSize = \"degree\",   sortNodes = \"degree\",   sortDecreasing = TRUE,   arcWidth = \"weight\",   showStats = TRUE,   plotTitle = \"Large Network (50+ nodes)\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"network-metrics-interpretation","dir":"Articles","previous_headings":"Network Analytics and Statistics","what":"Network Metrics Interpretation","title":"Network Visualization with jjarcdiagram","text":"","code":"# Generate comprehensive network statistics jjarcdiagram(   data = academic_network_data,   source = \"author1\",   target = \"author2\",   weight = \"publications\",   group = \"department\",   colorByGroup = TRUE,   showStats = TRUE,   nodeSize = \"degree\",   sortNodes = \"degree\",   plotTitle = \"Academic Network with Comprehensive Statistics\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"understanding-network-metrics","dir":"Articles","previous_headings":"Network Analytics and Statistics","what":"Understanding Network Metrics","title":"Network Visualization with jjarcdiagram","text":"network statistics provide valuable insights: Network Density: Ratio actual possible connections (0-1 scale) Connectivity: Whether nodes can reach Degree Centrality: Number connections per node Betweenness Centrality: Nodes act bridges others","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"custom-colors-and-labels","dir":"Articles","previous_headings":"Customization and Styling","what":"Custom Colors and Labels","title":"Network Visualization with jjarcdiagram","text":"","code":"# Custom plot with enhanced labeling jjarcdiagram(   data = social_network_data,   source = \"source\",   target = \"target\",   weight = \"weight\",   group = \"group\",   colorByGroup = TRUE,   showLegend = TRUE,   labelSize = 1.2,   nodeSize = \"degree\",   nodeSizeValue = 2.5,   arcWidth = \"weight\",   arcTransparency = 0.7,   plotTitle = \"Customized Social Network Visualization\",   showStats = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"multiple-group-variables","dir":"Articles","previous_headings":"Customization and Styling","what":"Multiple Group Variables","title":"Network Visualization with jjarcdiagram","text":"","code":"# Compare different grouping strategies # grouping_vars <- c(\"group\", \"interaction_type\")   # for(var in grouping_vars) { #   cat(\"\\n=== Grouping by\", var, \"===\\n\") #   result <- jjarcdiagram( #     data = social_network_data, #     source = \"source\", #     target = \"target\", #     weight = \"weight\", #     group = var, #     colorByGroup = TRUE, #     showLegend = TRUE, #     plotTitle = paste(\"Grouped by\", var) #   ) # }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"biological-networks","dir":"Articles","previous_headings":"Clinical and Research Applications","what":"Biological Networks","title":"Network Visualization with jjarcdiagram","text":"","code":"# Gene regulation network analysis jjarcdiagram(   data = gene_network_data,   source = \"regulator\",   target = \"target\",   weight = \"regulation_score\",   group = \"effect_type\",   colorByGroup = TRUE,   showLegend = TRUE,   nodeSize = \"degree\",   sortNodes = \"degree\",   showStats = TRUE,   plotTitle = \"Gene Regulatory Network by Effect Type\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"organizational-analysis","dir":"Articles","previous_headings":"Clinical and Research Applications","what":"Organizational Analysis","title":"Network Visualization with jjarcdiagram","text":"","code":"# Department-level analysis jjarcdiagram(   data = org_hierarchy_data,   source = \"employee\",   target = \"reports_to\",   weight = \"relationship_strength\",   group = \"level\",   colorByGroup = TRUE,   showLegend = TRUE,   directed = TRUE,   sortNodes = \"group\",   horizontal = FALSE,   showStats = TRUE,   plotTitle = \"Organizational Structure by Hierarchy Level\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"collaboration-networks","dir":"Articles","previous_headings":"Clinical and Research Applications","what":"Collaboration Networks","title":"Network Visualization with jjarcdiagram","text":"","code":"# Research collaboration analysis jjarcdiagram(   data = academic_network_data,   source = \"author1\",   target = \"author2\",   weight = \"collaboration_years\",   group = \"department\",   colorByGroup = TRUE,   showLegend = TRUE,   nodeSize = \"degree\",   arcWidth = \"weight\",   sortNodes = \"degree\",   sortDecreasing = TRUE,   showStats = TRUE,   plotTitle = \"Long-term Research Collaborations\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"handling-different-network-sizes","dir":"Articles","previous_headings":"Performance and Scalability","what":"Handling Different Network Sizes","title":"Network Visualization with jjarcdiagram","text":"","code":"# Compare performance with different network sizes network_sizes <- list(   \"Small\" = minimal_network_data,   \"Medium\" = social_network_data,   \"Large\" = large_network_data )  for(size_name in names(network_sizes)) {   data_set <- network_sizes[[size_name]]   n_nodes <- length(unique(c(data_set[[1]], data_set[[2]])))   n_edges <- nrow(data_set)      cat(\"\\n=== Network Size:\", size_name, \"===\\n\")   cat(\"Nodes:\", n_nodes, \", Edges:\", n_edges, \"\\n\") }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"data-preparation-guidelines","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Data Preparation Guidelines","title":"Network Visualization with jjarcdiagram","text":"Data Quality: Ensure clean source target identifiers Weight Scaling: Normalize weights better visualization Group Selection: Choose meaningful categorical variables Edge Validation: Remove duplicate invalid connections","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"visualization-guidelines","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Visualization Guidelines","title":"Network Visualization with jjarcdiagram","text":"Layout Choice: Use horizontal wide networks, vertical tall ones Node Sizing: Use degree-based sizing centrality emphasis Color Coding: Limit groups 8-10 clarity Arc Transparency: Use 0.5-0.7 overlapping connections","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"analysis-workflow","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Analysis Workflow","title":"Network Visualization with jjarcdiagram","text":"Explore Data Structure: Check node distribution edge patterns Basic Visualization: Start simple layout default settings Add Grouping: Include categorical variables insights Customize Appearance: Adjust sizing, colors, layout Analyze Metrics: Review network statistics interpretation","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"network-comparison","dir":"Articles","previous_headings":"Advanced Features","what":"Network Comparison","title":"Network Visualization with jjarcdiagram","text":"","code":"# Compare networks with different parameters comparison_data <- academic_network_data  # Network sorted by names jjarcdiagram(   data = comparison_data,   source = \"author1\",   target = \"author2\",   weight = \"publications\",   group = \"department\",   sortNodes = \"name\",   colorByGroup = TRUE,   plotTitle = \"Academic Network - Alphabetical Order\" )  # Network sorted by centrality jjarcdiagram(   data = comparison_data,   source = \"author1\",   target = \"author2\",   weight = \"publications\",    group = \"department\",   sortNodes = \"degree\",   sortDecreasing = TRUE,   colorByGroup = TRUE,   plotTitle = \"Academic Network - Centrality Order\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"dynamic-network-properties","dir":"Articles","previous_headings":"Advanced Features","what":"Dynamic Network Properties","title":"Network Visualization with jjarcdiagram","text":"","code":"# Analyze temporal aspects using collaboration years jjarcdiagram(   data = academic_network_data,   source = \"author1\",   target = \"author2\",   weight = \"collaboration_years\",   group = \"department\",   colorByGroup = TRUE,   showLegend = TRUE,   arcWidth = \"weight\",   nodeSize = \"degree\",   showStats = TRUE,   plotTitle = \"Collaboration Duration Network\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Network Visualization with jjarcdiagram","text":"jjarcdiagram() function provides powerful flexible approach network visualization particularly well-suited :","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"key-advantages","dir":"Articles","previous_headings":"Conclusion","what":"Key Advantages:","title":"Network Visualization with jjarcdiagram","text":"Clarity: Minimal visual clutter compared traditional network plots Scalability: Handles networks 3 100+ nodes effectively Flexibility: Supports various network types data formats Analytics: Built-network metrics centrality measures Customization: Extensive styling layout options","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"ideal-use-cases","dir":"Articles","previous_headings":"Conclusion","what":"Ideal Use Cases:","title":"Network Visualization with jjarcdiagram","text":"Hierarchical Networks: Organizational charts, taxonomy trees Sequential Processes: Workflow diagrams, pipeline analysis Collaboration Networks: Research partnerships, social connections Biological Networks: Gene regulation, protein interactions Supply Chains: Manufacturing distribution networks","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjarcdiagram-comprehensive.html","id":"best-applications","dir":"Articles","previous_headings":"Conclusion","what":"Best Applications:","title":"Network Visualization with jjarcdiagram","text":"Networks clear directional flow Hierarchical semi-hierarchical structures Medium-sized networks (10-100 nodes) Networks edge overlap problematic traditional layouts additional resources advanced network analysis techniques, see ClinicoPath documentation visualization vignettes package.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"introduction-to-jjbetweenstats","dir":"Articles","previous_headings":"","what":"Introduction to jjbetweenstats","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"jjbetweenstats function high-performance wrapper around ggstatsplot package, optimized creating publication-ready violin plots compare continuous variables independent groups. function significantly enhanced performance optimizations, caching mechanisms, improved user feedback.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"Introduction to jjbetweenstats","what":"Key Features","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"High Performance: Optimized data processing intelligent caching Comprehensive Statistical Testing: Parametric, non-parametric, robust, Bayesian methods Multiple Variable Support: Efficient handling multiple dependent variables Grouped Analysis: Advanced grouping capabilities grvar parameter Customizable Visualizations: Flexible violin, box, point plot combinations Professional Output: Publication-ready plots statistical annotations Real-time Progress: Checkpoint functionality user feedback analysis","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"new-in-this-version","dir":"Articles","previous_headings":"Introduction to jjbetweenstats > Performance Optimizations","what":"New in This Version","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Data Caching: Eliminates redundant data processing Options Caching: Prevents repeated formula construction Checkpoint Integration: Real-time progress feedback Memory Efficiency: Optimized large datasets Code Simplification: Reduced code duplication 60%","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"when-to-use-jjbetweenstats","dir":"Articles","previous_headings":"Introduction to jjbetweenstats","what":"When to Use jjbetweenstats","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Use jjbetweenstats need : Compare continuous variables independent groups Analyze treatment effects clinical trials Examine biomarker expression across conditions Perform pharmacokinetic comparisons Evaluate psychological intervention outcomes Create publication-ready statistical visualizations","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"single-dependent-variable-analysis","dir":"Articles","previous_headings":"Basic Usage","what":"Single Dependent Variable Analysis","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Let’s start basic example using clinical laboratory data: creates violin plot showing distribution hemoglobin levels across different treatment groups, complete appropriate statistical testing effect size calculations.","code":"# Basic violin plot comparing hemoglobin levels across treatment groups jjbetweenstats(   data = clinical_lab_data,   dep = hemoglobin,   group = treatment_group,   grvar = NULL )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"multiple-dependent-variables","dir":"Articles","previous_headings":"Basic Usage","what":"Multiple Dependent Variables","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"optimized function efficiently handles multiple dependent variables:","code":"# Analyze multiple lab parameters simultaneously jjbetweenstats(   data = clinical_lab_data,   dep = c(hemoglobin, white_blood_cells, platelet_count),   group = treatment_group,   grvar = NULL )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"statistical-methods-comparison","dir":"Articles","previous_headings":"Advanced Statistical Options","what":"Statistical Methods Comparison","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"function supports four different statistical approaches:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"parametric-analysis-default","dir":"Articles","previous_headings":"Advanced Statistical Options > Statistical Methods Comparison","what":"Parametric Analysis (Default)","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"jjbetweenstats(   data = biomarker_expression_data,   dep = protein_a_expression,   group = tissue_type,   typestatistics = \"parametric\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"non-parametric-analysis","dir":"Articles","previous_headings":"Advanced Statistical Options > Statistical Methods Comparison","what":"Non-parametric Analysis","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"jjbetweenstats(   data = pharmacokinetics_data,   dep = peak_concentration,   group = dose_level,   typestatistics = \"nonparametric\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"robust-analysis","dir":"Articles","previous_headings":"Advanced Statistical Options > Statistical Methods Comparison","what":"Robust Analysis","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"jjbetweenstats(   data = psychological_assessment_data,   dep = quality_of_life,   group = intervention_group,   typestatistics = \"robust\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"bayesian-analysis","dir":"Articles","previous_headings":"Advanced Statistical Options > Statistical Methods Comparison","what":"Bayesian Analysis","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"jjbetweenstats(   data = exercise_physiology_data,   dep = vo2_max,   group = training_regimen,   typestatistics = \"bayes\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"using-the-grvar-parameter","dir":"Articles","previous_headings":"Grouped Analysis with Performance Benefits","what":"Using the grvar Parameter","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"optimized grvar parameter allows sophisticated grouped analyses:","code":"# Analyze hemoglobin by treatment group, split by disease severity jjbetweenstats(   data = clinical_lab_data,   dep = hemoglobin,   group = treatment_group,   grvar = disease_severity )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"complex-multi-level-grouping","dir":"Articles","previous_headings":"Grouped Analysis with Performance Benefits","what":"Complex Multi-level Grouping","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"# Biomarker expression by tissue type, grouped by tumor grade jjbetweenstats(   data = biomarker_expression_data,   dep = protein_a_expression,   group = tissue_type,   grvar = tumor_grade )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"enabling-pairwise-comparisons","dir":"Articles","previous_headings":"Pairwise Comparisons and Effect Sizes","what":"Enabling Pairwise Comparisons","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"comparing multiple groups, pairwise comparisons provide detailed insights:","code":"jjbetweenstats(   data = pharmacokinetics_data,   dep = peak_concentration,   group = dose_level,   pairwisecomparisons = TRUE,   padjustmethod = \"holm\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"effect-size-options","dir":"Articles","previous_headings":"Pairwise Comparisons and Effect Sizes","what":"Effect Size Options","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Different effect size measures various research contexts:","code":"# Cohen's d (biased) for clinical trials jjbetweenstats(   data = clinical_lab_data,   dep = creatinine,   group = treatment_group,   effsizetype = \"biased\" ) # Hedge's g (unbiased) for smaller samples jjbetweenstats(   data = psychological_assessment_data,   dep = depression_score,   group = intervention_group,   effsizetype = \"unbiased\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"plot-type-combinations","dir":"Articles","previous_headings":"Visualization Customization","what":"Plot Type Combinations","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Customize visualization components:","code":"# Violin plots only jjbetweenstats(   data = exercise_physiology_data,   dep = muscle_mass,   group = training_regimen,   violin = TRUE,   boxplot = FALSE,   point = FALSE ) # Box plots only jjbetweenstats(   data = exercise_physiology_data,   dep = muscle_mass,   group = training_regimen,   violin = FALSE,   boxplot = TRUE,   point = FALSE ) # Combined visualization jjbetweenstats(   data = exercise_physiology_data,   dep = muscle_mass,   group = training_regimen,   violin = TRUE,   boxplot = TRUE,   point = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"centrality-measures","dir":"Articles","previous_headings":"Visualization Customization","what":"Centrality Measures","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Display central tendency measures:","code":"jjbetweenstats(   data = clinical_lab_data,   dep = albumin,   group = treatment_group,   centralityplotting = TRUE,   centralitytype = \"parametric\"  # Shows means ) jjbetweenstats(   data = biomarker_expression_data,   dep = gene_expression_score,   group = tissue_type,   centralityplotting = TRUE,   centralitytype = \"nonparametric\"  # Shows medians )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"clinical-trial-analysis","dir":"Articles","previous_headings":"Real-World Clinical Applications","what":"Clinical Trial Analysis","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Comprehensive analysis treatment effectiveness:","code":"# Multi-parameter clinical trial analysis jjbetweenstats(   data = clinical_lab_data,   dep = c(hemoglobin, white_blood_cells, creatinine),   group = treatment_group,   grvar = disease_severity,   typestatistics = \"nonparametric\",   pairwisecomparisons = TRUE,   padjustmethod = \"BH\",   centralityplotting = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"biomarker-discovery-study","dir":"Articles","previous_headings":"Real-World Clinical Applications","what":"Biomarker Discovery Study","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Analyzing biomarker expression patterns:","code":"jjbetweenstats(   data = biomarker_expression_data,   dep = c(protein_a_expression, protein_b_expression, gene_expression_score),   group = tissue_type,   grvar = patient_sex,   typestatistics = \"robust\",   effsizetype = \"omega\",   pairwisecomparisons = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"pharmacokinetic-study","dir":"Articles","previous_headings":"Real-World Clinical Applications","what":"Pharmacokinetic Study","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Dose-response relationship analysis:","code":"jjbetweenstats(   data = pharmacokinetics_data,   dep = peak_concentration,   group = dose_level,   grvar = formulation,   typestatistics = \"parametric\",   pairwisecomparisons = TRUE,   pairwisedisplay = \"everything\",   centralityplotting = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"psychological-intervention-study","dir":"Articles","previous_headings":"Real-World Clinical Applications","what":"Psychological Intervention Study","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Mental health outcome analysis:","code":"jjbetweenstats(   data = psychological_assessment_data,   dep = c(depression_score, anxiety_score, quality_of_life),   group = intervention_group,   grvar = baseline_severity,   typestatistics = \"robust\",   pairwisecomparisons = TRUE,   padjustmethod = \"BH\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"exercise-physiology-research","dir":"Articles","previous_headings":"Real-World Clinical Applications","what":"Exercise Physiology Research","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Athletic performance comparison:","code":"# jjbetweenstats( #   data = exercise_physiology_data, #   dep = c(vo2_max, muscle_mass, lactate_threshold), #   group = training_regimen, #   grvar = experience_level, #   typestatistics = \"parametric\", #   effsizetype = \"biased\", #   centralityplotting = TRUE # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"working-with-histopathology-data","dir":"Articles","previous_headings":"","what":"Working with Histopathology Data","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Using classic histopathology dataset:","code":"# Age distribution by sex jjbetweenstats(   data = histopathology,   dep = Age,   group = Sex,   typestatistics = \"nonparametric\" ) # Multiple measurements analysis jjbetweenstats(   data = histopathology,   dep = c(Age, Grade),   group = Group,   typestatistics = \"robust\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"large-dataset-handling","dir":"Articles","previous_headings":"Performance Benchmarking","what":"Large Dataset Handling","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"optimized function efficiently handles large datasets:","code":"# Create larger dataset for demonstration large_clinical_data <- do.call(rbind, replicate(10, clinical_lab_data, simplify = FALSE)) large_clinical_data$patient_id <- 1:nrow(large_clinical_data)  # Performance optimizations make this efficient jjbetweenstats(   data = large_clinical_data,   dep = c(hemoglobin, white_blood_cells, platelet_count),   group = treatment_group,   grvar = disease_severity )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"caching-benefits","dir":"Articles","previous_headings":"Performance Benchmarking","what":"Caching Benefits","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"function’s caching system provides significant performance improvements: Data Processing Cache: Eliminates redundant data conversions Options Cache: Prevents repeated formula construction Memory Efficiency: Reduces memory footprint large analyses","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"multiple-comparison-corrections","dir":"Articles","previous_headings":"Advanced Configuration Options","what":"Multiple Comparison Corrections","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Choose appropriate correction methods:","code":"# Conservative Bonferroni correction jjbetweenstats(   data = pharmacokinetics_data,   dep = clearance_rate,   group = dose_level,   pairwisecomparisons = TRUE,   padjustmethod = \"bonferroni\" ) # False Discovery Rate control jjbetweenstats(   data = biomarker_expression_data,   dep = protein_a_expression,   group = tissue_type,   pairwisecomparisons = TRUE,   padjustmethod = \"BH\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"customizing-display-options","dir":"Articles","previous_headings":"Advanced Configuration Options","what":"Customizing Display Options","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"# Show all pairwise comparisons jjbetweenstats(   data = clinical_lab_data,   dep = bilirubin,   group = treatment_group,   pairwisecomparisons = TRUE,   pairwisedisplay = \"everything\" ) # Remove statistical subtitle for cleaner plots jjbetweenstats(   data = exercise_physiology_data,   dep = flexibility_score,   group = sport_type,   resultssubtitle = FALSE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"handling-missing-data","dir":"Articles","previous_headings":"Troubleshooting and Best Practices","what":"Handling Missing Data","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"function automatically handles missing data jmvcore::naOmit():","code":"# Create data with missing values for demonstration demo_data <- clinical_lab_data demo_data$hemoglobin[1:10] <- NA  jjbetweenstats(   data = demo_data,   dep = hemoglobin,   group = treatment_group )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"guidelines-for-method-selection","dir":"Articles","previous_headings":"Troubleshooting and Best Practices > Optimal Statistical Method Selection","what":"Guidelines for Method Selection:","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Parametric: Use data approximately normal variances equal Non-parametric: Default choice non-normal data small samples Robust: Good compromise data outliers Bayesian: want incorporate prior knowledge","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"for-large-datasets","dir":"Articles","previous_headings":"Troubleshooting and Best Practices > Performance Tips","what":"For Large Datasets:","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Use single dependent variables possible Consider data sampling exploratory analysis Utilize caching system avoiding parameter changes","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"for-multiple-comparisons","dir":"Articles","previous_headings":"Troubleshooting and Best Practices > Performance Tips","what":"For Multiple Comparisons:","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Choose appropriate correction methods Consider balance Type Type II errors Use effect sizes alongside p-values","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"issue-1-too-many-groups","dir":"Articles","previous_headings":"Troubleshooting and Best Practices > Common Issues and Solutions","what":"Issue 1: Too Many Groups","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"# When you have many groups, consider grouping or filtering filtered_data <- clinical_lab_data %>%   filter(treatment_group %in% c(\"Control\", \"Drug A\"))  jjbetweenstats(   data = filtered_data,   dep = hemoglobin,   group = treatment_group )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"issue-2-extreme-outliers","dir":"Articles","previous_headings":"Troubleshooting and Best Practices > Common Issues and Solutions","what":"Issue 2: Extreme Outliers","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"# Use robust methods for data with extreme outliers jjbetweenstats(   data = biomarker_expression_data,   dep = protein_a_expression,   group = tissue_type,   typestatistics = \"robust\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"understanding-the-statistical-output","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Understanding the Statistical Output","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Main Test Results: Displayed plot subtitle Effect Sizes: Indicate practical significance Confidence Intervals: Show precision estimates Pairwise Comparisons: Identify specific group differences","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"reporting-results","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Reporting Results","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"reporting results jjbetweenstats: Specify statistical test used Report effect sizes confidence intervals Mention multiple comparison corrections applicable Include sample sizes group Describe visualization type (violin, box, points)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"clinical-vs-statistical-significance","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Clinical vs Statistical Significance","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Effect sizes help determine clinical relevance Consider confidence intervals precision Large effect sizes may clinically meaningful even non-significant p-values Small effect sizes may clinically relevant despite statistical significance","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"multi-stage-analysis-workflow","dir":"Articles","previous_headings":"Advanced Examples","what":"Multi-stage Analysis Workflow","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"# Step 1: Overall group comparison overall_analysis <- jjbetweenstats(   data = psychological_assessment_data,   dep = depression_score,   group = intervention_group,   typestatistics = \"nonparametric\" )  # Step 2: Subgroup analysis by baseline severity subgroup_analysis <- jjbetweenstats(   data = psychological_assessment_data,   dep = depression_score,   group = intervention_group,   grvar = baseline_severity,   typestatistics = \"nonparametric\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"comparative-methods-analysis","dir":"Articles","previous_headings":"Advanced Examples","what":"Comparative Methods Analysis","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"# Compare the same data with different statistical methods methods <- c(\"parametric\", \"nonparametric\", \"robust\", \"bayes\")  for (method in methods) {   cat(\"\\n\", method, \"analysis:\\n\")   print(jjbetweenstats(     data = clinical_lab_data[1:100, ],  # Subset for demonstration     dep = hemoglobin,     group = treatment_group,     typestatistics = method   )) }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"complementary-analyses","dir":"Articles","previous_headings":"Integration with Other ClinicoPath Functions","what":"Complementary Analyses","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"# Use jjbetweenstats for continuous variables jjbetweenstats(   data = histopathology,   dep = Age,   group = Group )  # Use jjbarstats for categorical variables # jjbarstats( #   data = histopathology, #   dep = Sex, #   group = Group # )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"optimized jjbetweenstats function provides powerful, high-performance solution comparing continuous variables groups clinical research settings. Key improvements include:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"performance-enhancements","dir":"Articles","previous_headings":"Conclusion","what":"Performance Enhancements","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"60% reduction code duplication Intelligent caching system Real-time progress feedback Optimized memory usage","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"research-applications","dir":"Articles","previous_headings":"Conclusion","what":"Research Applications","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Clinical trials treatment comparisons Biomarker discovery validation Pharmacokinetic pharmacodynamic studies Psychological behavioral interventions Exercise physiology sports science","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"statistical-rigor","dir":"Articles","previous_headings":"Conclusion","what":"Statistical Rigor","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"Multiple statistical approaches (parametric, non-parametric, robust, Bayesian) Comprehensive effect size reporting Flexible multiple comparison corrections Publication-ready visualizations function’s combination statistical power, performance optimization, visual appeal makes excellent choice exploratory confirmatory analyses healthcare life sciences research.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"further-resources","dir":"Articles","previous_headings":"Conclusion","what":"Further Resources","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"ggstatsplot documentation Statistical methods continuous data ClinicoPath package documentation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/24-jjbetweenstats-comprehensive.html","id":"session-information","dir":"Articles","previous_headings":"Conclusion","what":"Session Information","title":"High-Performance Violin Plot Analysis with jjbetweenstats","text":"","code":"sessionInfo()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"jjcorrmat function provides comprehensive interface creating correlation matrices advanced statistical analysis capabilities. function wrapper around ggstatsplot::ggcorrmat ggstatsplot::grouped_ggcorrmat, offering single grouped correlation matrix visualizations.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"","what":"Key Features","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"Multiple correlation methods: Parametric (Pearson), nonparametric (Spearman), robust, Bayesian Grouped analysis: Create separate correlation matrices different groups Performance optimized: Uses internal caching eliminate redundant computations Comprehensive visualization: High-quality correlation plots statistical annotations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"","what":"Installation and Setup","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"","code":"# Install ClinicoPath if not already installed library(jjstatsplot)  library(jjstatsplot) library(ggplot2)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"basic-correlation-matrix","dir":"Articles","previous_headings":"Quick Start","what":"Basic Correlation Matrix","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"","code":"# Load test data data(jjcorrmat_test_data)  # Basic correlation matrix result <- jjcorrmat(   data = jjcorrmat_test_data,   dep = c(\"ki67_percent\", \"p53_score\", \"her2_intensity\", \"tumor_size_mm\"),   typestatistics = \"parametric\" )  # View the plot result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"grouped-correlation-matrix","dir":"Articles","previous_headings":"Quick Start","what":"Grouped Correlation Matrix","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"","code":"# Grouped correlation matrix by tumor grade result_grouped <- jjcorrmat(   data = jjcorrmat_test_data,   dep = c(\"ki67_percent\", \"p53_score\", \"her2_intensity\"),   grvar = \"tumor_grade\",   typestatistics = \"nonparametric\" )  # View the grouped plot result_grouped$plot2"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"core-parameters","dir":"Articles","previous_headings":"Function Parameters","what":"Core Parameters","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"data: Input data frame containing variables analyze dep: List continuous variables correlation analysis (must numeric) grvar: Optional grouping variable creating separate correlation matrices typestatistics: Type correlation analysis perform","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"statistical-methods","dir":"Articles","previous_headings":"Function Parameters","what":"Statistical Methods","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"typestatistics parameter supports four different approaches: Assumes normal distribution Best linear relationships commonly used Distribution-free method Robust outliers Captures monotonic relationships Robust outliers non-normality Good compromise parametric nonparametric Uses WRS2::pbcor() Provides Bayes factors evidence assessment Incorporates prior beliefs Gives probabilistic interpretation","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"version-history","dir":"Articles","previous_headings":"Performance Optimizations","what":"Version History","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"function significantly optimized performance: Previous Issues: - Redundant data processing .plot() .plot2() methods - Unused caching infrastructure - Repeated formula construction variable processing Current Optimizations: - Data Caching: Uses .prepareData() method cache processed data - Options Caching: Uses .prepareOptions() method cache formula processing - Eliminated Redundancy: plot methods now use cached results - Better Progress Feedback: Clear user messaging processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"performance-benefits","dir":"Articles","previous_headings":"Performance Optimizations","what":"Performance Benefits","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"","code":"# Performance comparison (conceptual) # Before optimization:  # - Data processed twice (once for each plot) # - Formula construction repeated # - Variable processing duplicated  # After optimization: # - Data processed once and cached # - Formula construction done once # - Significant speedup for large datasets"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"multiple-statistical-methods","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Multiple Statistical Methods","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"","code":"# Compare different correlation methods methods <- c(\"parametric\", \"nonparametric\", \"robust\", \"bayes\") variables <- c(\"ki67_percent\", \"p53_score\", \"her2_intensity\")  results <- list() for (method in methods) {   results[[method]] <- jjcorrmat(     data = jjcorrmat_test_data,     dep = variables,     typestatistics = method   ) }  # Each result contains the correlation matrix plot # results$parametric$plot # results$nonparametric$plot # etc."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"clinical-research-example","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Clinical Research Example","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"","code":"# Analyze biomarker correlations in breast cancer data biomarkers <- c(\"ki67_percent\", \"p53_score\", \"her2_intensity\", \"tumor_size_mm\", \"age_years\")  # Overall correlation matrix overall_corr <- jjcorrmat(   data = jjcorrmat_test_data,   dep = biomarkers,   typestatistics = \"parametric\" )  # Stratified by hormone receptor status stratified_corr <- jjcorrmat(   data = jjcorrmat_test_data,   dep = biomarkers,   grvar = \"hormone_status\",   typestatistics = \"parametric\" )  # Compare correlations across tumor grades grade_corr <- jjcorrmat(   data = jjcorrmat_test_data,   dep = biomarkers[1:4],  # Exclude age for clarity   grvar = \"tumor_grade\",   typestatistics = \"spearman\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"input-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Input Data Structure","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"input data data frame : Continuous variables: Numeric columns correlation analysis Grouping variables: Factor character columns stratified analysis Complete cases: Missing values automatically excluded","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"example-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Example Data Structure","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"","code":"# Structure of test data str(jjcorrmat_test_data)  # Key variables: # - ki67_percent: Numeric (0-100) # - p53_score: Numeric (0-50) # - her2_intensity: Numeric (0-30) # - tumor_size_mm: Numeric (5-50) # - age_years: Numeric (18-90) # - tumor_grade: Factor (Grade 1/2/3) # - hormone_status: Factor (ER+/PR+, etc.)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"variable-selection","dir":"Articles","previous_headings":"Best Practices","what":"Variable Selection","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"Choose appropriate variables: Select variables theoretically correlated Check distributions: Consider log transformation skewed variables Handle missing data: Decide complete case analysis vs. imputation Sample size: Ensure adequate sample size stable correlations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"statistical-method-selection","dir":"Articles","previous_headings":"Best Practices","what":"Statistical Method Selection","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"Use parametric variables approximately normal Use nonparametric ordinal data non-normal distributions Use robust outliers want parametric-like interpretation Use Bayesian want quantify evidence /correlations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"interpretation-guidelines","dir":"Articles","previous_headings":"Best Practices","what":"Interpretation Guidelines","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"0.00-0.30: Weak 0.30-0.70: Moderate 0.70-1.00: Strong Statistical significance: Consider p-values effect sizes Clinical significance: Strong statistical correlation may clinically meaningful","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"Check missing values variables Ensure least complete cases exist Verify least 2 continuous variables Check variables properly formatted numeric optimized version much faster large datasets, consider sampling","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"error-messages","dir":"Articles","previous_headings":"Troubleshooting","what":"Error Messages","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"","code":"# Example error handling tryCatch({   result <- jjcorrmat(     data = my_data,     dep = c(\"var1\", \"var2\"),     typestatistics = \"parametric\"   ) }, error = function(e) {   message(\"Error in correlation analysis: \", e$message)   message(\"Check your data structure and variable types\") })"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"underlying-functions","dir":"Articles","previous_headings":"Technical Details","what":"Underlying Functions","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"jjcorrmat function built : ggstatsplot::ggcorrmat: single correlation matrices ggstatsplot::grouped_ggcorrmat: grouped analyses jmvcore: data handling formula processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"caching-implementation","dir":"Articles","previous_headings":"Technical Details","what":"Caching Implementation","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"","code":"# Internal caching structure (conceptual) # private$.processedData: Cached cleaned data # private$.processedOptions: Cached formula and variable processing #  # Benefits: # - Eliminates redundant jmvcore::naOmit() calls # - Avoids repeated formula construction # - Shares processed data between plot methods"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"optimized jjcorrmat function provides: High performance: Significant speed improvements caching Flexibility: Multiple statistical methods grouping options Reliability: Comprehensive error handling validation Usability: Clear documentation examples function well-suited clinical research, biomarker analysis, scenario requiring robust correlation matrix visualization.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/25-jjcorrmat-comprehensive.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"jjcorrmat: Comprehensive Correlation Matrix Analysis","text":"","code":"sessionInfo() ## R version 4.5.1 (2025-06-13) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Tahoe 26.0.1 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Istanbul ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## loaded via a namespace (and not attached): ##  [1] digest_0.6.37     desc_1.4.3        R6_2.6.1          fastmap_1.2.0     ##  [5] xfun_0.53         cachem_1.1.0      knitr_1.50        htmltools_0.5.8.1 ##  [9] rmarkdown_2.29    lifecycle_1.0.4   cli_3.6.5         sass_0.4.10       ## [13] pkgdown_2.1.3     textshaping_1.0.3 jquerylib_0.1.4   systemfonts_1.3.1 ## [17] compiler_4.5.1    tools_4.5.1       ragg_1.5.0        bslib_0.9.0       ## [21] evaluate_1.0.5    yaml_2.3.10       jsonlite_2.0.0    rlang_1.1.6       ## [25] fs_1.6.6          htmlwidgets_1.6.4"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"jjdotplotstats function provides powerful interface creating statistical dot plots compare continuous variables across different groups. function wrapper around ggstatsplot::ggdotplotstats ggstatsplot::grouped_ggdotplotstats, offering single grouped dot plot visualizations comprehensive statistical analysis.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"","what":"Key Features","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"Multiple statistical methods: Parametric (t-tests), nonparametric (Mann-Whitney U), robust, Bayesian Grouped analysis: Create separate dot plots different subgroups Performance optimized: Uses internal caching eliminate redundant computations Effect size calculations: Multiple effect size options (Cohen’s d, Hedge’s g, eta-squared, omega-squared) Centrality measures: Optional display mean, median, robust centrality measures Comprehensive customization: Titles, labels, themes, statistical results display","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"","what":"Installation and Setup","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Install ClinicoPath if not already installed library(jjstatsplot)  library(jjstatsplot) library(ggplot2)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"basic-dot-plot","dir":"Articles","previous_headings":"Quick Start","what":"Basic Dot Plot","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Load test data data(jjdotplotstats_test_data)  # Basic dot plot comparing CRP levels across disease severity result <- jjdotplotstats(   data = jjdotplotstats_test_data,   dep = \"crp_level\",   group = \"disease_severity\",   typestatistics = \"parametric\" )  # View the plot result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"grouped-dot-plot","dir":"Articles","previous_headings":"Quick Start","what":"Grouped Dot Plot","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Grouped dot plot by treatment center result_grouped <- jjdotplotstats(   data = jjdotplotstats_test_data,   dep = \"esr_level\",   group = \"disease_severity\",   grvar = \"treatment_center\",   typestatistics = \"nonparametric\",   centralityplotting = TRUE )  # View the grouped plot result_grouped$plot2"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"core-parameters","dir":"Articles","previous_headings":"Function Parameters","what":"Core Parameters","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"data: Input data frame containing variables analyze dep: Continuous numeric variable dot plot (dependent variable) group: Categorical variable defining groups comparison grvar: Optional grouping variable creating separate plots typestatistics: Type statistical analysis perform","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"statistical-methods","dir":"Articles","previous_headings":"Function Parameters","what":"Statistical Methods","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"typestatistics parameter supports four different approaches: Assumes normality equal variances powerful assumptions met Effect sizes: Cohen’s d Hedge’s g Distribution-free method Robust outliers non-normality Based rank comparisons Robust outliers violations normality Uses trimmed means robust estimators Good compromise parametric nonparametric Provides Bayes factors evidence assessment Incorporates prior beliefs Gives probabilistic interpretation results","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"effect-size-options","dir":"Articles","previous_headings":"Function Parameters","what":"Effect Size Options","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"effsizetype parameter controls effect size calculations: “biased”: Cohen’s d (default) “unbiased”: Hedge’s g (small sample correction) “eta”: Eta-squared (proportion variance explained) “omega”: Omega-squared (less biased eta-squared)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"centrality-measures","dir":"Articles","previous_headings":"Function Parameters","what":"Centrality Measures","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"centralityplotting = TRUE, centralitytype parameter controls measure displayed: “parametric”: Mean “nonparametric”: Median “robust”: Trimmed mean “bayes”: MAP (Maximum Posteriori) estimator","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"version-history","dir":"Articles","previous_headings":"Performance Optimizations","what":"Version History","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"function significantly optimized performance: Previous Issues: - Redundant data processing .plot() .plot2() methods - caching infrastructure - Repeated variable conversion formula construction - Duplicated options processing Current Optimizations: - Data Caching: Uses .prepareData() method cache processed data - Options Caching: Uses .prepareOptions() method cache option processing - Eliminated Redundancy: plot methods now use cached results - Better Progress Feedback: Clear user messaging processing - Efficient Variable Conversion: Numeric conversion done cached","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"performance-benefits","dir":"Articles","previous_headings":"Performance Optimizations","what":"Performance Benefits","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Performance comparison (conceptual) # Before optimization:  # - Data processed twice (once for each plot) # - Variable conversion repeated # - Options processing duplicated  # After optimization: # - Data processed once and cached # - Variable conversion done once # - Significant speedup for large datasets"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"multiple-statistical-methods-comparison","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Multiple Statistical Methods Comparison","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Compare different statistical methods methods <- c(\"parametric\", \"nonparametric\", \"robust\", \"bayes\")  results <- list() for (method in methods) {   results[[method]] <- jjdotplotstats(     data = jjdotplotstats_test_data,     dep = \"crp_level\",     group = \"disease_severity\",     typestatistics = method   ) }  # Each result contains the dot plot with method-specific statistics # results$parametric$plot # results$nonparametric$plot # etc."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"clinical-biomarker-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Clinical Biomarker Analysis","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Comprehensive biomarker analysis biomarkers <- c(\"crp_level\", \"esr_level\", \"platelet_count\", \"hemoglobin_level\")  # Analyze each biomarker across disease severity groups biomarker_results <- list()  for (biomarker in biomarkers) {   biomarker_results[[biomarker]] <- jjdotplotstats(     data = jjdotplotstats_test_data,     dep = biomarker,     group = \"disease_severity\",     typestatistics = \"parametric\",     effsizetype = \"unbiased\",     centralityplotting = TRUE,     centralitytype = \"parametric\",     mytitle = paste(\"Distribution of\", biomarker, \"by Disease Severity\"),     xtitle = biomarker,     ytitle = \"Disease Severity\"   ) }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"gender-stratified-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Gender-Stratified Analysis","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Analyze hemoglobin levels by disease severity, stratified by gender hgb_gender_analysis <- jjdotplotstats(   data = jjdotplotstats_test_data,   dep = \"hemoglobin_level\",   group = \"disease_severity\",   grvar = \"gender\",   typestatistics = \"parametric\",   effsizetype = \"unbiased\",   centralityplotting = TRUE,   mytitle = \"Hemoglobin Levels by Disease Severity and Gender\",   xtitle = \"Hemoglobin Level (g/dL)\",   ytitle = \"Disease Severity\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"treatment-response-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Treatment Response Analysis","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Analyze biomarker levels by treatment response # (excluding healthy patients who don't have treatment) treated_patients <- subset(jjdotplotstats_test_data,                            treatment_response != \"N/A\")  response_analysis <- jjdotplotstats(   data = treated_patients,   dep = \"crp_level\",   group = \"treatment_response\",   grvar = \"comorbidity_status\",   typestatistics = \"nonparametric\",   centralityplotting = TRUE,   centralitytype = \"nonparametric\",   mytitle = \"CRP Levels by Treatment Response and Comorbidity Status\",   xtitle = \"CRP Level (mg/L)\",   ytitle = \"Treatment Response\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"input-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Input Data Structure","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"input data data frame : Continuous variable: Numeric column dot plot (dependent variable) Grouping variable: Factor character column defining comparison groups Optional grouping variable: Additional factor stratified analysis Complete cases: Missing values automatically excluded","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"example-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Example Data Structure","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Structure of test data str(jjdotplotstats_test_data)  # Key variables: # - crp_level: C-reactive protein levels (mg/L) # - esr_level: Erythrocyte sedimentation rate (mm/hr)   # - platelet_count: Platelet count (×10³/μL) # - hemoglobin_level: Hemoglobin levels (g/dL) # - disease_severity: Ordered factor (Healthy, Mild, Moderate, Severe) # - treatment_center: Factor (Center A, B, C, D) # - gender: Factor (Male, Female)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"variable-selection-and-preparation","dir":"Articles","previous_headings":"Best Practices","what":"Variable Selection and Preparation","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"Dependent variable continuous numeric Grouping variables categorical meaningful levels Examine histograms Q-Q plots Consider transformations highly skewed data Decide complete case analysis vs. imputation Document missing data patterns Ensure adequate sample size within group Consider power analysis effect size detection","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"statistical-method-selection","dir":"Articles","previous_headings":"Best Practices","what":"Statistical Method Selection","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"Use parametric data approximately normal equal variances Use nonparametric ordinal data, non-normal distributions, small samples Use robust outliers parametric interpretation desired Use Bayesian want quantify evidence incorporate prior knowledge","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"effect-size-interpretation","dir":"Articles","previous_headings":"Best Practices","what":"Effect Size Interpretation","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"0.2: Small effect 0.5: Medium effect 0.8: Large effect 0.01: Small effect (1% variance explained) 0.06: Medium effect (6% variance explained) 0.14: Large effect (14% variance explained)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"customization-tips","dir":"Articles","previous_headings":"Best Practices","what":"Customization Tips","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Highly customized dot plot custom_plot <- jjdotplotstats(   data = jjdotplotstats_test_data,   dep = \"crp_level\",   group = \"disease_severity\",   typestatistics = \"parametric\",   effsizetype = \"unbiased\",   centralityplotting = TRUE,   centralitytype = \"parametric\",   mytitle = \"C-Reactive Protein Levels Across Disease Severity Groups\",   xtitle = \"CRP Level (mg/L)\",   ytitle = \"Disease Severity\",   originaltheme = FALSE,  # Use jamovi theme   resultssubtitle = TRUE  # Show statistical results )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"Check missing values variables Ensure least complete cases exist Consider imputation subset analysis Verify specified dep group Check variables exist dataset Ensure proper variable types (numeric dep, factor group) optimized version much faster large datasets, consider sampling Check memory constraints","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"error-handling","dir":"Articles","previous_headings":"Troubleshooting","what":"Error Handling","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Example error handling tryCatch({   result <- jjdotplotstats(     data = my_data,     dep = \"continuous_var\",     group = \"group_var\",     typestatistics = \"parametric\"   ) }, error = function(e) {   message(\"Error in dot plot analysis: \", e$message)   message(\"Check your data structure and variable types\") })"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"underlying-functions","dir":"Articles","previous_headings":"Technical Details","what":"Underlying Functions","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"jjdotplotstats function built : ggstatsplot::ggdotplotstats: single dot plots ggstatsplot::grouped_ggdotplotstats: grouped analyses jmvcore: data handling option processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"caching-implementation","dir":"Articles","previous_headings":"Technical Details","what":"Caching Implementation","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"# Internal caching structure (conceptual) # private$.processedData: Cached cleaned data with converted variables # private$.processedOptions: Cached option processing and titles #  # Benefits: # - Eliminates redundant jmvcore::naOmit() calls # - Avoids repeated variable conversion # - Shares processed data between plot methods # - Reduces option processing overhead"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"biomarker-studies","dir":"Articles","previous_headings":"Clinical Applications","what":"Biomarker Studies","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"Dot plots particularly useful : Diagnostic biomarker evaluation: Comparing levels across disease groups Treatment monitoring: Assessing biomarker changes time Cohort comparisons: Analyzing differences study populations Quality control: Identifying outliers batch effects","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"research-scenarios","dir":"Articles","previous_headings":"Clinical Applications","what":"Research Scenarios","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"Drug Development: Compare efficacy biomarkers across treatment arms Epidemiology: Analyze exposure-outcome relationships Clinical Trials: Assess treatment effects continuous endpoints Laboratory Medicine: Compare reference ranges across populations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"optimized jjdotplotstats function provides: High performance: Significant speed improvements caching Statistical rigor: Multiple statistical methods effect sizes Flexibility: Extensive customization grouping options Clinical relevance: Designed biomarker clinical research applications Usability: Clear documentation comprehensive examples function well-suited clinical research, biomarker analysis, scenario requiring robust comparison continuous variables across groups.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/26-jjdotplotstats-comprehensive.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"jjdotplotstats: Comprehensive Dot Plot Analysis","text":"","code":"sessionInfo() ## R version 4.5.1 (2025-06-13) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Tahoe 26.0.1 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Istanbul ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## loaded via a namespace (and not attached): ##  [1] digest_0.6.37     desc_1.4.3        R6_2.6.1          fastmap_1.2.0     ##  [5] xfun_0.53         cachem_1.1.0      knitr_1.50        htmltools_0.5.8.1 ##  [9] rmarkdown_2.29    lifecycle_1.0.4   cli_3.6.5         sass_0.4.10       ## [13] pkgdown_2.1.3     textshaping_1.0.3 jquerylib_0.1.4   systemfonts_1.3.1 ## [17] compiler_4.5.1    tools_4.5.1       ragg_1.5.0        bslib_0.9.0       ## [21] evaluate_1.0.5    yaml_2.3.10       jsonlite_2.0.0    rlang_1.1.6       ## [25] fs_1.6.6          htmlwidgets_1.6.4"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"jjhistostats: Comprehensive Histogram Analysis","text":"jjhistostats function provides comprehensive interface creating statistical histograms visualize distribution continuous variables normality testing statistical summaries. function wrapper around ggstatsplot::gghistostats ggstatsplot::grouped_gghistostats, offering single grouped histogram visualizations advanced statistical analysis.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"","what":"Key Features","title":"jjhistostats: Comprehensive Histogram Analysis","text":"Multiple distribution assessment methods: Parametric (Shapiro-Wilk), nonparametric (Anderson-Darling), robust, Bayesian approaches Flexible bin width control: Automatic manual bin width specification Normal curve overlay: Compare data distribution theoretical normal distribution Centrality indicators: Display mean, median, robust centrality measures Multi-variable support: Create multiple histograms single analysis Grouped analysis: Separate histograms different subgroups Performance optimized: Uses internal caching eliminate redundant computations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"","what":"Installation and Setup","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Install ClinicoPath if not already installed library(jjstatsplot)  library(jjstatsplot) library(ggplot2)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"basic-histogram","dir":"Articles","previous_headings":"Quick Start","what":"Basic Histogram","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Load test data data(jjhistostats_test_data)  # Basic histogram with normality testing result <- jjhistostats(   data = jjhistostats_test_data,   dep = \"age_years\",   typestatistics = \"parametric\",   normalcurve = TRUE,   centralityline = TRUE )  # View the plot result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"multiple-variables-histogram","dir":"Articles","previous_headings":"Quick Start","what":"Multiple Variables Histogram","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Multiple histograms in one analysis result_multiple <- jjhistostats(   data = jjhistostats_test_data,   dep = c(\"age_years\", \"tumor_size_mm\", \"bmi\"),   typestatistics = \"parametric\",   resultssubtitle = TRUE,   centralityline = TRUE )  # View the combined plot result_multiple$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"grouped-histogram","dir":"Articles","previous_headings":"Quick Start","what":"Grouped Histogram","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Grouped histogram by disease stage result_grouped <- jjhistostats(   data = jjhistostats_test_data,   dep = \"psa_level\",   grvar = \"disease_stage\",   typestatistics = \"nonparametric\",   normalcurve = TRUE,   changebinwidth = TRUE,   binwidth = 2.0 )  # View the grouped plot result_grouped$plot2"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"core-parameters","dir":"Articles","previous_headings":"Function Parameters","what":"Core Parameters","title":"jjhistostats: Comprehensive Histogram Analysis","text":"data: Input data frame containing variables analyze dep: One continuous numeric variables histogram creation grvar: Optional grouping variable stratified analysis typestatistics: Type normality test perform","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"statistical-methods","dir":"Articles","previous_headings":"Function Parameters","what":"Statistical Methods","title":"jjhistostats: Comprehensive Histogram Analysis","text":"typestatistics parameter supports four different approaches: Best sample sizes 3 < n < 5000 Tests null hypothesis normality commonly used clinical research powerful Shapiro-Wilk detecting departures normality Better detecting deviations tails Good larger sample sizes Less sensitive outliers Uses robust statistical measures Good data may contamination Provides Bayes factors normality Quantifies evidence /normality Incorporates prior beliefs","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"binning-control","dir":"Articles","previous_headings":"Function Parameters > Display Options","what":"Binning Control","title":"jjhistostats: Comprehensive Histogram Analysis","text":"changebinwidth: Enable manual bin width control binwidth: Specify exact bin width (changebinwidth = TRUE) Automatic binning uses formula: (max(x) - min(x)) / sqrt(n)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"visual-elements","dir":"Articles","previous_headings":"Function Parameters > Display Options","what":"Visual Elements","title":"jjhistostats: Comprehensive Histogram Analysis","text":"Mean parametric analysis Median nonparametric analysis Trimmed mean robust analysis Uses sample mean standard deviation Helps visualize departure normality resultssubtitle: Show statistical test results subtitle","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"version-history","dir":"Articles","previous_headings":"Performance Optimizations","what":"Version History","title":"jjhistostats: Comprehensive Histogram Analysis","text":"function significantly optimized performance: Previous Issues: - Redundant data processing .plot() .plot2() methods - caching infrastructure - Repeated variable conversion formula construction - Inefficient multi-variable handling Current Optimizations: - Data Caching: Uses .prepareData() method cache processed data - Options Caching: Uses .prepareOptions() method cache option processing - Eliminated Redundancy: plot methods now use cached results - Efficient Multi-Variable Processing: Shared data preparation multiple histograms - Better Progress Feedback: Clear user messaging processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"performance-benefits","dir":"Articles","previous_headings":"Performance Optimizations","what":"Performance Benefits","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Performance comparison (conceptual) # Before optimization:  # - Data processed separately for each plot method # - Variable conversion repeated for each histogram # - Options processing duplicated  # After optimization: # - Data processed once and cached # - Variable conversion done once for all variables # - Significant speedup for multiple variables and grouped analysis"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"distribution-shape-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Distribution Shape Analysis","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Analyze different distribution shapes in the test data  # Normal distribution (age) age_hist <- jjhistostats(   data = jjhistostats_test_data,   dep = \"age_years\",   typestatistics = \"parametric\",   normalcurve = TRUE,   centralityline = TRUE,   resultssubtitle = TRUE )  # Right-skewed distribution (tumor size) tumor_hist <- jjhistostats(   data = jjhistostats_test_data,   dep = \"tumor_size_mm\",   typestatistics = \"nonparametric\",   normalcurve = TRUE,   changebinwidth = TRUE,   binwidth = 5 )  # Bimodal distribution (PSA levels) psa_hist <- jjhistostats(   data = jjhistostats_test_data,   dep = \"psa_level\",   typestatistics = \"robust\",   normalcurve = TRUE,   changebinwidth = TRUE,   binwidth = 3 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"clinical-biomarker-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Clinical Biomarker Analysis","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Comprehensive biomarker distribution analysis biomarkers <- c(\"hemoglobin_level\", \"creatinine_level\", \"crp_level\")  # Analyze all biomarkers simultaneously biomarker_analysis <- jjhistostats(   data = jjhistostats_test_data,   dep = biomarkers,   typestatistics = \"parametric\",   centralityline = TRUE,   resultssubtitle = TRUE,   normalcurve = TRUE )  # Stratified analysis by treatment group biomarker_by_treatment <- jjhistostats(   data = jjhistostats_test_data,   dep = \"crp_level\",   grvar = \"treatment_group\",   typestatistics = \"nonparametric\",   normalcurve = TRUE,   changebinwidth = TRUE,   binwidth = 5 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"normality-assessment-workflow","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Normality Assessment Workflow","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Systematic normality testing across multiple methods variable_of_interest <- \"ejection_fraction\"  # Parametric approach (Shapiro-Wilk) norm_parametric <- jjhistostats(   data = jjhistostats_test_data,   dep = variable_of_interest,   typestatistics = \"parametric\",   normalcurve = TRUE,   centralityline = TRUE )  # Nonparametric approach (Anderson-Darling) norm_nonparametric <- jjhistostats(   data = jjhistostats_test_data,   dep = variable_of_interest,   typestatistics = \"nonparametric\",   normalcurve = TRUE,   centralityline = TRUE )  # Robust approach norm_robust <- jjhistostats(   data = jjhistostats_test_data,   dep = variable_of_interest,   typestatistics = \"robust\",   normalcurve = TRUE,   centralityline = TRUE )  # Bayesian approach norm_bayes <- jjhistostats(   data = jjhistostats_test_data,   dep = variable_of_interest,   typestatistics = \"bayes\",   normalcurve = TRUE,   centralityline = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"custom-binning-strategies","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Custom Binning Strategies","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Different binning approaches for the same variable variable <- \"lab_score\"  # Automatic binning auto_bins <- jjhistostats(   data = jjhistostats_test_data,   dep = variable,   changebinwidth = FALSE )  # Fine binning (many narrow bins) fine_bins <- jjhistostats(   data = jjhistostats_test_data,   dep = variable,   changebinwidth = TRUE,   binwidth = 2 )  # Coarse binning (few wide bins) coarse_bins <- jjhistostats(   data = jjhistostats_test_data,   dep = variable,   changebinwidth = TRUE,   binwidth = 10 )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"input-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Input Data Structure","title":"jjhistostats: Comprehensive Histogram Analysis","text":"input data data frame : Continuous variables: Numeric columns histogram analysis Grouping variables: Factor character columns stratified analysis Complete cases: Missing values automatically excluded Reasonable sample size: least 10-15 observations per group meaningful analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"example-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Example Data Structure","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Structure of test data str(jjhistostats_test_data)  # Key variables: # - age_years: Normal distribution (20-95 years) # - tumor_size_mm: Right-skewed distribution (3-150 mm) # - ejection_fraction: Left-skewed distribution (15-80%) # - psa_level: Bimodal distribution (0.1-100 ng/mL) # - bmi: Nearly normal distribution (15-45 kg/m²) # - disease_stage: Ordered factor (Stage I-IV) # - treatment_group: Factor (Control, Treatment A, Treatment B)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"variable-selection-and-preparation","dir":"Articles","previous_headings":"Best Practices","what":"Variable Selection and Preparation","title":"jjhistostats: Comprehensive Histogram Analysis","text":"Ensure variables truly continuous Check reasonable ranges outliers Minimum 10-15 observations basic histogram least 30 observations reliable normality testing Consider power detecting departures normality Understand missing data patterns Document exclusions due missing values Identify potential outliers analysis Consider robust methods outliers present","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"statistical-method-selection","dir":"Articles","previous_headings":"Best Practices","what":"Statistical Method Selection","title":"jjhistostats: Comprehensive Histogram Analysis","text":"Use parametric well-behaved, moderately-sized samples (n=30-5000) Use nonparametric larger samples concerned tail behavior Use robust outliers present data quality uncertain Use Bayesian want quantify evidence normality","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"binning-strategy-guidelines","dir":"Articles","previous_headings":"Best Practices","what":"Binning Strategy Guidelines","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# General binning guidelines:  # Automatic binning (recommended starting point) # - Good for initial exploration # - Uses sqrt(n) rule or Sturges' formula  # Manual binning considerations: # Small datasets (n < 50): 5-10 bins # Medium datasets (n = 50-200): 10-20 bins   # Large datasets (n > 200): 20+ bins  # Rule of thumb for bin width: # binwidth ≈ (max - min) / desired_number_of_bins"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"histogram-shape-assessment","dir":"Articles","previous_headings":"Best Practices > Interpretation Guidelines","what":"Histogram Shape Assessment","title":"jjhistostats: Comprehensive Histogram Analysis","text":"Normal: Bell-shaped, symmetric around mean Right-skewed: Long tail extending right Left-skewed: Long tail extending left Bimodal: Two distinct peaks Uniform: Relatively flat across range","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"normality-test-interpretation","dir":"Articles","previous_headings":"Best Practices > Interpretation Guidelines","what":"Normality Test Interpretation","title":"jjhistostats: Comprehensive Histogram Analysis","text":"p > 0.05: Fail reject normality (data may normal) p ≤ 0.05: Reject normality (data significantly non-normal) Visual inspection: Always combine histogram visual assessment","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"jjhistostats: Comprehensive Histogram Analysis","text":"Check missing values selected variables Ensure least complete cases exist Consider imputation strategies automatic binning creates /many bins, use manual binwidth integer data, consider binwidth = 1 continuous data, experiment different bin widths optimized version much faster large datasets (n > 10,000), consider sampling Multiple variables create multiple plots - expect longer processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"error-handling","dir":"Articles","previous_headings":"Troubleshooting","what":"Error Handling","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Example error handling tryCatch({   result <- jjhistostats(     data = my_data,     dep = \"continuous_var\",     typestatistics = \"parametric\"   ) }, error = function(e) {   message(\"Error in histogram analysis: \", e$message)   message(\"Check your data structure and variable types\")      # Diagnostic information   cat(\"Data structure:\\n\")   str(my_data)   cat(\"\\nVariable summary:\\n\")   summary(my_data$continuous_var) })"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"underlying-functions","dir":"Articles","previous_headings":"Technical Details","what":"Underlying Functions","title":"jjhistostats: Comprehensive Histogram Analysis","text":"jjhistostats function built : ggstatsplot::gghistostats: single histograms ggstatsplot::grouped_gghistostats: grouped analyses jmvcore: data handling option processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"caching-implementation","dir":"Articles","previous_headings":"Technical Details","what":"Caching Implementation","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Internal caching structure (conceptual) # private$.processedData: Cached cleaned data with converted variables # private$.processedOptions: Cached option processing including binwidth #  # Benefits: # - Eliminates redundant jmvcore::naOmit() calls # - Avoids repeated variable conversion # - Shares processed data between plot methods # - Optimizes multi-variable processing"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"distribution-analysis-in-research","dir":"Articles","previous_headings":"Clinical Applications","what":"Distribution Analysis in Research","title":"jjhistostats: Comprehensive Histogram Analysis","text":"Histograms essential : Data exploration: Understanding variable distributions analysis Assumption checking: Verifying normality parametric tests Outlier detection: Identifying unusual values Data quality assessment: Detecting measurement errors data entry issues","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"research-scenarios","dir":"Articles","previous_headings":"Clinical Applications","what":"Research Scenarios","title":"jjhistostats: Comprehensive Histogram Analysis","text":"Clinical Trials: Assess baseline characteristics endpoint distributions Epidemiology: Examine exposure outcome variable distributions Laboratory Medicine: Establish reference ranges quality control Biomarker Studies: Understand biomarker distributions across populations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"normality-assessment-workflow-1","dir":"Articles","previous_headings":"Clinical Applications","what":"Normality Assessment Workflow","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"# Typical clinical research workflow  # Step 1: Initial exploration initial_assessment <- jjhistostats(   data = clinical_data,   dep = c(\"primary_endpoint\", \"key_biomarker\"),   normalcurve = TRUE,   centralityline = TRUE )  # Step 2: Formal normality testing   normality_test <- jjhistostats(   data = clinical_data,   dep = \"primary_endpoint\",   typestatistics = \"parametric\",   resultssubtitle = TRUE )  # Step 3: Stratified analysis stratified_analysis <- jjhistostats(   data = clinical_data,   dep = \"primary_endpoint\",   grvar = \"treatment_group\",   typestatistics = \"parametric\" )  # Step 4: Decision for downstream analysis # Based on normality results, choose appropriate statistical tests"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"jjhistostats: Comprehensive Histogram Analysis","text":"optimized jjhistostats function provides: High performance: Significant speed improvements caching Statistical rigor: Multiple normality testing approaches Flexibility: Comprehensive customization options binning display Clinical relevance: Designed biomedical research applications Usability: Clear documentation comprehensive examples function well-suited clinical research, biomarker analysis, data exploration, scenario requiring robust distribution visualization normality assessment.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/27-jjhistostats-comprehensive.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"jjhistostats: Comprehensive Histogram Analysis","text":"","code":"sessionInfo() ## R version 4.5.1 (2025-06-13) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Tahoe 26.0.1 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Istanbul ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## loaded via a namespace (and not attached): ##  [1] digest_0.6.37     desc_1.4.3        R6_2.6.1          fastmap_1.2.0     ##  [5] xfun_0.53         cachem_1.1.0      knitr_1.50        htmltools_0.5.8.1 ##  [9] rmarkdown_2.29    lifecycle_1.0.4   cli_3.6.5         sass_0.4.10       ## [13] pkgdown_2.1.3     textshaping_1.0.3 jquerylib_0.1.4   systemfonts_1.3.1 ## [17] compiler_4.5.1    tools_4.5.1       ragg_1.5.0        bslib_0.9.0       ## [21] evaluate_1.0.5    yaml_2.3.10       jsonlite_2.0.0    rlang_1.1.6       ## [25] fs_1.6.6          htmlwidgets_1.6.4"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"jjpiestats function provides comprehensive interface creating pie charts statistical analysis categorical data. function wrapper around ggstatsplot::ggpiestats ggstatsplot::grouped_ggpiestats, offering single grouped pie chart visualizations advanced statistical testing. ⚠️ Important Note Pie Chart Usage: function provides optimized pie chart functionality, visualization community strongly recommends considering alternatives like bar charts applications. vignette explains optimized functionality limitations pie charts.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"","what":"Key Features","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"Statistical analysis: Chi-square tests, Fisher’s exact tests, Bayesian analysis Multiple visualization modes: Single pie charts, grouped analysis, split panels Flexible grouping: Support contingency table analysis Performance optimized: Uses internal caching eliminate redundant computations Comprehensive testing: Parametric, nonparametric, robust, Bayesian approaches","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"","what":"Installation and Setup","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Install ClinicoPath if not already installed library(jjstatsplot)  library(jjstatsplot) library(ggplot2)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"why-the-visualization-community-discourages-pie-charts","dir":"Articles","previous_headings":"⚠️ Pie Chart Limitations and Visualization Best Practices","what":"Why the Visualization Community Discourages Pie Charts","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"demonstrating functionality, ’s crucial understand well-documented limitations pie charts:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"human-perception-issues","dir":"Articles","previous_headings":"⚠️ Pie Chart Limitations and Visualization Best Practices > Why the Visualization Community Discourages Pie Charts","what":"1. Human Perception Issues","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"Angle estimation: Humans poor accurately judging angles arc lengths Area comparison: Difficult compare slice sizes, especially similar-sized slices Ranking problems: Hard order categories value pie charts","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"comparison-difficulties","dir":"Articles","previous_headings":"⚠️ Pie Chart Limitations and Visualization Best Practices > Why the Visualization Community Discourages Pie Charts","what":"2. Comparison Difficulties","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Example demonstrating comparison difficulties # These values are hard to distinguish in pie charts: similar_values <- c(23, 25, 22, 30)  # Very close values # But easy to compare in bar charts  # Multiple pie charts are nearly impossible to compare # Bar charts allow direct comparison across groups"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"accessibility-issues","dir":"Articles","previous_headings":"⚠️ Pie Chart Limitations and Visualization Best Practices > Why the Visualization Community Discourages Pie Charts","what":"3. Accessibility Issues","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"Color blindness: Reliance color distinction creates accessibility barriers Small slices: Tiny categories become invisible unlabeled Label overlap: Text labels often overlap become unreadable","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"scientific-publication-standards","dir":"Articles","previous_headings":"⚠️ Pie Chart Limitations and Visualization Best Practices > Why the Visualization Community Discourages Pie Charts","what":"4. Scientific Publication Standards","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"high-impact journals style guides recommend: - Bar charts categorical data comparison - Stacked bar charts part--whole relationships - Dot plots precise value communication - Cleveland dot plots ranking categories","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"when-pie-charts-might-be-acceptable","dir":"Articles","previous_headings":"⚠️ Pie Chart Limitations and Visualization Best Practices","what":"When Pie Charts Might Be Acceptable","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"Pie charts may considered : 1. categories (3-5 maximum) 2. Clear differences values (slice >10% total) 3. Part--whole emphasis specifically needed 4. Single time point (comparing across groups)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"recommended-alternatives","dir":"Articles","previous_headings":"⚠️ Pie Chart Limitations and Visualization Best Practices","what":"Recommended Alternatives","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Instead of pie charts, consider:  # 1. Bar charts (jjbarstats function) jjbarstats(   data = your_data,   dep = \"outcome_variable\",   grvar = \"grouping_variable\" )  # 2. Stacked bar charts # 3. Cleveland dot plots # 4. Horizontal bar charts for long category names"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"core-parameters","dir":"Articles","previous_headings":"Function Parameters","what":"Core Parameters","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"data: Input data frame containing categorical variables dep: Categorical variable pie chart creation (factor required) group: Optional grouping variable contingency table analysis grvar: Optional split variable creating separate pie charts","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"statistical-methods","dir":"Articles","previous_headings":"Function Parameters","what":"Statistical Methods","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"typestatistics parameter supports four approaches: Tests independence contingency tables Assumes expected cell counts ≥ 5 commonly used categorical association Fisher’s exact test small samples appropriate expected cell counts low Exact p-values categorical associations Less sensitive outliers violations Uses robust statistical measures Good data quality uncertain Provides Bayes factors association evidence Quantifies strength evidence /independence Incorporates prior beliefs associations","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"version-history","dir":"Articles","previous_headings":"Performance Optimizations","what":"Version History","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"function significantly optimized: Previous Issues: - Redundant data processing across 4 plot methods (.plot1, .plot2, .plot4) - caching infrastructure - Multiple jmvcore::naOmit() calls data - Complex conditional logic duplicated across methods Current Optimizations: - Data Caching: Uses .prepareData() method cache processed data - Options Caching: Uses .prepareOptions() method cache option processing - Eliminated Redundancy: plot methods now use cached results - Shared Processing: Single data preparation visualization modes - Better Progress Feedback: Clear user messaging processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"performance-benefits","dir":"Articles","previous_headings":"Performance Optimizations","what":"Performance Benefits","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"optimized version provides: - Significant speedup grouped split analyses - Reduced memory usage single data processing - Faster rendering multiple pie charts - Improved user experience progress indicators","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"basic-pie-chart","dir":"Articles","previous_headings":"Quick Start Examples","what":"Basic Pie Chart","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Load test data data(jjpiestats_test_data)  # Basic pie chart with statistical testing result <- jjpiestats(   data = jjpiestats_test_data,   dep = \"treatment_response\",   typestatistics = \"parametric\",   resultssubtitle = TRUE )  # View the plot result$plot1"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"contingency-table-analysis","dir":"Articles","previous_headings":"Quick Start Examples","what":"Contingency Table Analysis","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Pie chart with grouping for association testing result_grouped <- jjpiestats(   data = jjpiestats_test_data,   dep = \"treatment_response\",   group = \"treatment_arm\",   typestatistics = \"parametric\",   resultssubtitle = TRUE )  # View the grouped analysis result_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"split-panel-analysis","dir":"Articles","previous_headings":"Quick Start Examples","what":"Split Panel Analysis","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Separate pie charts by hospital site result_split <- jjpiestats(   data = jjpiestats_test_data,   dep = \"disease_severity\",   group = \"gender\",   grvar = \"hospital_site\",   typestatistics = \"nonparametric\" )  # View the split panel plot result_split$plot4"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"clinical-trial-response-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Clinical Trial Response Analysis","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Primary endpoint analysis primary_response <- jjpiestats(   data = jjpiestats_test_data,   dep = \"treatment_response\",   typestatistics = \"parametric\",   resultssubtitle = TRUE )  # Response by treatment arm (association testing) response_by_treatment <- jjpiestats(   data = jjpiestats_test_data,   dep = \"treatment_response\",   group = \"treatment_arm\",   typestatistics = \"parametric\",   resultssubtitle = TRUE )  # Multi-site analysis response_by_site <- jjpiestats(   data = jjpiestats_test_data,   dep = \"treatment_response\",   group = \"treatment_arm\",   grvar = \"hospital_site\",   typestatistics = \"nonparametric\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"safety-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Safety Analysis","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Adverse event distribution adverse_events <- jjpiestats(   data = jjpiestats_test_data,   dep = \"adverse_event_grade\",   typestatistics = \"parametric\",   resultssubtitle = TRUE )  # Safety by treatment group safety_by_treatment <- jjpiestats(   data = jjpiestats_test_data,   dep = \"adverse_event_grade\",   group = \"treatment_arm\",   typestatistics = \"parametric\" )  # Regional safety differences safety_by_region <- jjpiestats(   data = jjpiestats_test_data,   dep = \"adverse_event_grade\",   grvar = \"region\",   typestatistics = \"nonparametric\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"biomarker-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Biomarker Analysis","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Biomarker prevalence biomarker_prevalence <- jjpiestats(   data = jjpiestats_test_data,   dep = \"biomarker_status\",   typestatistics = \"parametric\",   resultssubtitle = TRUE )  # Biomarker by demographic biomarker_by_gender <- jjpiestats(   data = jjpiestats_test_data,   dep = \"biomarker_status\",   group = \"gender\",   typestatistics = \"parametric\" )  # Response by biomarker status response_by_biomarker <- jjpiestats(   data = jjpiestats_test_data,   dep = \"treatment_response\",   group = \"biomarker_status\",   typestatistics = \"parametric\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"statistical-method-comparison","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Statistical Method Comparison","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Compare different statistical approaches variable_of_interest <- \"tumor_grade\" grouping_variable <- \"treatment_arm\"  # Parametric approach (Chi-square) param_result <- jjpiestats(   data = jjpiestats_test_data,   dep = variable_of_interest,   group = grouping_variable,   typestatistics = \"parametric\" )  # Nonparametric approach (Fisher's exact) nonparam_result <- jjpiestats(   data = jjpiestats_test_data,   dep = variable_of_interest,   group = grouping_variable,   typestatistics = \"nonparametric\" )  # Bayesian approach bayes_result <- jjpiestats(   data = jjpiestats_test_data,   dep = variable_of_interest,   group = grouping_variable,   typestatistics = \"bayes\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"input-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Input Data Structure","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"input data data frame : Categorical variables: Factor columns pie chart analysis Proper factor levels: Well-defined categories meaningful names Reasonable sample size: least 20-30 observations per category Balanced groups: Avoid extremely rare categories (<5% total)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"example-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Example Data Structure","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Structure of test data str(jjpiestats_test_data)  # Key variables for pie chart analysis: # - treatment_response: 4-level outcome (25%, 35%, 25%, 15%) # - disease_severity: 3-level ordered factor (40%, 45%, 15%) # - tumor_grade: 4-level pathological classification # - treatment_arm: 3-level balanced groups # - hospital_site: 5 different sites # - biomarker_status: Binary positive/negative (35%/65%)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"Best Practices (Given Pie Chart Limitations)","what":"Data Preparation","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"Limit categories: Maximum 5 categories readability Combine rare categories: Merge categories <5% frequency Order meaningfully: ordinal data, maintain natural order Handle missing data: Decide whether exclude show category","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"statistical-considerations","dir":"Articles","previous_headings":"Best Practices (Given Pie Chart Limitations)","what":"Statistical Considerations","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"Sample size: Ensure adequate power detecting associations Expected cell counts: Check assumptions Chi-square tests Multiple testing: Consider correction multiple comparisons Effect size: Report practical significance, just p-values","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"visualization-guidelines","dir":"Articles","previous_headings":"Best Practices (Given Pie Chart Limitations)","what":"Visualization Guidelines","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Recommended practices when using pie charts:  # 1. Limit to 3-5 categories maximum jjpiestats(   data = subset(jjpiestats_test_data,                  disease_severity %in% c(\"Mild\", \"Moderate\", \"Severe\")),   dep = \"disease_severity\" )  # 2. Use when part-to-whole relationship is key # (Total adds to 100%)  # 3. Ensure clear category differences # (Each slice should be >10% ideally)  # 4. Consider accessibility # (Color patterns, not just colors)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"when-to-use-alternatives","dir":"Articles","previous_headings":"Best Practices (Given Pie Chart Limitations)","what":"When to Use Alternatives","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"Consider jjbarstats instead : - Comparing values across categories important - >5 categories - Precise value reading needed - Comparing multiple groups - Publishing scientific journals","code":"# Use bar charts for these scenarios: # - Multiple time points # - Precise comparisons needed # - >5 categories # - Scientific publications # - Accessibility requirements  # The ClinicoPath module provides jjbarstats as the recommended alternative"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"underlying-functions","dir":"Articles","previous_headings":"Technical Details","what":"Underlying Functions","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"jjpiestats function built : ggstatsplot::ggpiestats: single pie charts statistical testing ggstatsplot::grouped_ggpiestats: grouped/split analyses jmvcore: data handling option processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"caching-implementation","dir":"Articles","previous_headings":"Technical Details","what":"Caching Implementation","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Internal caching structure (conceptual) # private$.processedData: Cached cleaned data with factor levels # private$.processedOptions: Cached option processing #  # Benefits: # - Eliminates redundant jmvcore::naOmit() calls # - Avoids repeated data processing across plot methods # - Shares processed data between single/grouped/split analyses # - Optimizes multi-group processing"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"statistical-tests-performed","dir":"Articles","previous_headings":"Technical Details","what":"Statistical Tests Performed","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Tests performed based on typestatistics:  # Parametric: # - Pearson's Chi-square test # - Goodness of fit test (single variable) # - Test of independence (two variables)  # Nonparametric: # - Fisher's exact test (small samples) # - McNemar's test (paired data, if applicable) # - Exact contingency table tests  # Robust: # - Robust association measures # - Bootstrap confidence intervals # - Less sensitive to outliers  # Bayesian: # - Bayes factors for independence # - Posterior probabilities # - Credible intervals"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"research-scenarios-where-pie-charts-might-be-used","dir":"Articles","previous_headings":"Clinical Applications","what":"Research Scenarios Where Pie Charts Might Be Used","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"Despite limitations, pie charts sometimes requested : Executive summaries: High-level overview non-technical audiences Patient education: Simple prevalence communication Grant applications: General population distribution overviews Regulatory submissions: specifically required guidelines","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"recommended-workflow","dir":"Articles","previous_headings":"Clinical Applications","what":"Recommended Workflow","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Step 1: Create pie chart if required pie_result <- jjpiestats(   data = clinical_data,   dep = \"primary_outcome\",   typestatistics = \"parametric\" )  # Step 2: ALSO create bar chart alternative bar_result <- jjbarstats(  # Recommended alternative   data = clinical_data,   dep = \"primary_outcome\",   typestatistics = \"parametric\" )  # Step 3: Present both, emphasizing bar chart advantages # Step 4: Use statistical results from either (they're the same)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"Check missing values categorical variables Ensure factor variables valid levels Consider excluding incomplete cases Combine rare categories (frequency <5%) Check factor level definitions Verify data coding consistency Reduce number categories Consider horizontal bar chart alternative Check extremely small slices Check expected cell counts Chi-square tests Use Fisher’s exact test small samples Consider category combination","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"error-handling","dir":"Articles","previous_headings":"Troubleshooting","what":"Error Handling","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"# Example error handling tryCatch({   result <- jjpiestats(     data = my_data,     dep = \"categorical_var\",     typestatistics = \"parametric\"   ) }, error = function(e) {   message(\"Error in pie chart analysis: \", e$message)   message(\"Consider these alternatives:\")   message(\"1. Check factor levels in your data\")   message(\"2. Combine rare categories\")   message(\"3. Use bar charts instead (jjbarstats)\")      # Diagnostic information   cat(\"Data structure:\\n\")   str(my_data)   cat(\"\\nVariable summary:\\n\")   summary(my_data$categorical_var) })"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"key-takeaways","dir":"Articles","previous_headings":"Recommendations and Conclusion","what":"Key Takeaways","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"Performance: optimized jjpiestats provides significant speed improvements caching Functionality: Comprehensive statistical testing multiple approaches Limitations: Pie charts well-documented visualization problems Alternatives: Consider jjbarstats categorical data visualization needs","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"decision-framework","dir":"Articles","previous_headings":"Recommendations and Conclusion","what":"Decision Framework","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"Use pie charts : - ✅ Specifically requested stakeholders - ✅ Part--whole relationship crucial - ✅ ≤5 categories clear differences - ✅ Single time point analysis - ⚠️ Always provide bar chart alternative Use bar charts : - ✅ Comparing values across categories - ✅ >5 categories present - ✅ Scientific publication intended - ✅ Accessibility important - ✅ Precise value reading needed","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"final-recommendation","dir":"Articles","previous_headings":"Recommendations and Conclusion","what":"Final Recommendation","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"jjpiestats function provides optimized, feature-rich pie chart functionality, strongly recommend considering jjbarstats function categorical data visualization needs. statistical analysis capabilities identical, bar charts provide superior readability, comparison ability, accessibility. optimized jjpiestats function best used pie charts specifically required external stakeholders, always providing bar chart alternatives possible.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/28-jjpiestats-comprehensive.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"jjpiestats: Pie Charts with Performance Optimization and Visualization Best Practices","text":"","code":"sessionInfo() ## R version 4.5.1 (2025-06-13) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Tahoe 26.0.1 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Istanbul ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## loaded via a namespace (and not attached): ##  [1] digest_0.6.37     desc_1.4.3        R6_2.6.1          fastmap_1.2.0     ##  [5] xfun_0.53         cachem_1.1.0      knitr_1.50        htmltools_0.5.8.1 ##  [9] rmarkdown_2.29    lifecycle_1.0.4   cli_3.6.5         sass_0.4.10       ## [13] pkgdown_2.1.3     textshaping_1.0.3 jquerylib_0.1.4   systemfonts_1.3.1 ## [17] compiler_4.5.1    tools_4.5.1       ragg_1.5.0        bslib_0.9.0       ## [21] evaluate_1.0.5    yaml_2.3.10       jsonlite_2.0.0    rlang_1.1.6       ## [25] fs_1.6.6          htmlwidgets_1.6.4"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"jjridges function provides comprehensive interface creating ridgeline plots (also known ridge plots joy plots) visualize compare distributions continuous variables across different categorical groups. function built ggplot2 ggridges, offering multiple visualization styles performance optimization internal caching.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"","what":"Key Features","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"Multiple plot styles: Density ridges, histogram ridges, gradient ridges Flexible customization: Height scaling, bandwidth control, color schemes Professional themes: Minimal, classic, dark themes optimized ridgeline plots Performance optimized: Uses internal caching eliminate redundant computations Clinical research ready: Designed biomedical clinical data visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"when-to-use-ridgeline-plots","dir":"Articles","previous_headings":"","what":"When to Use Ridgeline Plots","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"Ridgeline plots particularly effective : Comparing distributions across multiple groups categories Showing distribution shapes (normal, skewed, bimodal, etc.) Revealing overlaps group distributions Temporal analysis (distributions across time periods) Multi-site studies (comparing distributions across centers) Biomarker analysis (expression levels across disease stages)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"","what":"Installation and Setup","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Install ClinicoPath if not already installed library(jjstatsplot)  library(jjstatsplot) library(ggplot2)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"basic-ridgeline-plot","dir":"Articles","previous_headings":"Quick Start","what":"Basic Ridgeline Plot","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Load test data data(jjridges_test_data)  # Basic ridgeline plot result <- jjridges(   data = jjridges_test_data,   dep = \"biomarker_expression\",   group = \"disease_stage\",   plotStyle = \"density\" )  # View the plot result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"customized-ridgeline-plot","dir":"Articles","previous_headings":"Quick Start","what":"Customized Ridgeline Plot","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Customized ridgeline with scaling and colors result_custom <- jjridges(   data = jjridges_test_data,   dep = \"response_score\",   group = \"treatment_group\",   plotStyle = \"gradient\",   scaling = 1.5,   bandwidth = 0.8,   colorscheme = \"viridis\",   fill = TRUE )  # View the plot result_custom$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"histogram-style-ridgeline","dir":"Articles","previous_headings":"Quick Start","what":"Histogram-Style Ridgeline","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Histogram-style ridgeline plot result_hist <- jjridges(   data = jjridges_test_data,   dep = \"lab_value\",   group = \"hospital_center\",   plotStyle = \"histogram\",   binwidth = 5,   scaling = 1.2 )  # View the plot result_hist$plot"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"core-parameters","dir":"Articles","previous_headings":"Function Parameters","what":"Core Parameters","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"data: Input data frame containing variables analyze dep: Continuous numeric variable distribution visualization group: Categorical grouping variable (creates separate ridges)","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"plot-styles","dir":"Articles","previous_headings":"Function Parameters > Plot Style Options","what":"Plot Styles","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"Best continuous data visualization Shows distribution shape clearly Customizable bandwidth smoothness control Good discrete count data Shows exact frequency distributions Controllable bin width Visually striking presentation Color represents x-values Good highlighting distribution characteristics","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"scaling-and-appearance","dir":"Articles","previous_headings":"Function Parameters > Plot Style Options","what":"Scaling and Appearance","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"Values > 1: Taller ridges, possible overlaps Values < 1: Shorter ridges, separation Typical range: 0.5 - 3.0 Higher values: Smoother, wider curves Lower values: detailed, narrower curves applies density gradient styles Smaller values: detailed histograms Larger values: Smoother histograms applies histogram style","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"color-schemes","dir":"Articles","previous_headings":"Function Parameters > Color and Theme Options","what":"Color Schemes","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"“viridis” (default): Colorblind-friendly, perceptually uniform “plasma”: High contrast, warm colors “magma”: Dark background friendly “blues”: Sequential blue palette “custom”: User-specified color","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"theme-styles","dir":"Articles","previous_headings":"Function Parameters > Color and Theme Options","what":"Theme Styles","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"“minimal” (default): Clean ridgeline-specific theme “classic”: Traditional ggplot2 theme borders “dark”: Dark background presentations","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"caching-implementation","dir":"Articles","previous_headings":"Performance Optimizations","what":"Caching Implementation","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"function includes significant performance optimizations: Previous Issues (existed): - Potential redundant data processing - Repeated option parsing - Multiple data cleaning operations Current Optimizations: - Data Caching: Uses .prepareData() method cache processed data - Options Caching: Uses .prepareOptions() method cache option processing - Single Processing: Data cleaned reused - Progress Feedback: Clear user messaging processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"performance-benefits","dir":"Articles","previous_headings":"Performance Optimizations","what":"Performance Benefits","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# The optimized version provides: # - Faster processing for large datasets # - Reduced memory usage # - Better user experience with progress indicators # - Consistent data processing across plot variations"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"clinical-trial-response-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Clinical Trial Response Analysis","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Treatment response distributions response_analysis <- jjridges(   data = jjridges_test_data,   dep = \"response_score\",   group = \"treatment_group\",   plotStyle = \"density\",   scaling = 1.2,   colorscheme = \"viridis\",   mytitle = \"Treatment Response Distribution by Group\",   xtitle = \"Response Score (0-100)\",   ytitle = \"Treatment Group\" )  # This reveals: # - Distribution shapes for each treatment # - Overlap between treatment groups # - Potential bimodal distributions (responders vs non-responders)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"biomarker-progression-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Biomarker Progression Analysis","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Biomarker expression across disease stages biomarker_progression <- jjridges(   data = jjridges_test_data,   dep = \"biomarker_expression\",   group = \"disease_stage\",   plotStyle = \"gradient\",   scaling = 1.0,   bandwidth = 0.6,   colorscheme = \"plasma\",   mytitle = \"Biomarker Expression by Disease Stage\",   xtitle = \"Biomarker Expression (ng/mL)\" )  # This shows: # - Progressive increase in biomarker levels # - Distribution spread at each stage # - Potential diagnostic thresholds"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"multi-center-quality-control","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Multi-Center Quality Control","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Laboratory value distributions across centers lab_qc <- jjridges(   data = jjridges_test_data,   dep = \"lab_value\",   group = \"hospital_center\",   plotStyle = \"density\",   scaling = 0.8,   bandwidth = 1.2,   colorscheme = \"blues\",   mytitle = \"Laboratory Value Distribution by Center\",   xtitle = \"Lab Value (units)\",   ytitle = \"Hospital Center\" )  # This reveals: # - Center-specific calibration differences # - Outlier centers requiring attention # - Overall measurement consistency"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"longitudinal-treatment-response","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Longitudinal Treatment Response","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Symptom severity over time longitudinal_response <- jjridges(   data = jjridges_test_data,   dep = \"symptom_severity\",   group = \"time_period\",   plotStyle = \"density\",   scaling = 1.1,   colorscheme = \"magma\",   mytitle = \"Symptom Severity Distribution Over Time\",   xtitle = \"Symptom Severity Score (0-100)\",   ytitle = \"Time Period\" )  # This demonstrates: # - Treatment response progression # - Distribution shape changes over time # - Patient heterogeneity in response"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"regional-population-differences","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Regional Population Differences","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Inflammatory marker distributions by region population_differences <- jjridges(   data = jjridges_test_data,   dep = \"inflammatory_marker\",   group = \"region\",   plotStyle = \"density\",   scaling = 1.3,   bandwidth = 0.8,   colorscheme = \"viridis\",   mytitle = \"Inflammatory Marker Distribution by Region\",   xtitle = \"Inflammatory Marker (mg/L)\",   ytitle = \"Geographic Region\" )  # This reveals: # - Population-specific baseline differences # - Genetic or environmental influences # - Reference range considerations"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"comparative-plot-styles","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Comparative Plot Styles","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Same data with different plot styles variable_of_interest <- \"response_score\" grouping_variable <- \"treatment_group\"  # Density style density_plot <- jjridges(   data = jjridges_test_data,   dep = variable_of_interest,   group = grouping_variable,   plotStyle = \"density\",   mytitle = \"Density Style Ridgeline\" )  # Histogram style histogram_plot <- jjridges(   data = jjridges_test_data,   dep = variable_of_interest,   group = grouping_variable,   plotStyle = \"histogram\",   binwidth = 3,   mytitle = \"Histogram Style Ridgeline\" )  # Gradient style gradient_plot <- jjridges(   data = jjridges_test_data,   dep = variable_of_interest,   group = grouping_variable,   plotStyle = \"gradient\",   mytitle = \"Gradient Style Ridgeline\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"input-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Input Data Structure","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"input data data frame : Continuous variable: Numeric column ridge visualization Grouping variable: Factor character column separate ridges Reasonable sample size: least 20-30 observations per group Appropriate range: Data meaningful variation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"example-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Example Data Structure","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Structure of test data str(jjridges_test_data)  # Key variables for ridgeline plots: # - biomarker_expression: Log-normal distribution (0.1-50 ng/mL) # - response_score: Normal/bimodal distribution (0-100 scale) # - lab_value: Normal distribution with center effects (20-200 units) # - symptom_severity: Decreasing over time (0-100 scale) # - inflammatory_marker: Gamma distribution (0.5-100 mg/L) # - disease_stage: Ordered factor (Stage I-IV) # - treatment_group: Unordered factor (Control, Treatment A-C) # - hospital_center: Unordered factor (6 centers) # - time_period: Ordered factor (Baseline to Month 12)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"Best Practices","what":"Data Preparation","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"Check data distribution: Ensure adequate sample sizes per group Handle outliers: Consider impact visualization scale Order groups meaningfully: Use ordered factors natural progressions Handle missing data: Understand exclusion impact","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"choosing-plot-style","dir":"Articles","previous_headings":"Best Practices > Visualization Guidelines","what":"Choosing Plot Style","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Use density plots when: # - Data is truly continuous # - Sample sizes are adequate (n > 30 per group) # - Distribution shape is important  # Use histogram plots when: # - Data is discrete or count-based # - Want to show exact frequency information # - Sample sizes are smaller  # Use gradient plots when: # - Creating visually striking presentations # - Distribution location matters as much as shape # - Emphasizing distribution features"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"parameter-selection","dir":"Articles","previous_headings":"Best Practices > Visualization Guidelines","what":"Parameter Selection","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Scaling guidelines: # scaling = 0.5-0.8: Conservative, clear separation # scaling = 1.0: Balanced (default) # scaling = 1.5-2.0: Dramatic overlaps, artistic effect  # Bandwidth guidelines: # bandwidth = 0.3-0.5: Detailed, follows data closely # bandwidth = 1.0: Balanced (default) # bandwidth = 1.5-2.0: Smooth, broad patterns  # Color scheme selection: # viridis: Default, works well everywhere # plasma: High contrast, warm colors # blues: Conservative, publication-friendly # custom: Brand colors or specific requirements"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"what-to-look-for","dir":"Articles","previous_headings":"Best Practices > Interpretation Guidelines","what":"What to Look For","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"Distribution shapes: Normal, skewed, bimodal, multimodal Group differences: Location, spread, shape differences Overlaps: much distributions overlap groups Outliers: Unusual patterns specific groups Sample size effects: Smoother vs jagged ridges","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"common-patterns","dir":"Articles","previous_headings":"Best Practices > Interpretation Guidelines","what":"Common Patterns","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Common clinical patterns in ridgeline plots:  # Disease progression: # - Biomarker levels increase with disease stage # - Distributions become more variable in advanced stages  # Treatment response: # - Control group: Single distribution # - Effective treatment: Shifted distribution # - Heterogeneous response: Bimodal distribution  # Multi-center studies: # - Consistent centers: Similar distributions # - Calibration issues: Shifted means # - Quality problems: Different spreads  # Longitudinal studies: # - Improvement: Progressive shifts # - Response heterogeneity: Changing distribution shapes"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"underlying-functions","dir":"Articles","previous_headings":"Technical Details","what":"Underlying Functions","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"jjridges function built : ggplot2: Core plotting framework ggridges: Specialized ridgeline geometries jmvcore: Data handling option processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"caching-details","dir":"Articles","previous_headings":"Technical Details","what":"Caching Details","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Internal caching structure (conceptual) # private$.processedData: Cached cleaned data with numeric conversion # private$.processedOptions: Cached option processing including titles #  # Benefits: # - Eliminates redundant jmvcore::toNumeric() calls # - Avoids repeated jmvcore::naOmit() operations # - Shares processed data across plot variations # - Optimizes parameter processing"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"dependencies","dir":"Articles","previous_headings":"Technical Details","what":"Dependencies","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Required packages: # - ggplot2: Core plotting # - ggridges: Ridgeline-specific geometries # - jmvcore: jamovi core functionality # - R6: Object-oriented programming # - rlang: Non-standard evaluation"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"research-scenarios","dir":"Articles","previous_headings":"Clinical Applications","what":"Research Scenarios","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"Clinical Trials: Compare primary endpoint distributions across treatment arms Biomarker Studies: Show biomarker level progression across disease stages Quality Control: Monitor laboratory value consistency across sites Longitudinal Studies: Visualize outcome changes time Population Studies: Compare distributions across demographic groups","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"publication-guidelines","dir":"Articles","previous_headings":"Clinical Applications","what":"Publication Guidelines","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# For scientific publications: # - Use minimal theme with clear axis labels # - Choose colorblind-friendly palettes (viridis, plasma) # - Include sample sizes in group labels # - Provide clear figure captions explaining the visualization # - Consider grayscale-friendly colors for print  # Example publication-ready plot: publication_plot <- jjridges(   data = clinical_data,   dep = \"primary_endpoint\",   group = \"treatment_arm\",   plotStyle = \"density\",   scaling = 0.8,   colorscheme = \"viridis\",   themeChoice = \"minimal\",   mytitle = \"Primary Endpoint Distribution by Treatment Arm\",   xtitle = \"Primary Endpoint (units)\",   ytitle = \"Treatment Arm\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"Check missing values continuous variable Ensure grouping variable valid levels Verify data type compatibility Adjust bandwidth parameter Check sample sizes per group Consider histogram style small samples Reduce scaling parameter Consider fewer groups grouping combinations Use minimal theme cleaner appearance Try different color schemes Consider dark theme presentations Test colorblind simulation tools","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"error-handling","dir":"Articles","previous_headings":"Troubleshooting","what":"Error Handling","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Example error handling tryCatch({   result <- jjridges(     data = my_data,     dep = \"continuous_var\",     group = \"group_var\",     plotStyle = \"density\"   ) }, error = function(e) {   message(\"Error in ridgeline plot: \", e$message)   message(\"Check your data structure and variable types\")      # Diagnostic information   cat(\"Data structure:\\n\")   str(my_data)   cat(\"\\nContinuous variable summary:\\n\")   summary(my_data$continuous_var)   cat(\"\\nGrouping variable levels:\\n\")   table(my_data$group_var, useNA = \"ifany\") })"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"performance-considerations","dir":"Articles","previous_headings":"Troubleshooting","what":"Performance Considerations","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# For large datasets: # - Consider sampling for initial exploration # - Use appropriate bandwidth to balance detail vs performance # - Be cautious with very high scaling values # - Monitor memory usage with many groups  # Optimal performance tips: # - Ensure grouping variable is a factor # - Remove unnecessary columns from data # - Use reasonable numbers of groups (< 20 typically)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"when-to-use-ridgeline-plots-vs-alternatives","dir":"Articles","previous_headings":"Comparison with Other Visualizations","what":"When to Use Ridgeline Plots vs Alternatives","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Use ridgeline plots when: # - Comparing distribution shapes across groups # - Showing overlaps between distributions # - Distribution shape is as important as central tendency # - Space-efficient visualization of multiple distributions  # Use box plots when: # - Focus on quartiles and outliers # - Comparing medians across groups # - Space is limited # - Emphasis on summary statistics  # Use violin plots when: # - Distribution shape is important but space is limited # - Combining distribution info with quartiles # - Symmetric layout is preferred  # Use histograms when: # - Single group detailed distribution # - Exact bin counts are important # - Teaching distribution concepts"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"custom-themes-and-styling","dir":"Articles","previous_headings":"Advanced Customization","what":"Custom Themes and Styling","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Advanced styling examples:  # High-contrast presentation theme presentation_plot <- jjridges(   data = jjridges_test_data,   dep = \"biomarker_expression\",   group = \"disease_stage\",   plotStyle = \"gradient\",   scaling = 1.5,   themeChoice = \"dark\",   colorscheme = \"plasma\" )  # Minimal publication theme publication_plot <- jjridges(   data = jjridges_test_data,   dep = \"response_score\",   group = \"treatment_group\",   plotStyle = \"density\",   scaling = 0.8,   themeChoice = \"minimal\",   colorscheme = \"blues\",   fill = FALSE  # Outline only for print )  # Custom color example custom_color_plot <- jjridges(   data = jjridges_test_data,   dep = \"lab_value\",   group = \"hospital_center\",   plotStyle = \"density\",   colorscheme = \"custom\",   customColor = \"#2E8B57\"  # Sea green )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"optimized jjridges function provides: Comprehensive visualization: Multiple styles different data types purposes High performance: Significant speed improvements caching Clinical relevance: Designed biomedical research applications Flexibility: Extensive customization options publication presentation Usability: Clear documentation comprehensive examples Ridgeline plots excel revealing distribution shapes, overlaps, group differences summary statistics alone capture. particularly valuable clinical research comparing treatment effects, biomarker distributions, population characteristics across multiple groups. function well-suited exploratory data analysis, quality control monitoring, clinical trial visualization, scenario requiring detailed comparison distributions across categorical groups.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridges-comprehensive.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"jjridges: Comprehensive Ridgeline Plot Analysis","text":"","code":"sessionInfo() ## R version 4.5.1 (2025-06-13) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Tahoe 26.0.1 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Istanbul ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## loaded via a namespace (and not attached): ##  [1] digest_0.6.37     desc_1.4.3        R6_2.6.1          fastmap_1.2.0     ##  [5] xfun_0.53         cachem_1.1.0      knitr_1.50        htmltools_0.5.8.1 ##  [9] rmarkdown_2.29    lifecycle_1.0.4   cli_3.6.5         sass_0.4.10       ## [13] pkgdown_2.1.3     textshaping_1.0.3 jquerylib_0.1.4   systemfonts_1.3.1 ## [17] compiler_4.5.1    tools_4.5.1       ragg_1.5.0        bslib_0.9.0       ## [21] evaluate_1.0.5    yaml_2.3.10       jsonlite_2.0.0    rlang_1.1.6       ## [25] fs_1.6.6          htmlwidgets_1.6.4"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"jjridgestats function provides comprehensive interface creating ridgeline plots (also known ridge plots joy plots) visualize compare distributions continuous variables across different categorical groups. function built ggplot2 ggridges, offering multiple visualization styles performance optimization internal caching.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"","what":"Key Features","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"Multiple plot styles: Density ridges, histogram ridges, gradient ridges Flexible customization: Height scaling, bandwidth control, color schemes Professional themes: Minimal, classic, dark themes optimized ridgeline plots Performance optimized: Uses internal caching eliminate redundant computations Clinical research ready: Designed biomedical clinical data visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"when-to-use-ridgeline-plots","dir":"Articles","previous_headings":"","what":"When to Use Ridgeline Plots","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"Ridgeline plots particularly effective : Comparing distributions across multiple groups categories Showing distribution shapes (normal, skewed, bimodal, etc.) Revealing overlaps group distributions Temporal analysis (distributions across time periods) Multi-site studies (comparing distributions across centers) Biomarker analysis (expression levels across disease stages)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"","what":"Installation and Setup","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Install ClinicoPath if not already installed library(jjstatsplot)  library(jjstatsplot) library(ggplot2)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"basic-ridgeline-plot","dir":"Articles","previous_headings":"Quick Start","what":"Basic Ridgeline Plot","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Load test data data(jjridgestats_test_data)  # Basic ridgeline plot result <- jjridgestats(   data = jjridgestats_test_data,   dep = \"biomarker_expression\",   group = \"disease_stage\",   plotStyle = \"density\" )  # View the plot result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"customized-ridgeline-plot","dir":"Articles","previous_headings":"Quick Start","what":"Customized Ridgeline Plot","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Customized ridgeline with scaling and colors result_custom <- jjridgestats(   data = jjridgestats_test_data,   dep = \"response_score\",   group = \"treatment_group\",   plotStyle = \"gradient\",   scaling = 1.5,   bandwidth = 0.8,   colorscheme = \"viridis\",   fill = TRUE )  # View the plot result_custom$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"histogram-style-ridgeline","dir":"Articles","previous_headings":"Quick Start","what":"Histogram-Style Ridgeline","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Histogram-style ridgeline plot result_hist <- jjridgestats(   data = jjridgestats_test_data,   dep = \"lab_value\",   group = \"hospital_center\",   plotStyle = \"histogram\",   binwidth = 5,   scaling = 1.2 )  # View the plot result_hist$plot"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"core-parameters","dir":"Articles","previous_headings":"Function Parameters","what":"Core Parameters","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"data: Input data frame containing variables analyze dep: Continuous numeric variable distribution visualization group: Categorical grouping variable (creates separate ridges)","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"plot-styles","dir":"Articles","previous_headings":"Function Parameters > Plot Style Options","what":"Plot Styles","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"Best continuous data visualization Shows distribution shape clearly Customizable bandwidth smoothness control Good discrete count data Shows exact frequency distributions Controllable bin width Visually striking presentation Color represents x-values Good highlighting distribution characteristics","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"scaling-and-appearance","dir":"Articles","previous_headings":"Function Parameters > Plot Style Options","what":"Scaling and Appearance","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"Values > 1: Taller ridges, possible overlaps Values < 1: Shorter ridges, separation Typical range: 0.5 - 3.0 Higher values: Smoother, wider curves Lower values: detailed, narrower curves applies density gradient styles Smaller values: detailed histograms Larger values: Smoother histograms applies histogram style","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"color-schemes","dir":"Articles","previous_headings":"Function Parameters > Color and Theme Options","what":"Color Schemes","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"“viridis” (default): Colorblind-friendly, perceptually uniform “plasma”: High contrast, warm colors “magma”: Dark background friendly “blues”: Sequential blue palette “custom”: User-specified color","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"theme-styles","dir":"Articles","previous_headings":"Function Parameters > Color and Theme Options","what":"Theme Styles","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"“minimal” (default): Clean ridgeline-specific theme “classic”: Traditional ggplot2 theme borders “dark”: Dark background presentations","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"caching-implementation","dir":"Articles","previous_headings":"Performance Optimizations","what":"Caching Implementation","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"function includes significant performance optimizations: Previous Issues (existed): - Potential redundant data processing - Repeated option parsing - Multiple data cleaning operations Current Optimizations: - Data Caching: Uses .prepareData() method cache processed data - Options Caching: Uses .prepareOptions() method cache option processing - Single Processing: Data cleaned reused - Progress Feedback: Clear user messaging processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"performance-benefits","dir":"Articles","previous_headings":"Performance Optimizations","what":"Performance Benefits","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# The optimized version provides: # - Faster processing for large datasets # - Reduced memory usage # - Better user experience with progress indicators # - Consistent data processing across plot variations"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"clinical-trial-response-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Clinical Trial Response Analysis","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Treatment response distributions response_analysis <- jjridgestats(   data = jjridgestats_test_data,   dep = \"response_score\",   group = \"treatment_group\",   plotStyle = \"density\",   scaling = 1.2,   colorscheme = \"viridis\",   mytitle = \"Treatment Response Distribution by Group\",   xtitle = \"Response Score (0-100)\",   ytitle = \"Treatment Group\" )  # This reveals: # - Distribution shapes for each treatment # - Overlap between treatment groups # - Potential bimodal distributions (responders vs non-responders)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"biomarker-progression-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Biomarker Progression Analysis","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Biomarker expression across disease stages biomarker_progression <- jjridgestats(   data = jjridgestats_test_data,   dep = \"biomarker_expression\",   group = \"disease_stage\",   plotStyle = \"gradient\",   scaling = 1.0,   bandwidth = 0.6,   colorscheme = \"plasma\",   mytitle = \"Biomarker Expression by Disease Stage\",   xtitle = \"Biomarker Expression (ng/mL)\" )  # This shows: # - Progressive increase in biomarker levels # - Distribution spread at each stage # - Potential diagnostic thresholds"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"multi-center-quality-control","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Multi-Center Quality Control","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Laboratory value distributions across centers lab_qc <- jjridgestats(   data = jjridgestats_test_data,   dep = \"lab_value\",   group = \"hospital_center\",   plotStyle = \"density\",   scaling = 0.8,   bandwidth = 1.2,   colorscheme = \"blues\",   mytitle = \"Laboratory Value Distribution by Center\",   xtitle = \"Lab Value (units)\",   ytitle = \"Hospital Center\" )  # This reveals: # - Center-specific calibration differences # - Outlier centers requiring attention # - Overall measurement consistency"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"longitudinal-treatment-response","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Longitudinal Treatment Response","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Symptom severity over time longitudinal_response <- jjridgestats(   data = jjridgestats_test_data,   dep = \"symptom_severity\",   group = \"time_period\",   plotStyle = \"density\",   scaling = 1.1,   colorscheme = \"magma\",   mytitle = \"Symptom Severity Distribution Over Time\",   xtitle = \"Symptom Severity Score (0-100)\",   ytitle = \"Time Period\" )  # This demonstrates: # - Treatment response progression # - Distribution shape changes over time # - Patient heterogeneity in response"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"regional-population-differences","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Regional Population Differences","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Inflammatory marker distributions by region population_differences <- jjridgestats(   data = jjridgestats_test_data,   dep = \"inflammatory_marker\",   group = \"region\",   plotStyle = \"density\",   scaling = 1.3,   bandwidth = 0.8,   colorscheme = \"viridis\",   mytitle = \"Inflammatory Marker Distribution by Region\",   xtitle = \"Inflammatory Marker (mg/L)\",   ytitle = \"Geographic Region\" )  # This reveals: # - Population-specific baseline differences # - Genetic or environmental influences # - Reference range considerations"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"comparative-plot-styles","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Comparative Plot Styles","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Same data with different plot styles variable_of_interest <- \"response_score\" grouping_variable <- \"treatment_group\"  # Density style density_plot <- jjridgestats(   data = jjridgestats_test_data,   dep = variable_of_interest,   group = grouping_variable,   plotStyle = \"density\",   mytitle = \"Density Style Ridgeline\" )  # Histogram style histogram_plot <- jjridgestats(   data = jjridgestats_test_data,   dep = variable_of_interest,   group = grouping_variable,   plotStyle = \"histogram\",   binwidth = 3,   mytitle = \"Histogram Style Ridgeline\" )  # Gradient style gradient_plot <- jjridgestats(   data = jjridgestats_test_data,   dep = variable_of_interest,   group = grouping_variable,   plotStyle = \"gradient\",   mytitle = \"Gradient Style Ridgeline\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"input-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Input Data Structure","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"input data data frame : Continuous variable: Numeric column ridge visualization Grouping variable: Factor character column separate ridges Reasonable sample size: least 20-30 observations per group Appropriate range: Data meaningful variation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"example-data-structure","dir":"Articles","previous_headings":"Data Requirements","what":"Example Data Structure","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Structure of test data str(jjridgestats_test_data)  # Key variables for ridgeline plots: # - biomarker_expression: Log-normal distribution (0.1-50 ng/mL) # - response_score: Normal/bimodal distribution (0-100 scale) # - lab_value: Normal distribution with center effects (20-200 units) # - symptom_severity: Decreasing over time (0-100 scale) # - inflammatory_marker: Gamma distribution (0.5-100 mg/L) # - disease_stage: Ordered factor (Stage I-IV) # - treatment_group: Unordered factor (Control, Treatment A-C) # - hospital_center: Unordered factor (6 centers) # - time_period: Ordered factor (Baseline to Month 12)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"Best Practices","what":"Data Preparation","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"Check data distribution: Ensure adequate sample sizes per group Handle outliers: Consider impact visualization scale Order groups meaningfully: Use ordered factors natural progressions Handle missing data: Understand exclusion impact","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"choosing-plot-style","dir":"Articles","previous_headings":"Best Practices > Visualization Guidelines","what":"Choosing Plot Style","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Use density plots when: # - Data is truly continuous # - Sample sizes are adequate (n > 30 per group) # - Distribution shape is important  # Use histogram plots when: # - Data is discrete or count-based # - Want to show exact frequency information # - Sample sizes are smaller  # Use gradient plots when: # - Creating visually striking presentations # - Distribution location matters as much as shape # - Emphasizing distribution features"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"parameter-selection","dir":"Articles","previous_headings":"Best Practices > Visualization Guidelines","what":"Parameter Selection","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Scaling guidelines: # scaling = 0.5-0.8: Conservative, clear separation # scaling = 1.0: Balanced (default) # scaling = 1.5-2.0: Dramatic overlaps, artistic effect  # Bandwidth guidelines: # bandwidth = 0.3-0.5: Detailed, follows data closely # bandwidth = 1.0: Balanced (default) # bandwidth = 1.5-2.0: Smooth, broad patterns  # Color scheme selection: # viridis: Default, works well everywhere # plasma: High contrast, warm colors # blues: Conservative, publication-friendly # custom: Brand colors or specific requirements"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"what-to-look-for","dir":"Articles","previous_headings":"Best Practices > Interpretation Guidelines","what":"What to Look For","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"Distribution shapes: Normal, skewed, bimodal, multimodal Group differences: Location, spread, shape differences Overlaps: much distributions overlap groups Outliers: Unusual patterns specific groups Sample size effects: Smoother vs jagged ridges","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"common-patterns","dir":"Articles","previous_headings":"Best Practices > Interpretation Guidelines","what":"Common Patterns","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Common clinical patterns in ridgeline plots:  # Disease progression: # - Biomarker levels increase with disease stage # - Distributions become more variable in advanced stages  # Treatment response: # - Control group: Single distribution # - Effective treatment: Shifted distribution # - Heterogeneous response: Bimodal distribution  # Multi-center studies: # - Consistent centers: Similar distributions # - Calibration issues: Shifted means # - Quality problems: Different spreads  # Longitudinal studies: # - Improvement: Progressive shifts # - Response heterogeneity: Changing distribution shapes"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"underlying-functions","dir":"Articles","previous_headings":"Technical Details","what":"Underlying Functions","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"jjridgestats function built : ggplot2: Core plotting framework ggridges: Specialized ridgeline geometries jmvcore: Data handling option processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"caching-details","dir":"Articles","previous_headings":"Technical Details","what":"Caching Details","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Internal caching structure (conceptual) # private$.processedData: Cached cleaned data with numeric conversion # private$.processedOptions: Cached option processing including titles #  # Benefits: # - Eliminates redundant jmvcore::toNumeric() calls # - Avoids repeated jmvcore::naOmit() operations # - Shares processed data across plot variations # - Optimizes parameter processing"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"dependencies","dir":"Articles","previous_headings":"Technical Details","what":"Dependencies","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Required packages: # - ggplot2: Core plotting # - ggridges: Ridgeline-specific geometries # - jmvcore: jamovi core functionality # - R6: Object-oriented programming # - rlang: Non-standard evaluation"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"research-scenarios","dir":"Articles","previous_headings":"Clinical Applications","what":"Research Scenarios","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"Clinical Trials: Compare primary endpoint distributions across treatment arms Biomarker Studies: Show biomarker level progression across disease stages Quality Control: Monitor laboratory value consistency across sites Longitudinal Studies: Visualize outcome changes time Population Studies: Compare distributions across demographic groups","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"publication-guidelines","dir":"Articles","previous_headings":"Clinical Applications","what":"Publication Guidelines","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# For scientific publications: # - Use minimal theme with clear axis labels # - Choose colorblind-friendly palettes (viridis, plasma) # - Include sample sizes in group labels # - Provide clear figure captions explaining the visualization # - Consider grayscale-friendly colors for print  # Example publication-ready plot: publication_plot <- jjridgestats(   data = clinical_data,   dep = \"primary_endpoint\",   group = \"treatment_arm\",   plotStyle = \"density\",   scaling = 0.8,   colorscheme = \"viridis\",   themeChoice = \"minimal\",   mytitle = \"Primary Endpoint Distribution by Treatment Arm\",   xtitle = \"Primary Endpoint (units)\",   ytitle = \"Treatment Arm\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"Check missing values continuous variable Ensure grouping variable valid levels Verify data type compatibility Adjust bandwidth parameter Check sample sizes per group Consider histogram style small samples Reduce scaling parameter Consider fewer groups grouping combinations Use minimal theme cleaner appearance Try different color schemes Consider dark theme presentations Test colorblind simulation tools","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"error-handling","dir":"Articles","previous_headings":"Troubleshooting","what":"Error Handling","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Example error handling tryCatch({   result <- jjridgestats(     data = my_data,     dep = \"continuous_var\",     group = \"group_var\",     plotStyle = \"density\"   ) }, error = function(e) {   message(\"Error in ridgeline plot: \", e$message)   message(\"Check your data structure and variable types\")      # Diagnostic information   cat(\"Data structure:\\n\")   str(my_data)   cat(\"\\nContinuous variable summary:\\n\")   summary(my_data$continuous_var)   cat(\"\\nGrouping variable levels:\\n\")   table(my_data$group_var, useNA = \"ifany\") })"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"performance-considerations","dir":"Articles","previous_headings":"Troubleshooting","what":"Performance Considerations","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# For large datasets: # - Consider sampling for initial exploration # - Use appropriate bandwidth to balance detail vs performance # - Be cautious with very high scaling values # - Monitor memory usage with many groups  # Optimal performance tips: # - Ensure grouping variable is a factor # - Remove unnecessary columns from data # - Use reasonable numbers of groups (< 20 typically)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"when-to-use-ridgeline-plots-vs-alternatives","dir":"Articles","previous_headings":"Comparison with Other Visualizations","what":"When to Use Ridgeline Plots vs Alternatives","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Use ridgeline plots when: # - Comparing distribution shapes across groups # - Showing overlaps between distributions # - Distribution shape is as important as central tendency # - Space-efficient visualization of multiple distributions  # Use box plots when: # - Focus on quartiles and outliers # - Comparing medians across groups # - Space is limited # - Emphasis on summary statistics  # Use violin plots when: # - Distribution shape is important but space is limited # - Combining distribution info with quartiles # - Symmetric layout is preferred  # Use histograms when: # - Single group detailed distribution # - Exact bin counts are important # - Teaching distribution concepts"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"custom-themes-and-styling","dir":"Articles","previous_headings":"Advanced Customization","what":"Custom Themes and Styling","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"# Advanced styling examples:  # High-contrast presentation theme presentation_plot <- jjridgestats(   data = jjridgestats_test_data,   dep = \"biomarker_expression\",   group = \"disease_stage\",   plotStyle = \"gradient\",   scaling = 1.5,   themeChoice = \"dark\",   colorscheme = \"plasma\" )  # Minimal publication theme publication_plot <- jjridgestats(   data = jjridgestats_test_data,   dep = \"response_score\",   group = \"treatment_group\",   plotStyle = \"density\",   scaling = 0.8,   themeChoice = \"minimal\",   colorscheme = \"blues\",   fill = FALSE  # Outline only for print )  # Custom color example custom_color_plot <- jjridgestats(   data = jjridgestats_test_data,   dep = \"lab_value\",   group = \"hospital_center\",   plotStyle = \"density\",   colorscheme = \"custom\",   customColor = \"#2E8B57\"  # Sea green )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"optimized jjridgestats function provides: Comprehensive visualization: Multiple styles different data types purposes High performance: Significant speed improvements caching Clinical relevance: Designed biomedical research applications Flexibility: Extensive customization options publication presentation Usability: Clear documentation comprehensive examples Ridgeline plots excel revealing distribution shapes, overlaps, group differences summary statistics alone capture. particularly valuable clinical research comparing treatment effects, biomarker distributions, population characteristics across multiple groups. function well-suited exploratory data analysis, quality control monitoring, clinical trial visualization, scenario requiring detailed comparison distributions across categorical groups.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/29-jjridgestats-comprehensive.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"jjridgestats: Comprehensive Ridgeline Plot Analysis","text":"","code":"sessionInfo() ## R version 4.5.1 (2025-06-13) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Tahoe 26.0.1 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Istanbul ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## loaded via a namespace (and not attached): ##  [1] digest_0.6.37     desc_1.4.3        R6_2.6.1          fastmap_1.2.0     ##  [5] xfun_0.53         cachem_1.1.0      knitr_1.50        htmltools_0.5.8.1 ##  [9] rmarkdown_2.29    lifecycle_1.0.4   cli_3.6.5         sass_0.4.10       ## [13] pkgdown_2.1.3     textshaping_1.0.3 jquerylib_0.1.4   systemfonts_1.3.1 ## [17] compiler_4.5.1    tools_4.5.1       ragg_1.5.0        bslib_0.9.0       ## [21] evaluate_1.0.5    yaml_2.3.10       jsonlite_2.0.0    rlang_1.1.6       ## [25] fs_1.6.6          htmlwidgets_1.6.4"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"jjriverplot function provides comprehensive interface creating river plots (alluvial diagrams), Sankey diagrams, stream graphs visualize flows, transitions, pathways time categories. function built ggplot2 ggalluvial, offering multiple visualization styles performance optimization internal caching.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"","what":"Key Features","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"Multiple plot types: Alluvial diagrams, Sankey diagrams, stream graphs Flexible data formats: Supports longitudinal (long) cross-sectional (wide) data Weight integration: Stream widths can represent quantities like costs, counts, frequencies Rich customization: Fill patterns, curve types, labeling options, themes Performance optimized: Uses internal caching eliminate redundant computations Clinical research ready: Designed patient pathway treatment flow analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"when-to-use-river-plots","dir":"Articles","previous_headings":"","what":"When to Use River Plots","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"River plots excel visualizing: Patient treatment pathways: Response changes time Customer journey analysis: Funnel progression conversion flows Educational progressions: Student performance tracking stages Process flows: Manufacturing, approval, workflow stages Market transitions: Brand switching, category migration Longitudinal studies: categorical changes time","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"","what":"Installation and Setup","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Install ClinicoPath if not already installed library(jjstatsplot)  library(jjstatsplot) library(ggplot2)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"basic-alluvial-plot-longitudinal-data","dir":"Articles","previous_headings":"Quick Start","what":"Basic Alluvial Plot (Longitudinal Data)","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Load test data data(jjriverplot_test_data_long)  # Basic treatment response flow over time result <- jjriverplot(   data = jjriverplot_test_data_long,   time = \"timepoint\",   strata = \"treatment_response\",   plotType = \"alluvial\" )  # View the plot result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"weighted-river-plot","dir":"Articles","previous_headings":"Quick Start","what":"Weighted River Plot","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# River plot with treatment costs as weights result_weighted <- jjriverplot(   data = jjriverplot_test_data_long,   time = \"timepoint\",   strata = \"treatment_response\",   weight = \"treatment_cost\",   plotType = \"alluvial\",   labelNodes = TRUE,   showCounts = TRUE )  # View the plot result_weighted$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"multi-stage-pathway-wide-format","dir":"Articles","previous_headings":"Quick Start","what":"Multi-Stage Pathway (Wide Format)","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Load wide format data data(jjriverplot_test_data_wide)  # Multi-stage treatment pathway result_pathway <- jjriverplot(   data = jjriverplot_test_data_wide,   strata = c(\"month3_response\", \"month6_response\", \"month12_response\"),   plotType = \"sankey\",   fillType = \"first\",   mytitle = \"Treatment Response Pathway\" )  # View the plot result_pathway$plot"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"core-parameters","dir":"Articles","previous_headings":"Function Parameters","what":"Core Parameters","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"data: Input data frame containing variables analyze time: Time sequence variable (longitudinal data) strata: Categorical variables representing flow categories weight: Optional numeric variable stream width weighting id: Optional identifier tracking individual entities","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"alluvial-diagrams","dir":"Articles","previous_headings":"Function Parameters > Plot Types","what":"Alluvial Diagrams","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"Best : - Longitudinal studies: Patient outcomes treatment periods - Cohort tracking: Changes group membership time - Transition analysis: Movement categories","code":"# Alluvial plots show flowing streams between time points # - Curved connections emphasize continuity # - Stream width represents frequency or quantity # - Good for tracking changes in categorical variables over time"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"sankey-diagrams","dir":"Articles","previous_headings":"Function Parameters > Plot Types","what":"Sankey Diagrams","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"Best : - Process analysis: Manufacturing approval workflows - Resource allocation: Budget flows, staff assignments - Multi-stage conversions: Sales funnels, patient triage","code":"# Sankey diagrams show directed flows between stages # - Straighter connections emphasize flow direction # - Node width represents total flow through that stage # - Good for process flows and sequential decision points"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"stream-graphs","dir":"Articles","previous_headings":"Function Parameters > Plot Types","what":"Stream Graphs","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"Best : - Composition analysis: Market share changes time - Population studies: Demographic changes - Portfolio analysis: Investment allocations time","code":"# Stream graphs show stacked area plots over time # - Shows composition changes continuously # - Total height represents overall volume # - Good for showing relative proportions over time"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"fill-patterns","dir":"Articles","previous_headings":"Function Parameters > Customization Options","what":"Fill Patterns","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"“first”: Colors based initial category (track origins) “last”: Colors based final category (track destinations) “frequency”: Colors based flow volume (emphasize major flows)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"curve-types","dir":"Articles","previous_headings":"Function Parameters > Customization Options","what":"Curve Types","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"“cardinal”: Smooth flowing curves (aesthetic) “linear”: Straight connections (clearest direction) “basis”: smooth curves (artistic) “step”: Stepped connections (discrete processes)","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"caching-implementation","dir":"Articles","previous_headings":"Performance Optimizations","what":"Caching Implementation","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"function includes significant performance optimizations: Previous Issues: - Redundant data processing plot method - Repeated factor conversion operations - Multiple jmvcore::naOmit() calls - Complex option processing repeated Current Optimizations: - Data Caching: Uses .prepareData() method cache processed data - Options Caching: Uses .prepareOptions() method cache option processing - Factor Conversion: Variables converted cached - Progress Feedback: Clear user messaging processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"performance-benefits","dir":"Articles","previous_headings":"Performance Optimizations","what":"Performance Benefits","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# The optimized version provides: # - Faster processing for large datasets # - Reduced memory usage through single data processing # - Better user experience with progress indicators # - Consistent data handling across plot variations"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"clinical-trial-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Clinical Trial Analysis","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Treatment response progression over time clinical_pathway <- jjriverplot(   data = jjriverplot_test_data_long,   time = \"timepoint\",   strata = \"treatment_response\",   weight = \"treatment_cost\",   plotType = \"alluvial\",   fillType = \"first\",   labelNodes = TRUE,   mytitle = \"Patient Treatment Response Pathways\",   xtitle = \"Study Timepoint\",   ytitle = \"Treatment Cost ($)\" )  # This reveals: # - How patient responses change over time # - Cost implications of different response patterns # - Treatment effectiveness across timepoints"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"quality-of-life-progression","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Quality of Life Progression","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Quality of life changes alongside treatment response qol_flow <- jjriverplot(   data = jjriverplot_test_data_long,   time = \"timepoint\",    strata = \"quality_of_life\",   plotType = \"alluvial\",   fillType = \"last\",   curveType = \"cardinal\",   mytitle = \"Quality of Life Progression\",   xtitle = \"Study Period\",   ytitle = \"Patient Count\" )  # This shows: # - Patient quality of life trajectories # - Correlation with treatment responses # - Long-term outcome patterns"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"treatment-arm-comparison","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Treatment Arm Comparison","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Compare pathways by treatment arm using wide format treatment_comparison <- jjriverplot(   data = jjriverplot_test_data_wide,   strata = c(\"month3_response\", \"month6_response\", \"month12_response\"),   plotType = \"sankey\",   fillType = \"first\",   showCounts = TRUE,   mytitle = \"Treatment Response Progression by Stage\" )  # Filter by treatment arm for separate analysis control_data <- jjriverplot_test_data_wide[   jjriverplot_test_data_wide$treatment_arm == \"Control\", ]  control_pathway <- jjriverplot(   data = control_data,   strata = c(\"month3_response\", \"month6_response\", \"month12_response\"),   plotType = \"sankey\",   mytitle = \"Control Group Response Pathway\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"educational-journey-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Educational Journey Analysis","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Load education data data(jjriverplot_education_data)  # Student performance progression education_flow <- jjriverplot(   data = jjriverplot_education_data,   strata = c(\"year1_performance\", \"year2_performance\",               \"year3_performance\", \"final_outcome\"),   plotType = \"alluvial\",   fillType = \"last\",   labelNodes = TRUE,   mytitle = \"Student Academic Progression\",   xtitle = \"Academic Year\",   ytitle = \"Student Count\" )  # This reveals: # - Academic performance trajectories # - Points of student attrition # - Success pathway identification"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"marketing-funnel-analysis","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Marketing Funnel Analysis","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Load marketing data   data(jjriverplot_marketing_data)  # Customer journey through marketing funnel marketing_funnel <- jjriverplot(   data = jjriverplot_marketing_data,   strata = c(\"awareness\", \"interest\", \"consideration\",               \"purchase\", \"loyalty\"),   weight = \"purchase_value\",   plotType = \"sankey\",   fillType = \"last\",   showCounts = TRUE,   mytitle = \"Customer Journey Analysis\",   xtitle = \"Funnel Stage\",   ytitle = \"Customer Value ($)\" )  # This shows: # - Conversion rates between stages # - Value-weighted customer flows # - Drop-off points in the funnel"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"multi-site-quality-control","dir":"Articles","previous_headings":"Advanced Usage Examples","what":"Multi-Site Quality Control","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Analyze treatment consistency across hospital centers site_analysis <- jjriverplot(   data = jjriverplot_test_data_long,   time = \"timepoint\",   strata = \"treatment_response\",   plotType = \"alluvial\",   fillType = \"first\",   mytitle = \"Treatment Response Patterns Across All Sites\" )  # Compare specific high-performing vs low-performing sites high_performing_sites <- c(\"Center_A\", \"Center_B\") site_subset <- jjriverplot_test_data_long[   jjriverplot_test_data_long$hospital_center %in% high_performing_sites, ]  site_comparison <- jjriverplot(   data = site_subset,   time = \"timepoint\",   strata = \"treatment_response\",   weight = \"treatment_cost\",   plotType = \"alluvial\",   mytitle = \"High-Performing Sites: Treatment Pathways\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"long-format-longitudinal-data","dir":"Articles","previous_headings":"Data Requirements > Data Formats","what":"Long Format (Longitudinal Data)","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Structure for longitudinal river plots # Required columns: # - time: factor with ordered levels (e.g., \"Baseline\", \"Month_3\", \"Month_6\") # - strata: factor with category levels (e.g., \"Complete_Response\", \"Partial_Response\") # - Optional: weight (numeric), id (factor)  example_long <- data.frame(   patient_id = rep(c(\"P001\", \"P002\"), each = 3),   timepoint = factor(rep(c(\"T1\", \"T2\", \"T3\"), times = 2)),   response = factor(c(\"Good\", \"Good\", \"Excellent\",                       \"Poor\", \"Fair\", \"Good\")),   cost = c(1000, 1200, 800, 1500, 1300, 1100) )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"wide-format-cross-sectional-stages","dir":"Articles","previous_headings":"Data Requirements > Data Formats","what":"Wide Format (Cross-Sectional Stages)","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Structure for multi-stage river plots # Required: multiple strata variables representing sequential stages # Optional: weight variable, demographic variables  example_wide <- data.frame(   id = paste0(\"ID\", 1:100),   stage1 = factor(sample(c(\"A\", \"B\", \"C\"), 100, replace = TRUE)),   stage2 = factor(sample(c(\"X\", \"Y\", \"Z\"), 100, replace = TRUE)),   stage3 = factor(sample(c(\"Success\", \"Failure\"), 100, replace = TRUE)),   total_value = runif(100, 100, 1000) )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"data-quality-requirements","dir":"Articles","previous_headings":"Data Requirements","what":"Data Quality Requirements","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# For optimal river plots: # 1. Adequate sample sizes (n > 50 recommended) # 2. Reasonable number of categories (2-8 per variable) # 3. Meaningful category names (not just codes) # 4. Proper factor ordering for time variables # 5. Complete cases (missing values are excluded)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"plot-type-selection","dir":"Articles","previous_headings":"Best Practices","what":"Plot Type Selection","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Use Alluvial plots when: # - Tracking changes over time # - Emphasizing flow continuity # - Showing patient/customer journeys # - Time points are clearly defined  # Use Sankey diagrams when:   # - Analyzing process flows # - Emphasizing directed flows # - Decision tree visualization # - Resource allocation analysis  # Use Stream graphs when: # - Showing composition over time # - Continuous time variable # - Relative proportions important # - Market share analysis"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"color-and-fill-strategy","dir":"Articles","previous_headings":"Best Practices","what":"Color and Fill Strategy","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# fillType selection: # - \"first\": Track where flows originated (good for source analysis) # - \"last\": Track where flows end up (good for outcome analysis)   # - \"frequency\": Emphasize major flows (good for identifying patterns)  # Examples: # Treatment analysis: use \"first\" to track initial response groups # Outcome analysis: use \"last\" to track final outcomes # Process optimization: use \"frequency\" to identify bottlenecks"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"labeling-and-clarity","dir":"Articles","previous_headings":"Best Practices","what":"Labeling and Clarity","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# For clear river plots: # 1. Use meaningful variable names and category labels # 2. Enable node labels for interpretation (labelNodes = TRUE) # 3. Show counts for quantitative analysis (showCounts = TRUE) # 4. Provide clear axis labels and titles # 5. Consider legend positioning based on plot complexity  # Avoid overwhelming plots: # - Limit to 6-8 categories per variable # - Combine rare categories when appropriate # - Use clear, contrasting colors # - Consider split plots for complex data"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"subset-analysis","dir":"Articles","previous_headings":"Advanced Techniques","what":"Subset Analysis","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Analyze specific subgroups for detailed insights # Example: High-cost patients only high_cost_patients <- jjriverplot_test_data_long[   jjriverplot_test_data_long$treatment_cost > 5000, ]  high_cost_analysis <- jjriverplot(   data = high_cost_patients,   time = \"timepoint\",   strata = \"treatment_response\",   weight = \"treatment_cost\",   plotType = \"alluvial\",   mytitle = \"High-Cost Patient Pathways\" )  # Example: By demographic groups elderly_patients <- jjriverplot_test_data_long[   jjriverplot_test_data_long$age_group == \"75+\", ]  elderly_analysis <- jjriverplot(   data = elderly_patients,   time = \"timepoint\",    strata = \"treatment_response\",   plotType = \"alluvial\",   mytitle = \"Elderly Patient Treatment Pathways\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"comparative-analysis","dir":"Articles","previous_headings":"Advanced Techniques","what":"Comparative Analysis","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Compare different treatments side by side treatment_groups <- c(\"Treatment_A\", \"Treatment_B\")  for (treatment in treatment_groups) {   subset_data <- jjriverplot_test_data_long[     jjriverplot_test_data_long$treatment_arm == treatment, ]      plot_result <- jjriverplot(     data = subset_data,     time = \"timepoint\",     strata = \"treatment_response\",      plotType = \"alluvial\",     mytitle = paste(\"Pathways for\", treatment)   )      # Save or display each plot   print(plot_result$plot) }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"quality-control-applications","dir":"Articles","previous_headings":"Advanced Techniques","what":"Quality Control Applications","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Multi-center consistency analysis center_comparison <- function(center_id) {   center_data <- jjriverplot_test_data_long[     jjriverplot_test_data_long$hospital_center == center_id, ]      jjriverplot(     data = center_data,     time = \"timepoint\",     strata = \"treatment_response\",     plotType = \"alluvial\",     mytitle = paste(\"Treatment Patterns -\", center_id),     labelNodes = TRUE,     showCounts = TRUE   ) }  # Analyze each center centers <- unique(jjriverplot_test_data_long$hospital_center) center_plots <- lapply(centers[1:3], center_comparison)  # First 3 centers"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"underlying-functions","dir":"Articles","previous_headings":"Technical Details","what":"Underlying Functions","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"jjriverplot function built : ggplot2: Core plotting framework ggalluvial: Specialized alluvial diagram geometries dplyr: Data manipulation aggregation jmvcore: Data handling option processing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"caching-details","dir":"Articles","previous_headings":"Technical Details","what":"Caching Details","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Internal caching structure (conceptual) # private$.processedData: Cached cleaned data with factor conversion # private$.processedOptions: Cached option processing including titles #  # Benefits: # - Eliminates redundant factor conversion calls # - Avoids repeated jmvcore::naOmit() operations # - Shares processed data across plot variations # - Optimizes complex conditional logic processing"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"dependencies","dir":"Articles","previous_headings":"Technical Details","what":"Dependencies","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Required packages: # - ggplot2: Core plotting # - ggalluvial: Alluvial-specific geometries # - dplyr: Data manipulation (group_by, summarize) # - jmvcore: jamovi core functionality # - R6: Object-oriented programming # - rlang: Non-standard evaluation"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"research-scenarios","dir":"Articles","previous_headings":"Clinical Applications","what":"Research Scenarios","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"Clinical Trials: Track patient responses across treatment periods Quality Improvement: Monitor care pathway adherence Cost Analysis: Visualize resource utilization flows Epidemiology: Study disease progression patterns Health Services: Analyze patient flow care systems","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"publication-guidelines","dir":"Articles","previous_headings":"Clinical Applications","what":"Publication Guidelines","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# For scientific publications: # - Use clear, descriptive titles and axis labels # - Include sample sizes in figure captions # - Choose colorblind-friendly fill patterns # - Provide detailed methodology in methods section # - Consider grayscale compatibility for print journals  # Example publication-ready plot: publication_plot <- jjriverplot(   data = clinical_data,   time = \"study_timepoint\",   strata = \"response_category\",   weight = \"patient_count\",   plotType = \"alluvial\",   fillType = \"first\",   labelNodes = TRUE,   showLegend = TRUE,   mytitle = \"Patient Response Trajectories (N = 600)\",   xtitle = \"Study Timepoint\",   ytitle = \"Number of Patients\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"Check missing values required variables Ensure factor variables valid levels Verify data filtering hasn’t excluded observations Check factor level definitions ordering Verify time variable properly formatted Ensure categories exist multiple time points Reduce number categories grouping Disable labels (labelNodes = FALSE) complex plots Consider using counts instead labels Adjust plot size settings Use weight variable emphasize important flows Consider filtering show major pathways","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"error-handling","dir":"Articles","previous_headings":"Troubleshooting","what":"Error Handling","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Example error handling tryCatch({   result <- jjriverplot(     data = my_data,     time = \"time_var\",     strata = \"category_var\",     plotType = \"alluvial\"   ) }, error = function(e) {   message(\"Error in river plot: \", e$message)   message(\"Check your data structure and variable types\")      # Diagnostic information   cat(\"Data structure:\\n\")   str(my_data)   cat(\"\\nTime variable levels:\\n\")   print(levels(my_data$time_var))   cat(\"\\nCategory variable levels:\\n\")   print(levels(my_data$category_var)) })"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"performance-considerations","dir":"Articles","previous_headings":"Troubleshooting","what":"Performance Considerations","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# For large datasets: # - Consider sampling for initial exploration # - Group rare categories to reduce complexity # - Use weight variables to highlight important flows # - Monitor memory usage with very wide datasets  # Optimal performance tips: # - Ensure categorical variables are factors # - Use meaningful factor level ordering # - Remove unnecessary columns from data # - Balance detail with readability"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"what-river-plots-reveal","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"What River Plots Reveal","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# River plots effectively show: # 1. Transition patterns: How categories change over time # 2. Flow volumes: Relative sizes of different pathways # 3. Stability: Which categories remain constant # 4. Convergence: Multiple paths leading to same outcome # 5. Divergence: Single starting points leading to multiple outcomes  # Key interpretation elements: # - Stream width = quantity/frequency # - Stream color = category grouping (based on fillType) # - Node height = total volume at that stage # - Flow crossings = category transitions"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"common-patterns","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Common Patterns","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Clinical research patterns:  # Treatment response progression: # - Stable flows: Consistent responders # - Improving flows: Treatment success # - Declining flows: Treatment failure # - Complex flows: Mixed responses  # Patient journey analysis: # - Funnel patterns: Progressive selection # - Retention patterns: Stable participation # - Dropout patterns: Loss to follow-up # - Recovery patterns: Improvement over time"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"when-to-use-river-plots-vs-alternatives","dir":"Articles","previous_headings":"Comparison with Other Visualizations","what":"When to Use River Plots vs Alternatives","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"# Use river plots when: # - Tracking categorical changes over time # - Showing flow volumes and transitions # - Multiple pathways need visualization # - Process or journey analysis required  # Use line plots when: # - Continuous variables over time # - Trends and patterns are focus # - Statistical relationships important # - Precise values needed  # Use bar charts when: # - Single time point comparisons # - Exact values are important # - Categories don't flow/transition # - Simple frequency distributions  # Use heatmaps when: # - Showing correlation patterns # - Matrix-style data relationships # - Intensity rather than flow important # - Compact representation needed"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"optimized jjriverplot function provides: Comprehensive flow visualization: Multiple plot types different analytical needs High performance: Significant speed improvements caching Clinical relevance: Designed healthcare pathway outcome analysis Flexibility: Extensive customization options publication presentation Usability: Clear documentation comprehensive examples River plots excel revealing transition patterns, pathway volumes, flow dynamics traditional static visualizations capture. particularly valuable clinical research tracking patient journeys, treatment responses, outcome progressions time. function well-suited longitudinal studies, quality improvement initiatives, clinical trial analysis, scenario requiring visualization categorical transitions flows defined stages time points.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-jjriverplot-comprehensive.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"jjriverplot: Comprehensive River Plot and Flow Visualization","text":"","code":"sessionInfo() ## R version 4.5.1 (2025-06-13) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Tahoe 26.0.1 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Istanbul ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## loaded via a namespace (and not attached): ##  [1] digest_0.6.37     desc_1.4.3        R6_2.6.1          fastmap_1.2.0     ##  [5] xfun_0.53         cachem_1.1.0      knitr_1.50        htmltools_0.5.8.1 ##  [9] rmarkdown_2.29    lifecycle_1.0.4   cli_3.6.5         sass_0.4.10       ## [13] pkgdown_2.1.3     textshaping_1.0.3 jquerylib_0.1.4   systemfonts_1.3.1 ## [17] compiler_4.5.1    tools_4.5.1       ragg_1.5.0        bslib_0.9.0       ## [21] evaluate_1.0.5    yaml_2.3.10       jsonlite_2.0.0    rlang_1.1.6       ## [25] fs_1.6.6          htmlwidgets_1.6.4"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"what-are-line-charts","dir":"Articles","previous_headings":"Introduction to Line Charts in Clinical Research","what":"What are Line Charts?","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Line charts fundamental visualization tools display data points connected straight line segments, making ideal showing trends changes time ordered categories. clinical pathological research, line charts essential : Longitudinal studies: Tracking patient outcomes time Treatment monitoring: Visualizing response interventions Biomarker evolution: Following laboratory values disease markers Quality metrics: Monitoring healthcare performance indicators Dose-response relationships: Understanding therapeutic relationships","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"key-advantages","dir":"Articles","previous_headings":"Introduction to Line Charts in Clinical Research > What are Line Charts?","what":"Key Advantages","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Trend Identification: Easily spot increasing, decreasing, stable patterns Comparative Analysis: Compare multiple groups treatments simultaneously Time Series Visualization: Perfect longitudinal follow-studies Statistical Integration: Combine trend lines, confidence intervals, correlations Clinical Communication: Intuitive format presenting clinicians patients","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"ideal-clinical-scenarios","dir":"Articles","previous_headings":"Introduction to Line Charts in Clinical Research > When to Use Line Charts","what":"Ideal Clinical Scenarios","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Laboratory Values Time: Hemoglobin, tumor markers, inflammatory indices Treatment Response Monitoring: Blood pressure, pain scores, functional assessments Disease Progression: Tumor size, cognitive decline, symptom severity Quality Improvement: Infection rates, readmission rates, patient satisfaction Dose-Response Studies: Efficacy toxicity versus drug concentration","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"data-requirements","dir":"Articles","previous_headings":"Introduction to Line Charts in Clinical Research > When to Use Line Charts","what":"Data Requirements","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"X-axis: Time points, visit numbers, ordered categories Y-axis: Continuous numeric outcomes (laboratory values, scores, measurements) Optional Grouping: Treatment arms, patient populations, hospital units Minimum Data: least 3 time points meaningful trend analysis","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"linear-trends","dir":"Articles","previous_headings":"Statistical Background > Trend Analysis Methods","what":"Linear Trends","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Line charts can incorporate linear regression identify overall trends: Y=β0+β1×Time+ϵY = \\beta_0 + \\beta_1 \\times Time + \\epsilon : - β1\\beta_1 represents rate change per time unit - Positive β1\\beta_1: improving/increasing trend - Negative β1\\beta_1: declining/decreasing trend","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"correlation-analysis","dir":"Articles","previous_headings":"Statistical Background > Trend Analysis Methods","what":"Correlation Analysis","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"relationship time outcome can quantified using: Pearson correlation: linear relationships Spearman correlation: monotonic (rank-based) relationships R-squared: Proportion variance explained time","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"confidence-intervals","dir":"Articles","previous_headings":"Statistical Background > Trend Analysis Methods","what":"Confidence Intervals","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Line charts can display uncertainty around trends: - Standard error bands: Show precision line - Confidence intervals: Typically 95% CI around trend - Prediction intervals: Bounds future observations","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"trend-magnitude","dir":"Articles","previous_headings":"Statistical Background > Clinical Interpretation Guidelines","what":"Trend Magnitude","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Clinical Interpretation Trend Magnitude","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"correlation-strength","dir":"Articles","previous_headings":"Statistical Background > Clinical Interpretation Guidelines","what":"Correlation Strength","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Correlation Strength Interpretation","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"example-1-hemoglobin-monitoring-during-cancer-treatment","dir":"Articles","previous_headings":"Clinical Examples","what":"Example 1: Hemoglobin Monitoring During Cancer Treatment","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"example demonstrates monitoring anemia treatment cancer patients receiving erythropoietin (EPO) therapy.","code":"# Create realistic hemoglobin data set.seed(123) n_patients <- 90 n_visits <- 6 visit_weeks <- c(0, 2, 4, 8, 12, 16)  # Generate patient data hemoglobin_data <- expand.grid(   patient_id = paste0(\"P\", sprintf(\"%03d\", 1:n_patients)),   visit_week = visit_weeks ) %>%   left_join(     data.frame(       patient_id = paste0(\"P\", sprintf(\"%03d\", 1:n_patients)),       treatment_group = sample(c(\"Control\", \"EPO_Low\", \"EPO_High\"), n_patients,                                replace = TRUE, prob = c(0.3, 0.4, 0.3)),       baseline_hgb = rnorm(n_patients, mean = 9.5, sd = 1.2)     ),     by = \"patient_id\"   ) %>%   arrange(patient_id, visit_week)  # Generate hemoglobin trajectories hemoglobin_data$hemoglobin_g_dl <- NA  for (i in 1:nrow(hemoglobin_data)) {   week <- hemoglobin_data$visit_week[i]   treatment <- hemoglobin_data$treatment_group[i]   baseline <- hemoglobin_data$baseline_hgb[i]      # Treatment-specific trends   if (treatment == \"Control\") {     trend <- -0.03 * week + rnorm(1, 0, 0.3)   } else if (treatment == \"EPO_Low\") {     trend <- 0.08 * week + rnorm(1, 0, 0.25)   } else {     trend <- 0.12 * week + rnorm(1, 0, 0.2)   }      hemoglobin_data$hemoglobin_g_dl[i] <- baseline + trend }  # Ensure realistic ranges hemoglobin_data$hemoglobin_g_dl <- pmax(6, pmin(16, hemoglobin_data$hemoglobin_g_dl)) hemoglobin_data$hemoglobin_g_dl <- round(hemoglobin_data$hemoglobin_g_dl, 1)  # Display data structure str(hemoglobin_data) #> 'data.frame':    540 obs. of  5 variables: #>  $ patient_id     : chr  \"P001\" \"P001\" \"P001\" \"P001\" ... #>  $ visit_week     : num  0 2 4 8 12 16 0 2 4 8 ... #>  $ treatment_group: chr  \"EPO_Low\" \"EPO_Low\" \"EPO_Low\" \"EPO_Low\" ... #>  $ baseline_hgb   : num  8.15 8.15 8.15 8.15 8.15 ... #>  $ hemoglobin_g_dl: num  8.4 7.9 8.7 9.3 8.8 9.6 8.9 8.5 8.4 8.3 ... #>  - attr(*, \"out.attrs\")=List of 2 #>   ..$ dim     : Named int [1:2] 90 6 #>   .. ..- attr(*, \"names\")= chr [1:2] \"patient_id\" \"visit_week\" #>   ..$ dimnames:List of 2 #>   .. ..$ patient_id: chr [1:90] \"patient_id=P001\" \"patient_id=P002\" \"patient_id=P003\" \"patient_id=P004\" ... #>   .. ..$ visit_week: chr [1:6] \"visit_week= 0\" \"visit_week= 2\" \"visit_week= 4\" \"visit_week= 8\" ... head(hemoglobin_data, 12) #>    patient_id visit_week treatment_group baseline_hgb hemoglobin_g_dl #> 1        P001          0         EPO_Low     8.152270             8.4 #> 2        P001          2         EPO_Low     8.152270             7.9 #> 3        P001          4         EPO_Low     8.152270             8.7 #> 4        P001          8         EPO_Low     8.152270             9.3 #> 5        P001         12         EPO_Low     8.152270             8.8 #> 6        P001         16         EPO_Low     8.152270             9.6 #> 7        P002          0         Control     9.016538             8.9 #> 8        P002          2         Control     9.016538             8.5 #> 9        P002          4         Control     9.016538             8.4 #> 10       P002          8         Control     9.016538             8.3 #> 11       P002         12         Control     9.016538             8.5 #> 12       P002         16         Control     9.016538             8.1"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"running-line-chart-analysis","dir":"Articles","previous_headings":"Clinical Examples > Example 1: Hemoglobin Monitoring During Cancer Treatment","what":"Running Line Chart Analysis","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"# In jamovi, you would select: # Analyses → JJStatsPlot → Line Chart  # Programmatically (if running in R): hemoglobin_result <- linechart(   data = hemoglobin_data,   xvar = \"visit_week\",   yvar = \"hemoglobin_g_dl\",   groupby = \"treatment_group\",   confidence = TRUE,   trendline = TRUE,   points = TRUE,   refline = 12,   reflineLabel = \"Normal Lower Limit\",   xlabel = \"Weeks Since Treatment Start\",   ylabel = \"Hemoglobin (g/dL)\",   title = \"Hemoglobin Response to EPO Treatment\",   colorPalette = \"clinical\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"expected-clinical-results","dir":"Articles","previous_headings":"Clinical Examples > Example 1: Hemoglobin Monitoring During Cancer Treatment","what":"Expected Clinical Results","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Control group: Slight decline stable low values EPO Low dose: Gradual improvement time EPO High dose: Steeper improvement, reaching normal range Strong positive correlation EPO groups (r > 0.7) Weak negative correlation control group Significant trend p-values treatment groups EPO therapy effectively treats cancer-related anemia Higher doses provide faster hemoglobin recovery Reference line helps identify patients reaching normal range","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"example-2-blood-pressure-response-to-interventions","dir":"Articles","previous_headings":"Clinical Examples","what":"Example 2: Blood Pressure Response to Interventions","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"example shows hypertension management comparing lifestyle interventions, medications, combined therapy.","code":"# Create blood pressure monitoring data set.seed(456) n_subjects <- 75 n_months <- 8 months <- 0:(n_months-1)  bp_data <- expand.grid(   subject_id = paste0(\"BP\", sprintf(\"%03d\", 1:n_subjects)),   month = months ) %>%   left_join(     data.frame(       subject_id = paste0(\"BP\", sprintf(\"%03d\", 1:n_subjects)),       intervention = sample(c(\"Lifestyle\", \"Medication\", \"Combined\"), n_subjects,                             replace = TRUE, prob = c(0.35, 0.35, 0.3)),       baseline_sbp = rnorm(n_subjects, mean = 155, sd = 15)     ),     by = \"subject_id\"   ) %>%   arrange(subject_id, month)  # Generate systolic BP trajectories bp_data$systolic_bp <- NA  for (i in 1:nrow(bp_data)) {   month <- bp_data$month[i]   intervention <- bp_data$intervention[i]   baseline <- bp_data$baseline_sbp[i]      # Intervention-specific effects   if (intervention == \"Lifestyle\") {     reduction <- 2 * sqrt(month) + rnorm(1, 0, 2)   } else if (intervention == \"Medication\") {     reduction <- ifelse(month <= 3, 8 * (month / 3), 8 + 2 * ((month - 3) / 5)) + rnorm(1, 0, 3)   } else {     reduction <- ifelse(month <= 2, 6 * (month / 2), 6 + 8 * ((month - 2) / 6)) + rnorm(1, 0, 2)   }      bp_data$systolic_bp[i] <- baseline - reduction }  # Ensure realistic ranges bp_data$systolic_bp <- pmax(90, pmin(200, bp_data$systolic_bp)) bp_data$systolic_bp <- round(bp_data$systolic_bp)  # Display summary cat(\"Blood Pressure Study Summary:\\n\") #> Blood Pressure Study Summary: cat(\"Subjects:\", length(unique(bp_data$subject_id)), \"\\n\") #> Subjects: 75 cat(\"Interventions:\", paste(unique(bp_data$intervention), collapse = \", \"), \"\\n\") #> Interventions: Medication, Combined, Lifestyle cat(\"Baseline SBP range:\", min(bp_data[bp_data$month == 0, \"systolic_bp\"]), \"-\",      max(bp_data[bp_data$month == 0, \"systolic_bp\"]), \"mmHg\\n\") #> Baseline SBP range: 113 - 192 mmHg cat(\"Final SBP range:\", min(bp_data[bp_data$month == max(bp_data$month), \"systolic_bp\"]), \"-\",      max(bp_data[bp_data$month == max(bp_data$month), \"systolic_bp\"]), \"mmHg\\n\") #> Final SBP range: 101 - 187 mmHg"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"blood-pressure-analysis-setup","dir":"Articles","previous_headings":"Clinical Examples > Example 2: Blood Pressure Response to Interventions","what":"Blood Pressure Analysis Setup","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"bp_result <- linechart(   data = bp_data,   xvar = \"month\",   yvar = \"systolic_bp\",   groupby = \"intervention\",   confidence = TRUE,   trendline = TRUE,   refline = 140,   reflineLabel = \"Hypertension Threshold\",   xlabel = \"Months Since Intervention Start\",   ylabel = \"Systolic Blood Pressure (mmHg)\",   title = \"Blood Pressure Response to Different Interventions\",   colorPalette = \"colorblind\",   theme = \"publication\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"expected-clinical-findings","dir":"Articles","previous_headings":"Clinical Examples > Example 2: Blood Pressure Response to Interventions","what":"Expected Clinical Findings","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Lifestyle: Gradual, sustained reduction Medication: Rapid initial improvement, plateau Combined: Best overall reduction combining benefits Time reach target BP (<140 mmHg) Magnitude reduction baseline Sustainability improvements","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"example-3-biomarker-response-to-immunotherapy","dir":"Articles","previous_headings":"Clinical Examples","what":"Example 3: Biomarker Response to Immunotherapy","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"example tracks inflammatory biomarkers (IL-6, TNF-α) cancer immunotherapy assess treatment response.","code":"# Create biomarker immunotherapy data set.seed(789) n_patients <- 45 visit_days <- c(0, 21, 42, 84, 126, 168)  biomarker_data <- expand.grid(   patient_id = paste0(\"IMM\", sprintf(\"%03d\", 1:n_patients)),   visit_day = visit_days ) %>%   left_join(     data.frame(       patient_id = paste0(\"IMM\", sprintf(\"%03d\", 1:n_patients)),       response_type = sample(c(\"Responder\", \"Non_Responder\", \"Progressive\"), n_patients,                             replace = TRUE, prob = c(0.4, 0.35, 0.25)),       baseline_il6 = rlnorm(n_patients, meanlog = 2, sdlog = 0.8)     ),     by = \"patient_id\"   ) %>%   arrange(patient_id, visit_day)  # Generate IL-6 trajectories biomarker_data$il6_pg_ml <- NA  for (i in 1:nrow(biomarker_data)) {   day <- biomarker_data$visit_day[i]   response <- biomarker_data$response_type[i]   baseline <- biomarker_data$baseline_il6[i]      # Response-specific patterns   if (response == \"Responder\") {     factor <- exp(-0.003 * day) * (1 + rnorm(1, 0, 0.2))   } else if (response == \"Non_Responder\") {     factor <- 1 + 0.1 * sin(day / 50) * (1 + rnorm(1, 0, 0.3))   } else {     factor <- 1 + 0.002 * day * (1 + rnorm(1, 0, 0.4))   }      biomarker_data$il6_pg_ml[i] <- baseline * factor }  # Ensure positive values biomarker_data$il6_pg_ml <- pmax(0.1, pmin(100, biomarker_data$il6_pg_ml)) biomarker_data$il6_pg_ml <- round(biomarker_data$il6_pg_ml, 2)  # Calculate summary by response type response_summary <- biomarker_data %>%   filter(visit_day %in% c(0, 168)) %>%   select(patient_id, response_type, visit_day, il6_pg_ml) %>%   tidyr::pivot_wider(names_from = visit_day, values_from = il6_pg_ml, names_prefix = \"day_\") %>%   mutate(percent_change = round(100 * (day_168 - day_0) / day_0, 1)) %>%   group_by(response_type) %>%   summarise(     n = n(),     mean_baseline = round(mean(day_0, na.rm = TRUE), 1),     mean_final = round(mean(day_168, na.rm = TRUE), 1),     mean_change = round(mean(percent_change, na.rm = TRUE), 1),     .groups = 'drop'   )  print(response_summary) #> # A tibble: 3 × 5 #>   response_type     n mean_baseline mean_final mean_change #>   <chr>         <int>         <dbl>      <dbl>       <dbl> #> 1 Non_Responder    18           9.4        9.2        -2.3 #> 2 Progressive       5           8         10.8        37.2 #> 3 Responder        22           9.6        7.4       -29"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"biomarker-analysis","dir":"Articles","previous_headings":"Clinical Examples > Example 3: Biomarker Response to Immunotherapy","what":"Biomarker Analysis","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"biomarker_result <- linechart(   data = biomarker_data,   xvar = \"visit_day\",   yvar = \"il6_pg_ml\",    groupby = \"response_type\",   confidence = TRUE,   smooth = TRUE,  # Use smoothed lines for biomarker data   xlabel = \"Days Since Treatment Start\",   ylabel = \"IL-6 (pg/mL)\",   title = \"IL-6 Response Patterns During Immunotherapy\",   colorPalette = \"viridis\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"clinical-biomarker-interpretation","dir":"Articles","previous_headings":"Clinical Examples > Example 3: Biomarker Response to Immunotherapy","what":"Clinical Biomarker Interpretation","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Responders: Progressive decline inflammatory markers Non-responders: Stable levels minimal change Progressive disease: Increasing inflammatory activity Early biomarker changes may predict long-term response Useful treatment modification decisions Complement imaging clinical assessments","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"standard-error-vs--confidence-intervals","dir":"Articles","previous_headings":"Advanced Line Chart Features > Confidence Intervals and Uncertainty","what":"Standard Error vs. Confidence Intervals","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Clinical Applications: - Uncertainty quantification: Show precision measurements - Group comparisons: Overlapping CI suggests similar trends - Sample size effects: Wider CI smaller groups - Statistical significance: Non-overlapping CI indicates differences","code":"# Line chart with confidence intervals result <- linechart(   data = clinical_data,   xvar = \"time_point\",   yvar = \"biomarker_level\",   groupby = \"treatment\",   confidence = TRUE,     # Shows 95% CI around lines   smooth = FALSE,        # Linear vs. smoothed confidence bands   theme = \"publication\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"normal-ranges-and-target-values","dir":"Articles","previous_headings":"Advanced Line Chart Features > Reference Lines and Clinical Thresholds","what":"Normal Ranges and Target Values","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Common Clinical References: - Laboratory normal ranges: Hemoglobin, liver enzymes, kidney function - Blood pressure targets: <140/90 mmHg hypertension - Pain score thresholds: ≤3/10 adequate pain control - Quality metrics: Infection rates, readmission benchmarks","code":"# Add clinical reference lines result <- linechart(   data = lab_data,   xvar = \"visit_week\",    yvar = \"hemoglobin_g_dl\",   refline = 12,                    # Normal hemoglobin threshold   reflineLabel = \"Normal Range\",   # Clear clinical labeling   title = \"Hemoglobin Monitoring with Clinical Targets\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"linear-vs--non-linear-trends","dir":"Articles","previous_headings":"Advanced Line Chart Features > Statistical Trend Analysis","what":"Linear vs. Non-linear Trends","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Use : - Linear trends: Constant rate change, dose-response relationships - Smoothed trends: Complex patterns, seasonal effects, non-linear responses","code":"# Compare linear and smoothed trends linear_result <- linechart(   data = longitudinal_data,   xvar = \"time\",   yvar = \"outcome\",    trendline = TRUE,    # Linear regression line   smooth = FALSE       # Straight line connections )  smooth_result <- linechart(   data = longitudinal_data,   xvar = \"time\",   yvar = \"outcome\",   smooth = TRUE,       # LOESS smoothing   confidence = TRUE    # Smoothed confidence bands )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"treatment-response-monitoring","dir":"Articles","previous_headings":"Clinical Applications by Specialty > Oncology Applications","what":"Treatment Response Monitoring","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Oncology Line Chart Applications","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"key-clinical-insights","dir":"Articles","previous_headings":"Clinical Applications by Specialty > Oncology Applications","what":"Key Clinical Insights","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Early response prediction: Biomarker changes predict long-term outcomes Treatment optimization: Adjust therapy based trends Quality life: Balance efficacy patient-reported outcomes","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"cardiovascular-risk-management","dir":"Articles","previous_headings":"Clinical Applications by Specialty > Cardiology Applications","what":"Cardiovascular Risk Management","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Cardiology Monitoring Applications","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"icu-monitoring-and-outcomes","dir":"Articles","previous_headings":"Clinical Applications by Specialty > Critical Care Applications","what":"ICU Monitoring and Outcomes","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Critical Care Line Chart Applications","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"time-variable-standardization","dir":"Articles","previous_headings":"Best Practices for Clinical Line Charts > Data Preparation Guidelines","what":"1. Time Variable Standardization","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"# Standardize time points for multi-site studies clinical_data <- clinical_data %>%   mutate(     # Convert visit dates to study days     study_day = as.numeric(visit_date - enrollment_date),          # Group irregular visits into windows     visit_window = case_when(       study_day <= 7 ~ \"Week 1\",       study_day <= 28 ~ \"Month 1\",        study_day <= 84 ~ \"Month 3\",       study_day <= 168 ~ \"Month 6\",       TRUE ~ \"Later\"     ),          # Handle missing values appropriately     outcome_clean = ifelse(is.na(lab_value), NA, lab_value)   )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"missing-data-strategies","dir":"Articles","previous_headings":"Best Practices for Clinical Line Charts > Data Preparation Guidelines","what":"2. Missing Data Strategies","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"# Handle missing data patterns missing_analysis <- clinical_data %>%   group_by(patient_id) %>%   summarise(     n_visits = n(),     n_missing = sum(is.na(primary_outcome)),     last_visit = max(study_day, na.rm = TRUE),     dropout_pattern = case_when(       n_missing == 0 ~ \"Complete\",       n_missing < n_visits/2 ~ \"Sporadic missing\",       last_visit < 168 ~ \"Early dropout\",       TRUE ~ \"Late dropout\"     )   )  # Visualize missing patterns missing_plot <- linechart(   data = clinical_data,   xvar = \"study_day\",   yvar = \"primary_outcome\",   groupby = \"dropout_pattern\",   title = \"Outcome by Missing Data Pattern\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"outlier-management","dir":"Articles","previous_headings":"Best Practices for Clinical Line Charts > Data Preparation Guidelines","what":"3. Outlier Management","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"# Identify and handle outliers clinical_data <- clinical_data %>%   group_by(visit_week) %>%   mutate(     # Calculate z-scores within time points     z_score = abs(scale(lab_value)[,1]),          # Flag extreme outliers     outlier_flag = z_score > 3,          # Winsorize extreme values     lab_value_winsorized = case_when(       z_score > 3 ~ quantile(lab_value, 0.95, na.rm = TRUE),       z_score < -3 ~ quantile(lab_value, 0.05, na.rm = TRUE),       TRUE ~ lab_value     )   ) %>%   ungroup()"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"color-and-theme-selection","dir":"Articles","previous_headings":"Best Practices for Clinical Line Charts > Visualization Design Principles","what":"1. Color and Theme Selection","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"# Clinical publication-ready themes publication_chart <- linechart(   data = clinical_data,   xvar = \"time_point\",   yvar = \"biomarker\",   groupby = \"treatment\",   colorPalette = \"colorblind\",  # Accessible to colorblind readers   theme = \"publication\",        # Clean, professional appearance   xlabel = \"Time (weeks)\",   ylabel = \"Biomarker Level (units)\",   title = \"Treatment Response Over Time\" )  # Specialty-specific color schemes cardiology_chart <- linechart(   data = bp_data,   colorPalette = \"clinical\",    # Red/blue for medical contexts   refline = 140,   reflineLabel = \"Hypertension Threshold\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"axis-and-label-optimization","dir":"Articles","previous_headings":"Best Practices for Clinical Line Charts > Visualization Design Principles","what":"2. Axis and Label Optimization","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"# Optimize for clinical communication optimized_chart <- linechart(   data = clinical_data,   xvar = \"visit_month\",   yvar = \"hemoglobin_g_dl\",      # Clear, clinical labels   xlabel = \"Months Since Treatment Initiation\",   ylabel = \"Hemoglobin (g/dL)\",   title = \"Hemoglobin Response to Iron Supplementation\",      # Reference lines for clinical context   refline = 12,   reflineLabel = \"Normal Lower Limit (Women)\",      # Appropriate size for presentations   width = 800,   height = 600 )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"correlation-and-trend-reporting","dir":"Articles","previous_headings":"Best Practices for Clinical Line Charts > Statistical Reporting Standards","what":"1. Correlation and Trend Reporting","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"# Extract statistical results for reporting trend_analysis <- linechart(   data = longitudinal_data,   xvar = \"time\",   yvar = \"outcome\",   trendline = TRUE )  # Report format for publications: # \"Hemoglobin levels showed a significant positive correlation with time  # (r = 0.78, 95% CI: 0.65-0.87, p < 0.001), with an average increase  # of 0.45 g/dL per month (95% CI: 0.32-0.58).\""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"group-comparison-reporting","dir":"Articles","previous_headings":"Best Practices for Clinical Line Charts > Statistical Reporting Standards","what":"2. Group Comparison Reporting","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"# Compare trends between groups group_analysis <- linechart(   data = treatment_data,   xvar = \"weeks\",   yvar = \"pain_score\",    groupby = \"treatment_arm\",   trendline = TRUE )  # Report format: # \"Pain scores decreased significantly in both treatment groups over 12 weeks.  # The experimental group showed a steeper decline (slope = -0.8 points/week,  # r = -0.85, p < 0.001) compared to control (slope = -0.3 points/week,  # r = -0.62, p = 0.003).\""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"irregular-time-points","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"1. Irregular Time Points","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Problem: Clinical visits don’t occur regular intervals Solutions:","code":"# Option 1: Use actual visit times irregular_chart <- linechart(   data = visit_data,   xvar = \"actual_visit_day\",  # Use actual times   yvar = \"lab_result\",   smooth = TRUE              # Smooth over irregular intervals )  # Option 2: Standardize to visit windows standardized_data <- visit_data %>%   mutate(     visit_period = case_when(       actual_visit_day <= 10 ~ \"Baseline\",       actual_visit_day <= 35 ~ \"Month 1\",       actual_visit_day <= 95 ~ \"Month 3\",       TRUE ~ \"Month 6\"     )   )  window_chart <- linechart(   data = standardized_data,   xvar = \"visit_period\",   yvar = \"lab_result\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"highly-variable-data","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"2. Highly Variable Data","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Problem: Large fluctuations obscure underlying trends Solutions:","code":"# Use smoothed lines for noisy data smooth_chart <- linechart(   data = noisy_data,   xvar = \"time\",   yvar = \"variable_outcome\",   smooth = TRUE,             # LOESS smoothing   confidence = TRUE,         # Show uncertainty   points = FALSE             # Hide individual points )  # Alternative: Moving averages smoothed_data <- noisy_data %>%   arrange(patient_id, time_point) %>%   group_by(patient_id) %>%   mutate(     moving_avg = zoo::rollmean(outcome, k = 3, fill = NA, align = \"center\")   ) %>%   ungroup()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"multiple-y-variables","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"3. Multiple Y-Variables","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Problem: Want show multiple related outcomes Solutions:","code":"# Option 1: Standardize to z-scores standardized_data <- clinical_data %>%   mutate(     sbp_z = as.numeric(scale(systolic_bp)),     dbp_z = as.numeric(scale(diastolic_bp))   ) %>%   tidyr::pivot_longer(     cols = c(sbp_z, dbp_z),     names_to = \"bp_type\",     values_to = \"z_score\"   )  multi_outcome_chart <- linechart(   data = standardized_data,   xvar = \"visit_month\",   yvar = \"z_score\",   groupby = \"bp_type\",   ylabel = \"Standardized Blood Pressure (Z-score)\" )  # Option 2: Separate charts with same scale sbp_chart <- linechart(data = bp_data, xvar = \"month\", yvar = \"systolic_bp\") dbp_chart <- linechart(data = bp_data, xvar = \"month\", yvar = \"diastolic_bp\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"small-sample-sizes","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"4. Small Sample Sizes","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Problem: patients time points Solutions:","code":"# Emphasize individual trajectories small_sample_chart <- linechart(   data = pilot_data,   xvar = \"time\",   yvar = \"outcome\",    points = TRUE,           # Show all data points   confidence = FALSE,      # Don't show CI with small n   smooth = FALSE,          # Use straight lines   title = \"Individual Patient Trajectories (n=8)\" )  # Consider spaghetti plots for individual patients individual_chart <- linechart(   data = pilot_data,   xvar = \"time\",   yvar = \"outcome\",   groupby = \"patient_id\",  # Each patient as separate line   theme = \"minimal\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"figure-preparation-checklist","dir":"Articles","previous_headings":"Publication and Presentation Guidelines > Journal Submission Standards","what":"Figure Preparation Checklist","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"# Publication-ready line chart publication_figure <- linechart(   data = study_data,   xvar = \"time_weeks\",   yvar = \"primary_endpoint\",   groupby = \"treatment_arm\",      # Professional appearance   theme = \"publication\",   colorPalette = \"colorblind\",      # Appropriate sizing   width = 800,   # Suitable for 2-column format   height = 600,      # Clear labeling   xlabel = \"Time (weeks)\",   ylabel = \"Primary Endpoint (units)\",   title = \"\",    # Usually caption provides title      # Statistical elements   confidence = TRUE,   trendline = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"essential-figure-elements","dir":"Articles","previous_headings":"Publication and Presentation Guidelines > Journal Submission Standards","what":"Essential Figure Elements","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Clear axes labels units Legible font sizes (minimum 10pt) Colorblind-friendly palettes Statistical information (p-values, confidence intervals) Sample sizes group time point Reference lines clinical thresholds","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"caption-writing-guidelines","dir":"Articles","previous_headings":"Publication and Presentation Guidelines > Journal Submission Standards","what":"Caption Writing Guidelines","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"Figure 1. Treatment response over time by intervention group.  Line chart showing mean (±95% CI) primary endpoint values over  24 weeks of follow-up. Control group (n=45, blue), Intervention  group (n=43, red). Dotted horizontal line indicates clinical  significance threshold (threshold value). P-values from linear  mixed-effects models comparing slopes between groups."},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"audience-specific-design","dir":"Articles","previous_headings":"Publication and Presentation Guidelines > Presentation Best Practices","what":"1. Audience-Specific Design","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"","code":"# For clinical audiences clinical_presentation <- linechart(   data = clinical_data,   colorPalette = \"clinical\",   theme = \"classic\",      # Larger fonts for projection   width = 1000,   height = 700,      # Clear reference lines   refline = clinical_threshold,   reflineLabel = \"Clinical Target\" )  # For research conferences research_presentation <- linechart(   data = research_data,   theme = \"publication\",   confidence = TRUE,        # Show statistical rigor   trendline = TRUE,   colorPalette = \"viridis\"  # Professional color scheme )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"interactive-elements","dir":"Articles","previous_headings":"Publication and Presentation Guidelines > Presentation Best Practices","what":"2. Interactive Elements","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"presentations interaction possible: Hover information: Display exact values sample sizes Group toggle: Allow showing/hiding specific treatment groups Time range selection: Focus specific periods interest Statistical overlay: Toggle trend lines confidence intervals","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Line charts powerful tools clinical research visualization enable:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"key-clinical-applications","dir":"Articles","previous_headings":"Conclusion","what":"Key Clinical Applications","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Longitudinal Analysis: Track patient outcomes time Treatment Monitoring: Assess intervention effectiveness Biomarker Evolution: Follow disease progression markers Quality Improvement: Monitor healthcare performance metrics Comparative Research: Compare treatments populations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"statistical-capabilities","dir":"Articles","previous_headings":"Conclusion","what":"Statistical Capabilities","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Trend Analysis: Linear non-linear pattern detection Correlation Assessment: Quantify time-outcome relationships Confidence Intervals: Display uncertainty precision Group Comparisons: Statistical comparison trends","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"best-practices-summary","dir":"Articles","previous_headings":"Conclusion","what":"Best Practices Summary","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Design audience: Clinical vs. research presentations Include clinical context: Reference lines thresholds Handle missing data: Transparent reporting dropout patterns Statistical rigor: Report correlations, confidence intervals, p-values Professional appearance: Publication-ready formatting","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/30-linechart-comprehensive.html","id":"future-directions","dir":"Articles","previous_headings":"Conclusion","what":"Future Directions","title":"Line Charts for Clinical Time Series and Trend Analysis","text":"Real-time monitoring: Integration electronic health records Predictive modeling: Combine trends machine learning Patient-specific trajectories: Personalized medicine applications Multi-outcome visualization: Simultaneous monitoring related endpoints linechart function ClinicoPath provides researchers clinicians comprehensive tool creating publication-quality visualizations effectively communicate temporal patterns treatment effects clinical data. information ClinicoPath visualization tools clinical data analysis, visit package documentation tutorials.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"what-is-predictive-power-score-pps","dir":"Articles","previous_headings":"Introduction","what":"What is Predictive Power Score (PPS)?","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Predictive Power Score (PPS) modern metric detects linear non-linear relationships variables using machine learning. Unlike traditional correlation analysis, PPS: Detects non-linear relationships correlation misses Works mixed data types (numeric, categorical) Provides asymmetric scores (X→Y may differ Y→X) Uses machine learning robust relationship detection Ranges 0 (predictive power) 1 (perfect prediction)","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"the-jpps-function","dir":"Articles","previous_headings":"Introduction","what":"The jpps Function","title":"Predictive Power Score (PPS) Analysis with jpps","text":"jpps() function ClinicoPath provides comprehensive interface PPS analysis four analysis types: Single: One predictor → one target Predictors: Multiple predictors → one target Matrix: variables → variables Compare: PPS vs correlation comparison","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Predictive Power Score (PPS) Analysis with jpps","text":"","code":"# Load required packages library(jjstatsplot) library(dplyr) library(ggplot2)  # Set random seed for reproducibility set.seed(20250707)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"quick-example","dir":"Articles","previous_headings":"Getting Started","what":"Quick Example","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Let’s start simple example showing PPS detecting non-linear relationship: demonstrates PPS can detect quadratic relationship x y_quadratic.","code":"# Create data with non-linear relationship data <- data.frame(   x = seq(-3, 3, length.out = 50),   y_linear = 2 * seq(-3, 3, length.out = 50) + rnorm(50, 0, 0.5),   y_quadratic = seq(-3, 3, length.out = 50)^2 + rnorm(50, 0, 0.5) )  # Analyze with PPS result <- jpps(   data = data,   analysis_type = \"predictors\",   target_var = \"y_quadratic\",   predictor_vars = c(\"x\"),   algorithm = \"tree\" )  # View results result"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"single-predictor-analysis","dir":"Articles","previous_headings":"Analysis Types","what":"Single Predictor Analysis","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Use want analyze one specific predictor-target relationship:","code":"# Create test data single_data <- data.frame(   sales = c(100, 150, 120, 180, 140, 200, 160, 220, 180, 250),   advertising = c(5, 8, 6, 10, 7, 12, 9, 13, 10, 15) )  # Single predictor analysis single_result <- jpps(   data = single_data,   analysis_type = \"single\",   target_var = \"sales\",   predictor_var = \"advertising\",   algorithm = \"auto\" )  single_result"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"multiple-predictors-analysis","dir":"Articles","previous_headings":"Analysis Types","what":"Multiple Predictors Analysis","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Use identify best predictors target variable:","code":"# Create business data business_data <- data.frame(   revenue = rnorm(40, 1000, 200),   marketing_spend = rnorm(40, 50, 15),   employee_count = round(rnorm(40, 25, 8)),   customer_satisfaction = rnorm(40, 4.2, 0.8),   market_share = rnorm(40, 15, 5) )  # Multiple predictors analysis predictors_result <- jpps(   data = business_data,   analysis_type = \"predictors\",   target_var = \"revenue\",   predictor_vars = c(\"marketing_spend\", \"employee_count\", \"customer_satisfaction\", \"market_share\"),   sort_results = \"pps_desc\",   show_summary = TRUE )  predictors_result"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"matrix-analysis","dir":"Articles","previous_headings":"Analysis Types","what":"Matrix Analysis","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Use comprehensive relationship exploration variables:","code":"# Create correlation matrix data matrix_data <- data.frame(   var1 = rnorm(30, 50, 10),   var2 = rnorm(30, 100, 20),   var3 = rnorm(30, 25, 5),   var4 = rnorm(30, 75, 15) ) %>%   mutate(     # Create some relationships     var2 = var2 + 0.5 * var1,  # Linear relationship     var3 = var1^0.5 + rnorm(30, 0, 2),  # Non-linear relationship     var4 = ifelse(var1 > 50, var4 + 20, var4)  # Threshold relationship   )  # Matrix analysis with heatmap matrix_result <- jpps(   data = matrix_data,   analysis_type = \"matrix\",   matrix_vars = c(\"var1\", \"var2\", \"var3\", \"var4\"),   show_heatmap = TRUE,   color_scheme = \"viridis\",   show_values_on_plot = TRUE )  matrix_result"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"comparison-analysis","dir":"Articles","previous_headings":"Analysis Types","what":"Comparison Analysis","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Use compare PPS correlation identify PPS provides additional insights:","code":"# Create data where PPS outperforms correlation comparison_data <- data.frame(   x = runif(50, -3, 3) ) %>%   mutate(     linear_rel = 0.8 * x + rnorm(50, 0, 0.5),      # High correlation, high PPS     quadratic_rel = x^2 + rnorm(50, 0, 0.5),       # Low correlation, high PPS     no_rel = rnorm(50, 0, 1)                       # Low correlation, low PPS   )  # Comparison analysis comparison_result <- jpps(   data = comparison_data,   analysis_type = \"compare\",   matrix_vars = c(\"x\", \"linear_rel\", \"quadratic_rel\", \"no_rel\"),   show_correlation_comparison = TRUE,   correlation_method = \"pearson\" )  comparison_result"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"algorithm-options","dir":"Articles","previous_headings":"","what":"Algorithm Options","title":"Predictive Power Score (PPS) Analysis with jpps","text":"PPS supports three algorithms, different strengths:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"decision-tree-algorithm","dir":"Articles","previous_headings":"Algorithm Options","what":"Decision Tree Algorithm","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Best : Interpretable results, categorical variables, threshold relationships","code":"# Data with clear thresholds threshold_data <- data.frame(   income = runif(40, 20000, 100000),   age = round(runif(40, 25, 65)) ) %>%   mutate(     loan_approved = factor(ifelse(income > 50000 & age > 30, \"Yes\", \"No\"))   )  tree_result <- jpps(   data = threshold_data,   analysis_type = \"single\",   target_var = \"loan_approved\",   predictor_var = \"income\",   algorithm = \"tree\" )  tree_result"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"random-forest-algorithm","dir":"Articles","previous_headings":"Algorithm Options","what":"Random Forest Algorithm","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Best : Complex relationships, mixed data types, high accuracy","code":"forest_result <- jpps(   data = threshold_data,   analysis_type = \"single\",    target_var = \"loan_approved\",   predictor_var = \"income\",   algorithm = \"forest\" )  forest_result"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"auto-algorithm","dir":"Articles","previous_headings":"Algorithm Options","what":"Auto Algorithm","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Best : General use, automatic algorithm selection","code":"auto_result <- jpps(   data = threshold_data,   analysis_type = \"single\",   target_var = \"loan_approved\",    predictor_var = \"income\",   algorithm = \"auto\" )  auto_result"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"mixed-data-types","dir":"Articles","previous_headings":"Working with Different Data Types","what":"Mixed Data Types","title":"Predictive Power Score (PPS) Analysis with jpps","text":"PPS excels mixed categorical numerical data:","code":"# Create mixed data mixed_data <- data.frame(   # Categorical variables   education = factor(sample(c(\"High School\", \"Bachelor\", \"Master\", \"PhD\"), 60, replace = TRUE)),   department = factor(sample(c(\"Sales\", \"Marketing\", \"Engineering\", \"HR\"), 60, replace = TRUE)),      # Numerical variables   experience_years = round(runif(60, 0, 20)),   performance_score = rnorm(60, 75, 15) ) %>%   mutate(     # Salary influenced by education and experience     salary = case_when(       education == \"PhD\" ~ 80000 + experience_years * 3000 + rnorm(sum(education == \"PhD\"), 0, 5000),       education == \"Master\" ~ 60000 + experience_years * 2500 + rnorm(sum(education == \"Master\"), 0, 4000),       education == \"Bachelor\" ~ 45000 + experience_years * 2000 + rnorm(sum(education == \"Bachelor\"), 0, 3000),       TRUE ~ 30000 + experience_years * 1500 + rnorm(sum(education == \"High School\"), 0, 2000)     )   )  # Analyze mixed data mixed_result <- jpps(   data = mixed_data,   analysis_type = \"predictors\",   target_var = \"salary\",   predictor_vars = c(\"education\", \"department\", \"experience_years\", \"performance_score\"),   sort_results = \"pps_desc\" )  mixed_result"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"time-series-data","dir":"Articles","previous_headings":"Working with Different Data Types","what":"Time Series Data","title":"Predictive Power Score (PPS) Analysis with jpps","text":"PPS can detect temporal patterns:","code":"# Create time series data ts_data <- data.frame(   month = 1:24,   seasonal_factor = sin(2 * pi * (1:24) / 12) ) %>%   mutate(     sales = 1000 + 50 * month + 200 * seasonal_factor + rnorm(24, 0, 50),     lagged_sales = lag(sales, 1)   ) %>%   filter(!is.na(lagged_sales))  # Analyze temporal relationships ts_result <- jpps(   data = ts_data,   analysis_type = \"matrix\",   matrix_vars = c(\"month\", \"seasonal_factor\", \"sales\", \"lagged_sales\"),   show_heatmap = TRUE )  ts_result"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"sample-size-management","dir":"Articles","previous_headings":"Advanced Features","what":"Sample Size Management","title":"Predictive Power Score (PPS) Analysis with jpps","text":"large datasets, use sample size limits faster analysis:","code":"# Create large dataset large_data <- data.frame(   x = rnorm(1000),   y = rnorm(1000) ) %>%   mutate(z = 0.6 * x + 0.4 * y + rnorm(1000, 0, 0.3))  # Use sampling for efficiency sampled_result <- jpps(   data = large_data,   analysis_type = \"matrix\",   matrix_vars = c(\"x\", \"y\", \"z\"),   sample_size = 200,  # Use only 200 samples   algorithm = \"tree\" )  sampled_result"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"cross-validation-options","dir":"Articles","previous_headings":"Advanced Features","what":"Cross-Validation Options","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Adjust cross-validation different dataset sizes:","code":"# Small dataset - use fewer folds small_result <- jpps(   data = mixed_data[1:20, ],   analysis_type = \"single\",   target_var = \"salary\",   predictor_var = \"experience_years\",   cv_folds = 3  # Fewer folds for small data )  # Larger dataset - use more folds large_result <- jpps(   data = mixed_data,   analysis_type = \"single\",   target_var = \"salary\",   predictor_var = \"experience_years\",    cv_folds = 10  # More folds for better validation )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"threshold-filtering","dir":"Articles","previous_headings":"Advanced Features","what":"Threshold Filtering","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Filter results minimum PPS score:","code":"# Show only relationships with PPS > 0.1 threshold_result <- jpps(   data = matrix_data,   analysis_type = \"matrix\",   matrix_vars = c(\"var1\", \"var2\", \"var3\", \"var4\"),   min_pps_threshold = 0.1,   sort_results = \"pps_desc\" )  threshold_result"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"heatmap-customization","dir":"Articles","previous_headings":"Visualization Options","what":"Heatmap Customization","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Customize heatmaps matrix analysis:","code":"# Custom color scheme custom_heatmap <- jpps(   data = matrix_data,   analysis_type = \"matrix\",   matrix_vars = c(\"var1\", \"var2\", \"var3\", \"var4\"),   show_heatmap = TRUE,   color_scheme = \"custom\",   custom_color_low = \"#FFFFFF\",   custom_color_high = \"#FF6B35\",   show_values_on_plot = TRUE,   plot_title = \"Custom PPS Heatmap\" )  custom_heatmap"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"barplot-options","dir":"Articles","previous_headings":"Visualization Options","what":"Barplot Options","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Customize barplots predictor analysis:","code":"# Custom barplot barplot_result <- jpps(   data = business_data,   analysis_type = \"predictors\",   target_var = \"revenue\",   predictor_vars = c(\"marketing_spend\", \"employee_count\", \"customer_satisfaction\"),   show_barplot = TRUE,   show_values_on_plot = TRUE,   plot_title = \"Revenue Predictors\",   sort_results = \"pps_desc\" )  barplot_result"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"marketing-analytics","dir":"Articles","previous_headings":"Practical Applications","what":"Marketing Analytics","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Identify marketing channels drive sales:","code":"# Marketing data marketing_data <- data.frame(   # Marketing channels   tv_spend = runif(50, 1000, 10000),   digital_spend = runif(50, 500, 5000),   radio_spend = runif(50, 200, 2000),   print_spend = runif(50, 100, 1000),      # Customer metrics   brand_awareness = runif(50, 20, 80),   website_visits = round(runif(50, 1000, 10000)) ) %>%   mutate(     # Sales influenced by digital and TV (non-linear)     sales = 5000 +        sqrt(digital_spend) * 2 +  # Non-linear digital effect       tv_spend * 0.3 +           # Linear TV effect       ifelse(brand_awareness > 60, 2000, 0) +  # Threshold effect       rnorm(50, 0, 1000)   )  # Analyze marketing effectiveness marketing_result <- jpps(   data = marketing_data,   analysis_type = \"predictors\",   target_var = \"sales\",   predictor_vars = c(\"tv_spend\", \"digital_spend\", \"radio_spend\", \"print_spend\", \"brand_awareness\"),   algorithm = \"forest\",   show_summary = TRUE )  marketing_result"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"medical-research","dir":"Articles","previous_headings":"Practical Applications","what":"Medical Research","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Identify predictors health outcomes:","code":"# Clinical data clinical_data <- data.frame(   age = round(runif(80, 25, 75)),   gender = factor(sample(c(\"Male\", \"Female\"), 80, replace = TRUE)),   bmi = rnorm(80, 26, 4),   smoking = factor(sample(c(\"Never\", \"Former\", \"Current\"), 80, replace = TRUE, prob = c(0.5, 0.3, 0.2))),   exercise_hours = pmax(0, rnorm(80, 3, 2)) ) %>%   mutate(     # Risk score with complex relationships     risk_score = case_when(       smoking == \"Current\" & age > 50 ~ 70 + rnorm(sum(smoking == \"Current\" & age > 50), 0, 10),       smoking == \"Current\" ~ 50 + rnorm(sum(smoking == \"Current\" & age <= 50), 0, 8),       age > 60 ~ 40 + rnorm(sum(smoking != \"Current\" & age > 60), 0, 12),       TRUE ~ 20 + rnorm(sum(smoking != \"Current\" & age <= 60), 0, 8)     ),     risk_score = pmax(0, pmin(100, risk_score))   )  # Analyze health risk factors health_result <- jpps(   data = clinical_data,   analysis_type = \"predictors\",   target_var = \"risk_score\",   predictor_vars = c(\"age\", \"gender\", \"bmi\", \"smoking\", \"exercise_hours\"),   algorithm = \"forest\",   show_summary = TRUE )  health_result"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"financial-analysis","dir":"Articles","previous_headings":"Practical Applications","what":"Financial Analysis","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Detect relationships financial data:","code":"# Financial indicators financial_data <- data.frame(   # Market indicators   sp500_return = rnorm(60, 0.08, 0.15),   volatility_index = abs(rnorm(60, 20, 8)),   bond_yield = rnorm(60, 3.5, 1.2),      # Economic indicators     gdp_growth = rnorm(60, 2.5, 1.0),   inflation = rnorm(60, 2.8, 0.8),   unemployment = rnorm(60, 5.2, 1.5) ) %>%   mutate(     # Stock performance with complex relationships     stock_performance =        sp500_return * 1.2 +                           # Market beta       -0.5 * log(volatility_index + 1) +            # Non-linear volatility effect       ifelse(gdp_growth > 3, 0.05, 0) +             # Threshold GDP effect       rnorm(60, 0, 0.1)   )  # Analyze financial relationships financial_result <- jpps(   data = financial_data,   analysis_type = \"compare\",   matrix_vars = c(\"sp500_return\", \"volatility_index\", \"bond_yield\", \"gdp_growth\", \"stock_performance\"),   show_correlation_comparison = TRUE,   correlation_method = \"pearson\" )  financial_result"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"caching-system","dir":"Articles","previous_headings":"Performance and Optimization","what":"Caching System","title":"Predictive Power Score (PPS) Analysis with jpps","text":"jpps function includes intelligent caching speed repeated analyses:","code":"# First run - computes PPS system.time({   result1 <- jpps(     data = large_data,     analysis_type = \"matrix\",     matrix_vars = c(\"x\", \"y\", \"z\")   ) })  # Second run with same parameters - uses cache (much faster) system.time({   result2 <- jpps(     data = large_data,     analysis_type = \"matrix\",      matrix_vars = c(\"x\", \"y\", \"z\")   ) })"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"memory-management","dir":"Articles","previous_headings":"Performance and Optimization","what":"Memory Management","title":"Predictive Power Score (PPS) Analysis with jpps","text":"large datasets, use strategic sampling:","code":"# For datasets > 10,000 rows huge_data <- data.frame(   x = rnorm(50000),   y = rnorm(50000),   z = rnorm(50000) )  # Use sample_size to manage memory efficient_result <- jpps(   data = huge_data,   analysis_type = \"matrix\",   matrix_vars = c(\"x\", \"y\", \"z\"),   sample_size = 1000,    # Sample for efficiency   algorithm = \"tree\"     # Faster algorithm )"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"use-pps-when","dir":"Articles","previous_headings":"Interpretation Guidelines > When to Use PPS vs Correlation","what":"Use PPS when:","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Exploring unknown relationships Working mixed data types Suspecting non-linear patterns Need asymmetric relationship detection Want robust outlier handling","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"use-correlation-when","dir":"Articles","previous_headings":"Interpretation Guidelines > When to Use PPS vs Correlation","what":"Use Correlation when:","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Specifically testing linear relationships Need fast computation Working continuous variables Require exact mathematical interpretation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"clinicalresearch-interpretation","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Clinical/Research Interpretation","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Interpretation: high PPS score (>0.8) suggests treatment dose strong predictor response rate, likely following non-linear dose-response curve typical pharmacology.","code":"# Example interpretation workflow interpretation_data <- data.frame(   treatment_dose = c(0, 5, 10, 15, 20, 25, 30),   response_rate = c(10, 25, 45, 65, 75, 80, 82) )  # Analyze dose-response relationship dose_response <- jpps(   data = interpretation_data,   analysis_type = \"single\",   target_var = \"response_rate\",   predictor_var = \"treatment_dose\",   algorithm = \"tree\" )  dose_response"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"Best Practices","what":"Data Preparation","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Clean missing values appropriately Scale/normalize comparing vastly different ranges Consider transformations heavily skewed data Encode categorical variables consistently","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"analysis-strategy","dir":"Articles","previous_headings":"Best Practices","what":"Analysis Strategy","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Start matrix analysis exploration Use comparison analysis validate correlation Focus predictors analysis modeling Apply domain knowledge interpretation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"performance-tips","dir":"Articles","previous_headings":"Best Practices","what":"Performance Tips","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Use sampling datasets >5,000 rows Choose appropriate algorithms data type Adjust CV folds based sample size Leverage caching repeated analyses","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"pitfall-1-overfitting-with-small-samples","dir":"Articles","previous_headings":"Common Pitfalls and Solutions","what":"Pitfall 1: Overfitting with Small Samples","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Problem: High PPS scores small datasets Solution: Use conservative CV folds interpret cautiously","code":"# Small sample - use conservative settings small_data <- data.frame(   x = 1:8,   y = rnorm(8) )  conservative_result <- jpps(   data = small_data,   analysis_type = \"single\",   target_var = \"y\",   predictor_var = \"x\",   cv_folds = 3,  # Fewer folds for small data   algorithm = \"tree\"  # Simpler algorithm )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"pitfall-2-ignoring-data-types","dir":"Articles","previous_headings":"Common Pitfalls and Solutions","what":"Pitfall 2: Ignoring Data Types","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Problem: Treating categorical variables numeric Solution: Ensure proper factor encoding","code":"# Correct categorical encoding corrected_data <- data.frame(   category = factor(c(\"A\", \"B\", \"C\", \"A\", \"B\", \"C\")),  # Proper factor   outcome = c(10, 20, 30, 12, 22, 28) )  correct_result <- jpps(   data = corrected_data,   analysis_type = \"single\",   target_var = \"outcome\",   predictor_var = \"category\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"pitfall-3-misinterpreting-causation","dir":"Articles","previous_headings":"Common Pitfalls and Solutions","what":"Pitfall 3: Misinterpreting Causation","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Problem: Assuming high PPS implies causation Solution: Remember PPS shows predictive power, causation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Predictive Power Score (PPS) Analysis with jpps","text":"jpps() function provides powerful, modern approach relationship detection goes beyond traditional correlation analysis. Key advantages include: ✅ Detects non-linear relationships ✅ Works mixed data types ✅ Provides asymmetric insights ✅ Uses robust machine learning ✅ Includes performance optimizations ✅ Offers comprehensive visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jpps-comprehensive.html","id":"next-steps","dir":"Articles","previous_headings":"Conclusion","what":"Next Steps","title":"Predictive Power Score (PPS) Analysis with jpps","text":"Explore data matrix analysis Compare correlation identify missed relationships Focus high-PPS predictors modeling Validate findings domain knowledge Use feature selection machine learning pipelines Remember: PPS “quick dirty” exploration tool. Use guide detailed analysis rather final answer. information ClinicoPath functions, visit documentation explore vignettes series.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"High-Performance Scatter Plots with jscattermore","text":"jscattermore function provides high-performance scatter plot visualization using scattermore package, designed specifically plotting millions data points efficiently. function ideal large datasets traditional plotting methods become slow memory-intensive.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"Introduction","what":"Key Features","title":"High-Performance Scatter Plots with jscattermore","text":"High Performance: Efficiently plot millions points using raster graphics Multiple Backends: Support base R, ggplot2, optimized ggplot2 rendering Advanced Aesthetics: Color size mapping multiple palette options Statistical Overlays: Correlation coefficients, smooth lines, density contours Customization: Extensive theming styling options Performance Monitoring: Built-performance measurement comparison Memory Efficient: Optimized memory usage intelligent caching","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"Introduction","what":"Installation and Setup","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Load required libraries library(jjstatsplot) library(dplyr) library(ggplot2)   # Check if scattermore is available if (!requireNamespace(\"scattermore\", quietly = TRUE)) {   message(\"Note: scattermore package not available. Install with: install.packages('scattermore')\") }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"simple-scatter-plot","dir":"Articles","previous_headings":"Basic Usage","what":"Simple Scatter Plot","title":"High-Performance Scatter Plots with jscattermore","text":"basic usage requires x y variables:","code":"# Create sample data set.seed(123) basic_data <- data.frame(   x = rnorm(5000),   y = rnorm(5000) + 0.5 * rnorm(5000),   group = factor(sample(c(\"A\", \"B\", \"C\"), 5000, replace = TRUE)) )  # Basic scatter plot result_basic <- jscattermore(   data = basic_data,   x_var = \"x\",   y_var = \"y\",   facet_var = NULL,   color_var = NULL,   size_var = NULL )  # The result contains the plot and summary information print(names(result_basic))"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"base-r-implementation","dir":"Articles","previous_headings":"Basic Usage > Plot Types","what":"Base R Implementation","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"result_base <- jscattermore(   data = basic_data,   x_var = \"x\",   y_var = \"y\",   plot_type = \"base_r\",   show_correlation = TRUE,   plot_title = \"Base R Scatter Plot\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"ggplot2-implementation","dir":"Articles","previous_headings":"Basic Usage > Plot Types","what":"ggplot2 Implementation","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"result_ggplot <- jscattermore(   data = basic_data,   x_var = \"x\",   y_var = \"y\",   plot_type = \"ggplot2\",   show_correlation = TRUE,   plot_title = \"ggplot2 Scatter Plot\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"optimized-ggplot2-implementation","dir":"Articles","previous_headings":"Basic Usage > Plot Types","what":"Optimized ggplot2 Implementation","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"result_opt <- jscattermore(   data = basic_data,   x_var = \"x\",   y_var = \"y\",   plot_type = \"ggplot2_opt\",   show_correlation = TRUE,   plot_title = \"Optimized ggplot2 Scatter Plot\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"continuous-color-variables","dir":"Articles","previous_headings":"Advanced Aesthetics > Color Mapping","what":"Continuous Color Variables","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Add continuous color variable continuous_data <- basic_data %>%   mutate(intensity = x^2 + y^2 + rnorm(nrow(basic_data), sd = 0.1))  result_cont_color <- jscattermore(   data = continuous_data,   x_var = \"x\",   y_var = \"y\",   color_var = \"intensity\",   color_palette = \"viridis\",   plot_title = \"Continuous Color Mapping\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"categorical-color-variables","dir":"Articles","previous_headings":"Advanced Aesthetics > Color Mapping","what":"Categorical Color Variables","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"result_cat_color <- jscattermore(   data = basic_data,   x_var = \"x\",   y_var = \"y\",   color_var = \"group\",   color_palette = \"plasma\",   plot_title = \"Categorical Color Mapping\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"size-mapping","dir":"Articles","previous_headings":"Advanced Aesthetics","what":"Size Mapping","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Add size variable size_data <- basic_data %>%   mutate(magnitude = abs(x + y) + runif(nrow(basic_data), 0.5, 2))  result_size <- jscattermore(   data = size_data,   x_var = \"x\",   y_var = \"y\",   color_var = \"group\",   size_var = \"magnitude\",   plot_title = \"Color and Size Mapping\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"comparing-different-palettes","dir":"Articles","previous_headings":"Advanced Aesthetics > Color Palettes","what":"Comparing Different Palettes","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"palettes <- c(\"viridis\", \"plasma\", \"inferno\", \"magma\", \"cividis\")  # Create a comparison (showing code for one palette) result_palette <- jscattermore(   data = continuous_data,   x_var = \"x\",   y_var = \"y\",   color_var = \"intensity\",   color_palette = \"inferno\",   plot_title = \"Inferno Color Palette\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"correlation-display","dir":"Articles","previous_headings":"Statistical Overlays","what":"Correlation Display","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Data with strong correlation corr_data <- data.frame(   x = rnorm(2000),   y = NA ) corr_data$y <- 0.8 * corr_data$x + rnorm(2000, sd = 0.5)  result_corr <- jscattermore(   data = corr_data,   x_var = \"x\",   y_var = \"y\",   show_correlation = TRUE,   plot_title = \"Scatter Plot with Correlation\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"smooth-lines","dir":"Articles","previous_headings":"Statistical Overlays","what":"Smooth Lines","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Linear smooth result_smooth_lm <- jscattermore(   data = corr_data,   x_var = \"x\",   y_var = \"y\",   show_smooth = TRUE,   smooth_method = \"lm\",   show_correlation = TRUE,   plot_title = \"Linear Smooth Line\" )  # LOESS smooth result_smooth_loess <- jscattermore(   data = corr_data,   x_var = \"x\",   y_var = \"y\",   show_smooth = TRUE,   smooth_method = \"loess\",   show_correlation = TRUE,   plot_title = \"LOESS Smooth Line\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"density-contours","dir":"Articles","previous_headings":"Statistical Overlays","what":"Density Contours","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"result_density <- jscattermore(   data = basic_data,   x_var = \"x\",   y_var = \"y\",   show_density = TRUE,   alpha = 0.6,   plot_title = \"Scatter Plot with Density Contours\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"log-transformations","dir":"Articles","previous_headings":"Data Transformations","what":"Log Transformations","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Create positive data for log transformation log_data <- data.frame(   x = exp(rnorm(3000, mean = 2, sd = 1)),   y = exp(rnorm(3000, mean = 1.5, sd = 0.8)) )  # Log transform X-axis result_log_x <- jscattermore(   data = log_data,   x_var = \"x\",   y_var = \"y\",   log_transform_x = TRUE,   plot_title = \"Log-transformed X-axis\" )  # Log transform both axes result_log_both <- jscattermore(   data = log_data,   x_var = \"x\",   y_var = \"y\",   log_transform_x = TRUE,   log_transform_y = TRUE,   plot_title = \"Log-log Transformation\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"faceted-plots","dir":"Articles","previous_headings":"Faceting and Grouping","what":"Faceted Plots","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Multi-group data for faceting facet_data <- data.frame(   x = rnorm(1500),   y = rnorm(1500),   condition = factor(rep(c(\"Control\", \"Treatment_A\", \"Treatment_B\"), each = 500)),   time_point = factor(rep(c(\"Baseline\", \"Week_4\", \"Week_8\"), times = 500)) )  result_facet <- jscattermore(   data = facet_data,   x_var = \"x\",   y_var = \"y\",   facet_var = \"condition\",   color_var = \"time_point\",   plot_title = \"Faceted Scatter Plot by Condition\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"performance-monitoring","dir":"Articles","previous_headings":"Performance Optimization","what":"Performance Monitoring","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Large dataset for performance testing large_data <- data.frame(   x = rnorm(20000),   y = rnorm(20000) + 0.3 * rnorm(20000),   group = factor(sample(c(\"Group1\", \"Group2\", \"Group3\"), 20000, replace = TRUE)) )  result_performance <- jscattermore(   data = large_data,   x_var = \"x\",   y_var = \"y\",   color_var = \"group\",   show_performance = TRUE,   plot_title = \"Performance Monitoring Example\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"resolution-control","dir":"Articles","previous_headings":"Performance Optimization > Raster Settings","what":"Resolution Control","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# High resolution for publication quality result_high_res <- jscattermore(   data = large_data,   x_var = \"x\",   y_var = \"y\",   pixels = 1024,  # High resolution   interpolate = TRUE,   plot_title = \"High Resolution (1024x1024)\" )  # Lower resolution for faster rendering result_low_res <- jscattermore(   data = large_data,   x_var = \"x\",   y_var = \"y\",   pixels = 256,   # Lower resolution   interpolate = FALSE,   plot_title = \"Lower Resolution (256x256)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"point-size-optimization","dir":"Articles","previous_headings":"Performance Optimization > Raster Settings","what":"Point Size Optimization","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Automatic point sizing result_auto_size <- jscattermore(   data = large_data,   x_var = \"x\",   y_var = \"y\",   pointsize = 0,  # Automatic   plot_title = \"Automatic Point Sizing\" )  # Manual point sizing result_manual_size <- jscattermore(   data = large_data,   x_var = \"x\",   y_var = \"y\",   pointsize = 2,  # Manual   plot_title = \"Manual Point Sizing\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"visual-themes","dir":"Articles","previous_headings":"Customization and Theming","what":"Visual Themes","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Different themes theme_data <- basic_data[1:1000, ]  # Minimal theme result_minimal <- jscattermore(   data = theme_data,   x_var = \"x\",   y_var = \"y\",   color_var = \"group\",   theme_style = \"minimal\",   plot_title = \"Minimal Theme\" )  # Dark theme result_dark <- jscattermore(   data = theme_data,   x_var = \"x\",   y_var = \"y\",   color_var = \"group\",   theme_style = \"dark\",   plot_title = \"Dark Theme\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"custom-labels-and-titles","dir":"Articles","previous_headings":"Customization and Theming","what":"Custom Labels and Titles","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"result_labels <- jscattermore(   data = basic_data,   x_var = \"x\",   y_var = \"y\",   color_var = \"group\",   x_label = \"Predictor Variable (X)\",   y_label = \"Response Variable (Y)\",   plot_title = \"Custom Scatter Plot with Detailed Labels\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"alpha-and-transparency","dir":"Articles","previous_headings":"Customization and Theming","what":"Alpha and Transparency","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Different alpha levels for overplotting alpha_data <- data.frame(   x = rnorm(8000),   y = rnorm(8000) )  # High alpha (less transparent) result_alpha_high <- jscattermore(   data = alpha_data,   x_var = \"x\",   y_var = \"y\",   alpha = 0.9,   plot_title = \"High Alpha (α = 0.9)\" )  # Low alpha (more transparent) result_alpha_low <- jscattermore(   data = alpha_data,   x_var = \"x\",   y_var = \"y\",   alpha = 0.3,   plot_title = \"Low Alpha (α = 0.3)\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"medical-research-example","dir":"Articles","previous_headings":"Real-World Applications","what":"Medical Research Example","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Simulate medical research data set.seed(456) medical_data <- data.frame(   patient_id = 1:2000,   age = round(rnorm(2000, mean = 55, sd = 15)),   bmi = rnorm(2000, mean = 26, sd = 4),   systolic_bp = round(rnorm(2000, mean = 130, sd = 20)),   cholesterol = rnorm(2000, mean = 200, sd = 30),   treatment = factor(sample(c(\"Control\", \"Drug_A\", \"Drug_B\"), 2000, replace = TRUE)),   outcome_score = rnorm(2000, mean = 50, sd = 15) ) %>%   # Create realistic relationships   mutate(     systolic_bp = systolic_bp + 0.5 * age + 1.5 * bmi,     cholesterol = cholesterol + 0.3 * age + 2 * bmi,     outcome_score = outcome_score - 0.2 * age + 0.1 * cholesterol   )  # BMI vs Blood Pressure colored by treatment result_medical <- jscattermore(   data = medical_data,   x_var = \"bmi\",   y_var = \"systolic_bp\",   color_var = \"treatment\",   size_var = \"age\",   show_smooth = TRUE,   smooth_method = \"lm\",   show_correlation = TRUE,   x_label = \"Body Mass Index (BMI)\",   y_label = \"Systolic Blood Pressure (mmHg)\",   plot_title = \"BMI vs Blood Pressure by Treatment Group\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"time-series-analysis","dir":"Articles","previous_headings":"Real-World Applications","what":"Time Series Analysis","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Time series scatter plot time_data <- data.frame(   time = 1:1000,   signal = sin(seq(0, 4*pi, length.out = 1000)) + rnorm(1000, sd = 0.2),   noise = rnorm(1000),   phase = factor(rep(c(\"Phase1\", \"Phase2\", \"Phase3\", \"Phase4\"), each = 250)) )  result_timeseries <- jscattermore(   data = time_data,   x_var = \"time\",   y_var = \"signal\",   color_var = \"phase\",   show_smooth = TRUE,   smooth_method = \"loess\",   x_label = \"Time Points\",   y_label = \"Signal Amplitude\",   plot_title = \"Time Series Signal Analysis\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"high-dimensional-data-visualization","dir":"Articles","previous_headings":"Real-World Applications","what":"High-Dimensional Data Visualization","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Simulate high-dimensional data with clustering set.seed(789) n_points <- 3000 cluster_centers <- rbind(   c(0, 0), c(3, 3), c(-2, 4), c(4, -1) )  high_dim_data <- do.call(rbind, lapply(1:4, function(i) {   n_cluster <- n_points / 4   data.frame(     x = rnorm(n_cluster, cluster_centers[i, 1], 1),     y = rnorm(n_cluster, cluster_centers[i, 2], 1),     cluster = factor(paste(\"Cluster\", i)),     density = runif(n_cluster, 0.1, 1.0),     dimension_3 = rnorm(n_cluster, cluster_centers[i, 1] + cluster_centers[i, 2], 0.5)   ) }))  result_clusters <- jscattermore(   data = high_dim_data,   x_var = \"x\",   y_var = \"y\",   color_var = \"dimension_3\",   size_var = \"density\",   facet_var = \"cluster\",   color_palette = \"viridis\",   plot_title = \"High-Dimensional Clustering Visualization\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"benchmarking-different-methods","dir":"Articles","previous_headings":"Performance Comparison","what":"Benchmarking Different Methods","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Large dataset for benchmarking benchmark_data <- data.frame(   x = rnorm(50000),   y = rnorm(50000),   group = factor(sample(c(\"A\", \"B\", \"C\", \"D\"), 50000, replace = TRUE)) )  # Benchmark different plot types with performance monitoring benchmark_results <- list()  # Base R method benchmark_results$base_r <- jscattermore(   data = benchmark_data,   x_var = \"x\",   y_var = \"y\",   plot_type = \"base_r\",   show_performance = TRUE,   plot_title = \"Base R Performance Test\" )  # ggplot2 method benchmark_results$ggplot2 <- jscattermore(   data = benchmark_data,   x_var = \"x\",   y_var = \"y\",   plot_type = \"ggplot2\",   show_performance = TRUE,   plot_title = \"ggplot2 Performance Test\" )  # Optimized ggplot2 method benchmark_results$ggplot2_opt <- jscattermore(   data = benchmark_data,   x_var = \"x\",   y_var = \"y\",   plot_type = \"ggplot2_opt\",   show_performance = TRUE,   plot_title = \"Optimized ggplot2 Performance Test\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"missing-data","dir":"Articles","previous_headings":"Error Handling and Edge Cases","what":"Missing Data","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Data with missing values missing_data <- basic_data missing_data$x[sample(1:nrow(missing_data), 200)] <- NA missing_data$y[sample(1:nrow(missing_data), 150)] <- NA  result_missing <- jscattermore(   data = missing_data,   x_var = \"x\",   y_var = \"y\",   color_var = \"group\",   plot_title = \"Handling Missing Data\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"single-data-points","dir":"Articles","previous_headings":"Error Handling and Edge Cases","what":"Single Data Points","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Edge case: single data point single_data <- data.frame(x = 1, y = 1)  result_single <- jscattermore(   data = single_data,   x_var = \"x\",   y_var = \"y\",   plot_title = \"Single Data Point\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"identical-values","dir":"Articles","previous_headings":"Error Handling and Edge Cases","what":"Identical Values","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Edge case: all identical values identical_data <- data.frame(   x = rep(5, 100),   y = rep(5, 100) )  result_identical <- jscattermore(   data = identical_data,   x_var = \"x\",   y_var = \"y\",   plot_title = \"Identical Values\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"choosing-plot-types","dir":"Articles","previous_headings":"Best Practices","what":"1. Choosing Plot Types","title":"High-Performance Scatter Plots with jscattermore","text":"base_r: Best simple, fast plots without ggplot2 dependencies ggplot2: Standard ggplot2 integration full theming support ggplot2_opt: optimized large datasets","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"performance-optimization-1","dir":"Articles","previous_headings":"Best Practices","what":"2. Performance Optimization","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# For very large datasets performance_tips <- data.frame(   tip = c(     \"Use lower pixel resolution for interactive exploration\",     \"Use higher resolution for final publication plots\",     \"Enable interpolation for smoother appearance\",     \"Disable correlation calculation for huge datasets\",     \"Use appropriate alpha values to handle overplotting\",     \"Consider sampling large datasets for initial exploration\"   ),   code_example = c(     \"pixels = 256\",     \"pixels = 1024\",     \"interpolate = TRUE\",     \"show_correlation = FALSE\",     \"alpha = 0.3\",     \"sample_n(data, 10000)\"   ) )  print(performance_tips)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"color-and-aesthetics","dir":"Articles","previous_headings":"Best Practices","what":"3. Color and Aesthetics","title":"High-Performance Scatter Plots with jscattermore","text":"","code":"# Best practices for color mapping aesthetic_guidelines <- data.frame(   aspect = c(     \"Continuous variables\",     \"Categorical variables\",     \"Large datasets\",     \"Publication plots\",     \"Accessibility\"   ),   recommendation = c(     \"Use perceptually uniform palettes (viridis, plasma)\",     \"Use qualitatively different colors\",     \"Use transparency (alpha < 1) to show density\",     \"Use high resolution and interpolation\",     \"Avoid red-green combinations, use colorblind-friendly palettes\"   ),   palette_suggestion = c(     \"viridis, plasma, inferno\",     \"Set1, Dark2, Accent\",     \"Any with alpha = 0.3-0.7\",     \"viridis with interpolate = TRUE\",     \"viridis, cividis\"   ) )  print(aesthetic_guidelines)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"High-Performance Scatter Plots with jscattermore","text":"jscattermore function provides powerful efficient solution visualizing large datasets high-performance scatter plots. Key advantages include:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"performance-benefits","dir":"Articles","previous_headings":"Summary","what":"Performance Benefits","title":"High-Performance Scatter Plots with jscattermore","text":"Speed: 10-100x faster traditional plotting large datasets Memory Efficiency: Raster-based rendering reduces memory usage Scalability: Can handle millions data points Caching: Intelligent caching system reduces redundant computations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"visualization-features","dir":"Articles","previous_headings":"Summary","what":"Visualization Features","title":"High-Performance Scatter Plots with jscattermore","text":"Multiple Backends: Choose optimal rendering method needs Rich Aesthetics: Color size mapping multiple palette options Statistical Overlays: Correlation, smooth lines, density contours Customization: Extensive theming styling options","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"use-cases","dir":"Articles","previous_headings":"Summary","what":"Use Cases","title":"High-Performance Scatter Plots with jscattermore","text":"Exploratory Data Analysis: Quick visualization large datasets Time Series Analysis: Efficient plotting temporal data Clustering Visualization: Color-coded cluster analysis Medical Research: Patient data visualization multiple variables Performance Monitoring: Built-benchmarking capabilities function designed handle real-world scenarios including missing data, edge cases, performance requirements maintaining high visual quality statistical accuracy.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-jscattermore-comprehensive.html","id":"next-steps","dir":"Articles","previous_headings":"Summary","what":"Next Steps","title":"High-Performance Scatter Plots with jscattermore","text":"Explore ClinicoPath package documentation statistical analysis functions Try function large datasets Experiment different plot types aesthetic options Use performance monitoring optimize workflows","code":"sessionInfo()"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"what-are-lollipop-charts","dir":"Articles","previous_headings":"Introduction to Lollipop Charts in Clinical Research","what":"What are Lollipop Charts?","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Lollipop charts modern effective visualization tool combines clarity bar charts elegance dot plots. consist dots (circles) connected baseline lines (stems), creating visual resemblance lollipops. clinical pathological research, lollipop charts excel displaying categorical data emphasis individual values, making ideal : Patient-level visualizations: Individual biomarker levels, treatment responses, outcomes Treatment comparisons: Comparing efficacy across different therapeutic interventions Quality metrics: Displaying performance indicators across departments time periods Survey responses: Visualizing satisfaction scores assessment results Ranking displays: Showing ordered outcomes performance measures","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"key-advantages-over-traditional-charts","dir":"Articles","previous_headings":"Introduction to Lollipop Charts in Clinical Research > What are Lollipop Charts?","what":"Key Advantages Over Traditional Charts","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Reduced Visual Clutter: Lower ink--data ratio compared bar charts Enhanced Focus: Emphasizes individual data points rather areas Better Sparse Data: Ideal categories observations Professional Appearance: Clean, modern aesthetic suitable publications Flexible Orientation: Works well vertical horizontal layouts Highlighting Capability: Easy emphasize specific categories outliers","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"ideal-clinical-scenarios","dir":"Articles","previous_headings":"Introduction to Lollipop Charts in Clinical Research > When to Use Lollipop Charts","what":"Ideal Clinical Scenarios","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Patient Timeline Analysis: Days response, progression-free survival, treatment duration Biomarker Profiling: Individual patient biomarker levels across cohort Treatment Response Visualization: Response rates efficacy scores treatment type Quality Improvement Dashboards: Performance metrics across clinical departments Survey Assessment Results: Patient satisfaction clinical assessment scores Diagnostic Test Performance: Sensitivity, specificity, accuracy across different tests","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"data-requirements","dir":"Articles","previous_headings":"Introduction to Lollipop Charts in Clinical Research > When to Use Lollipop Charts","what":"Data Requirements","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Categorical Variable: Patient IDs, treatment types, departments, groupings Continuous Outcome: Numeric values biomarker levels, scores, measurements Optional Highlighting: Ability emphasize specific categories outliers Minimum Data: least 2 categories meaningful comparison","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"when-not-to-use-lollipop-charts","dir":"Articles","previous_headings":"Introduction to Lollipop Charts in Clinical Research > When to Use Lollipop Charts","what":"When NOT to Use Lollipop Charts","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Time Series Data: Use line charts instead temporal trends Proportional Data: Use pie charts stacked bars part--whole relationships Dense Categorical Data: Consider bar charts many categories multiple series Continuous vs. Continuous: Use scatter plots two continuous variables","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"central-tendency-measures","dir":"Articles","previous_headings":"Statistical Background > Descriptive Statistics in Lollipop Charts","what":"Central Tendency Measures","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Lollipop charts can incorporate reference lines : Mean: x‾=∑=1nxin\\bar{x} = \\frac{\\sum_{=1}^{n} x_i}{n} Median: middle value data ordered Mode: frequently occurring value (discrete data)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"variability-measures","dir":"Articles","previous_headings":"Statistical Background > Descriptive Statistics in Lollipop Charts","what":"Variability Measures","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Understanding spread data displayed: Standard Deviation: s=∑=1n(xi−x‾)2n−1s = \\sqrt{\\frac{\\sum_{=1}^{n} (x_i - \\bar{x})^2}{n-1}} Interquartile Range (IQR): Q3−Q1Q_3 - Q_1 Range: max⁡(x)−min⁡(x)\\max(x) - \\min(x)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"ranking-and-sorting","dir":"Articles","previous_headings":"Statistical Background > Descriptive Statistics in Lollipop Charts","what":"Ranking and Sorting","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Lollipop charts particularly effective displaying ranked data: Ascending Order: Lowest highest values Descending Order: Highest lowest values Alphabetical Order: Categorical ordering Clinical Significance: Custom ordering based clinical importance","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"between-group-comparisons","dir":"Articles","previous_headings":"Statistical Background > Comparative Analysis","what":"Between-Group Comparisons","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"comparing categories, consider: Effect Size: Clinical significance differences Confidence Intervals: Uncertainty around individual estimates Statistical Tests: ANOVA, Kruskal-Wallis, appropriate tests Multiple Comparisons: Adjustments multiple testing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"outlier-detection","dir":"Articles","previous_headings":"Statistical Background > Comparative Analysis","what":"Outlier Detection","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Lollipop charts excel highlighting outliers: Statistical Outliers: Values > Q3 + 1.5×IQR < Q1 - 1.5×IQR Clinical Outliers: Values outside clinical reference ranges Extreme Values: Observations requiring clinical attention","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"basic-functionality","dir":"Articles","previous_headings":"Getting Started with Lollipop Charts","what":"Basic Functionality","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"lollipop() function creates comprehensive lollipop charts extensive customization options:","code":"lollipop(   data = your_data,   dep = \"continuous_variable\",      # Y-axis values   group = \"categorical_variable\",   # X-axis categories   sortBy = \"original\",              # Sorting method   orientation = \"vertical\",         # Chart orientation   colorScheme = \"default\",          # Color palette   theme = \"default\"                 # Overall appearance )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"core-variables","dir":"Articles","previous_headings":"Getting Started with Lollipop Charts > Essential Parameters","what":"Core Variables","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"dep: continuous dependent variable (biomarker levels, scores, measurements) group: categorical grouping variable (patients, treatments, departments)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"sorting-options","dir":"Articles","previous_headings":"Getting Started with Lollipop Charts > Essential Parameters","what":"Sorting Options","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"original: Maintains data order value_asc: Sorts values (low high) value_desc: Sorts values (high low) group_alpha: Alphabetical sorting category","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"orientation","dir":"Articles","previous_headings":"Getting Started with Lollipop Charts > Essential Parameters","what":"Orientation","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"vertical: Traditional vertical lollipops (default) horizontal: Horizontal layout long category names","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"dataset-1-patient-biomarker-analysis","dir":"Articles","previous_headings":"Loading and Preparing Clinical Data","what":"Dataset 1: Patient Biomarker Analysis","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Load patient biomarker data # In practice, load your data using: load(\"path/to/your/data.RData\")  # Create sample biomarker data set.seed(123) biomarker_data <- data.frame(   patient_id = paste0(\"P\", sprintf(\"%03d\", 1:20)),   biomarker_level = round(c(     rnorm(12, mean = 35, sd = 8),    # Normal range patients     rnorm(5, mean = 65, sd = 12),    # Elevated patients     rnorm(3, mean = 95, sd = 15)     # High-risk patients   ), 1),   risk_category = c(     rep(\"Low\", 12),     rep(\"Medium\", 5),     rep(\"High\", 3)   ),   age = round(rnorm(20, mean = 62, sd = 12)),   gender = sample(c(\"Male\", \"Female\"), 20, replace = TRUE) )  # Ensure realistic ranges biomarker_data$biomarker_level <- pmax(pmin(biomarker_data$biomarker_level, 150), 5)  # Display data summary cat(\"=== PATIENT BIOMARKER DATA SUMMARY ===\\n\") cat(\"Number of patients:\", nrow(biomarker_data), \"\\n\") cat(\"Biomarker range:\", round(min(biomarker_data$biomarker_level), 1), \"-\",      round(max(biomarker_data$biomarker_level), 1), \"ng/mL\\n\") cat(\"Risk categories:\\n\") table(biomarker_data$risk_category)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"dataset-2-treatment-response-comparison","dir":"Articles","previous_headings":"Loading and Preparing Clinical Data","what":"Dataset 2: Treatment Response Comparison","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Create treatment response data set.seed(456) treatment_data <- data.frame(   treatment = c(\"Chemotherapy_A\", \"Chemotherapy_B\", \"Immunotherapy_C\",                  \"Targeted_Therapy_D\", \"Combination_E\", \"Radiation_F\"),   response_score = round(c(45, 52, 78, 68, 82, 38), 1),   efficacy = c(\"Low\", \"Medium\", \"High\", \"High\", \"High\", \"Low\"),   cost_thousands = c(25, 30, 85, 120, 150, 15),   side_effects = c(\"Moderate\", \"Mild\", \"Moderate\", \"Severe\", \"Severe\", \"Mild\") )  cat(\"=== TREATMENT RESPONSE DATA SUMMARY ===\\n\") cat(\"Number of treatments:\", nrow(treatment_data), \"\\n\") cat(\"Response range:\", min(treatment_data$response_score), \"-\",      max(treatment_data$response_score), \"\\n\") cat(\"Efficacy distribution:\\n\") table(treatment_data$efficacy)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"dataset-3-patient-timeline-analysis","dir":"Articles","previous_headings":"Loading and Preparing Clinical Data","what":"Dataset 3: Patient Timeline Analysis","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Create patient timeline data set.seed(789) timeline_data <- data.frame(   patient_id = paste0(\"Patient_\", LETTERS[1:12]),   days_to_event = round(c(45, 120, 78, 200, 156, 89, 67, 134, 178, 92, 145, 103)),   event_type = c(\"Response\", \"Progression\", \"Response\", \"Stable\", \"Progression\",                   \"Response\", \"Adverse_Event\", \"Stable\", \"Progression\", \"Response\",                   \"Stable\", \"Response\"),   treatment_arm = rep(c(\"Control\", \"Experimental\"), 6),   disease_stage = c(\"II\", \"III\", \"I\", \"IV\", \"III\", \"II\", \"I\", \"III\", \"IV\", \"II\", \"III\", \"I\") )  cat(\"=== PATIENT TIMELINE DATA SUMMARY ===\\n\") cat(\"Number of patients:\", nrow(timeline_data), \"\\n\") cat(\"Days to event range:\", min(timeline_data$days_to_event), \"-\",      max(timeline_data$days_to_event), \"days\\n\") cat(\"Event types:\\n\") table(timeline_data$event_type)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"example-1-patient-biomarker-levels","dir":"Articles","previous_headings":"Basic Lollipop Chart Examples","what":"Example 1: Patient Biomarker Levels","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Basic biomarker visualization biomarker_analysis <- lollipop(   data = biomarker_data,   dep = \"biomarker_level\",   group = \"patient_id\",   title = \"Patient Biomarker Levels\",   ylabel = \"Biomarker Level (ng/mL)\",   xlabel = \"Patient ID\" )  # Display the chart print(biomarker_analysis)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"clinical-interpretation","dir":"Articles","previous_headings":"Basic Lollipop Chart Examples > Example 1: Patient Biomarker Levels","what":"Clinical Interpretation","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Individual Assessment: lollipop represents one patient’s biomarker level Quick Identification: Easily spot patients elevated levels (>60 ng/mL) Clinical Thresholds: Can add reference lines clinical decision points Patient Communication: Clear visualization explaining results patients","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"example-2-treatment-response-comparison","dir":"Articles","previous_headings":"Basic Lollipop Chart Examples","what":"Example 2: Treatment Response Comparison","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Treatment response comparison treatment_analysis <- lollipop(   data = treatment_data,   dep = \"response_score\",   group = \"treatment\",   sortBy = \"value_desc\",   title = \"Treatment Response Comparison\",   ylabel = \"Response Score (%)\",   xlabel = \"Treatment Type\" )  print(treatment_analysis)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"clinical-insights","dir":"Articles","previous_headings":"Basic Lollipop Chart Examples > Example 2: Treatment Response Comparison","what":"Clinical Insights","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Ranking: Treatments ordered effectiveness (highest lowest) Comparative Efficacy: Clear visual comparison response rates Treatment Selection: Supports clinical decision-making Performance Gaps: Identifies significant differences treatments","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"example-3-patient-timeline-visualization","dir":"Articles","previous_headings":"Basic Lollipop Chart Examples","what":"Example 3: Patient Timeline Visualization","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Patient timeline analysis timeline_analysis <- lollipop(   data = timeline_data,   dep = \"days_to_event\",   group = \"patient_id\",   showMean = TRUE,   title = \"Patient Timeline Analysis\",   ylabel = \"Days to Event\",   xlabel = \"Patient ID\" )  print(timeline_analysis)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"clinical-applications","dir":"Articles","previous_headings":"Basic Lollipop Chart Examples > Example 3: Patient Timeline Visualization","what":"Clinical Applications","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Follow-Planning: Identify patients short time events Treatment Monitoring: Track intervention effectiveness time Risk Stratification: Patients early events may need intensive follow-Resource Allocation: Plan clinical resources based event timing","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"sorting-by-values-ascending","dir":"Articles","previous_headings":"Advanced Customization Options > Sorting and Orientation","what":"Sorting by Values (Ascending)","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Sort biomarkers from lowest to highest biomarker_sorted_asc <- lollipop(   data = biomarker_data,   dep = \"biomarker_level\",   group = \"patient_id\",   sortBy = \"value_asc\",   title = \"Biomarker Levels - Sorted Ascending\",   ylabel = \"Biomarker Level (ng/mL)\" )  print(biomarker_sorted_asc)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"sorting-by-values-descending","dir":"Articles","previous_headings":"Advanced Customization Options > Sorting and Orientation","what":"Sorting by Values (Descending)","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Sort treatments from highest to lowest response treatment_sorted_desc <- lollipop(   data = treatment_data,   dep = \"response_score\",   group = \"treatment\",   sortBy = \"value_desc\",   title = \"Treatment Response - Ranked by Effectiveness\",   ylabel = \"Response Score (%)\" )  print(treatment_sorted_desc)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"horizontal-orientation","dir":"Articles","previous_headings":"Advanced Customization Options > Sorting and Orientation","what":"Horizontal Orientation","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Horizontal layout for long treatment names treatment_horizontal <- lollipop(   data = treatment_data,   dep = \"response_score\",   group = \"treatment\",   orientation = \"horizontal\",   sortBy = \"value_desc\",   title = \"Treatment Response - Horizontal Layout\",   xlabel = \"Response Score (%)\",   ylabel = \"Treatment Type\" )  print(treatment_horizontal)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"clinical-color-scheme","dir":"Articles","previous_headings":"Advanced Customization Options > Color Schemes and Themes","what":"Clinical Color Scheme","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Professional clinical color scheme biomarker_clinical <- lollipop(   data = biomarker_data,   dep = \"biomarker_level\",   group = \"patient_id\",   colorScheme = \"clinical\",   theme = \"publication\",   title = \"Biomarker Levels - Clinical Theme\" )  print(biomarker_clinical)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"colorblind-safe-palette","dir":"Articles","previous_headings":"Advanced Customization Options > Color Schemes and Themes","what":"Colorblind-Safe Palette","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Colorblind-safe visualization treatment_colorblind <- lollipop(   data = treatment_data,   dep = \"response_score\",   group = \"treatment\",   colorScheme = \"colorblind\",   sortBy = \"value_desc\",   title = \"Treatment Response - Colorblind Safe\" )  print(treatment_colorblind)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"viridis-color-scheme","dir":"Articles","previous_headings":"Advanced Customization Options > Color Schemes and Themes","what":"Viridis Color Scheme","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Viridis color scheme for continuous feel timeline_viridis <- lollipop(   data = timeline_data,   dep = \"days_to_event\",   group = \"patient_id\",   colorScheme = \"viridis\",   theme = \"minimal\",   title = \"Patient Timeline - Viridis Theme\" )  print(timeline_viridis)"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"highlight-high-risk-patient","dir":"Articles","previous_headings":"Highlighting and Emphasis > Highlighting Specific Categories","what":"Highlight High-Risk Patient","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Highlight a specific patient biomarker_highlight <- lollipop(   data = biomarker_data,   dep = \"biomarker_level\",   group = \"patient_id\",   highlight = \"P003\",  # Highlight patient P003   title = \"Biomarker Levels - Patient P003 Highlighted\",   ylabel = \"Biomarker Level (ng/mL)\" )  print(biomarker_highlight)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"highlight-best-treatment","dir":"Articles","previous_headings":"Highlighting and Emphasis > Highlighting Specific Categories","what":"Highlight Best Treatment","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Highlight the most effective treatment treatment_highlight <- lollipop(   data = treatment_data,   dep = \"response_score\",   group = \"treatment\",   highlight = \"Combination_E\",   sortBy = \"value_desc\",   title = \"Treatment Response - Best Treatment Highlighted\" )  print(treatment_highlight)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"display-value-labels","dir":"Articles","previous_headings":"Highlighting and Emphasis > Value Labels and Reference Lines","what":"Display Value Labels","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Show exact values on lollipops biomarker_values <- lollipop(   data = biomarker_data,   dep = \"biomarker_level\",   group = \"patient_id\",   showValues = TRUE,   sortBy = \"value_desc\",   title = \"Biomarker Levels with Value Labels\" )  print(biomarker_values)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"add-mean-reference-line","dir":"Articles","previous_headings":"Highlighting and Emphasis > Value Labels and Reference Lines","what":"Add Mean Reference Line","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Add mean reference line treatment_mean <- lollipop(   data = treatment_data,   dep = \"response_score\",   group = \"treatment\",   showMean = TRUE,   showValues = TRUE,   title = \"Treatment Response with Mean Reference\" )  print(treatment_mean)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"point-size-and-line-width","dir":"Articles","previous_headings":"Highlighting and Emphasis > Customizing Appearance","what":"Point Size and Line Width","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Customize point size and line width timeline_custom <- lollipop(   data = timeline_data,   dep = \"days_to_event\",   group = \"patient_id\",   pointSize = 5,   lineWidth = 2,   title = \"Patient Timeline - Custom Appearance\",   theme = \"classic\" )  print(timeline_custom)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"plot-dimensions","dir":"Articles","previous_headings":"Highlighting and Emphasis > Customizing Appearance","what":"Plot Dimensions","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Custom plot dimensions biomarker_large <- lollipop(   data = biomarker_data,   dep = \"biomarker_level\",   group = \"patient_id\",   width = 1000,   height = 700,   title = \"Biomarker Levels - Large Format\" )  print(biomarker_large)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"use-case-1-quality-metrics-dashboard","dir":"Articles","previous_headings":"Clinical Applications and Use Cases","what":"Use Case 1: Quality Metrics Dashboard","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Create quality metrics data quality_data <- data.frame(   metric = c(\"Patient_Satisfaction\", \"Wait_Time\", \"Accuracy\", \"Efficiency\",               \"Safety_Score\", \"Readmission_Rate\", \"Mortality_Rate\", \"Infection_Rate\"),   value = c(8.5, 6.2, 9.1, 7.8, 8.9, 5.2, 3.1, 4.3),   target = c(8.0, 7.0, 9.0, 8.0, 9.0, 5.0, 3.0, 4.0),   department = c(\"Nursing\", \"Admin\", \"Lab\", \"Surgery\", \"ICU\", \"Cardiology\", \"Oncology\", \"ICU\") )  # Quality metrics dashboard quality_dashboard <- lollipop(   data = quality_data,   dep = \"value\",   group = \"metric\",   sortBy = \"value_desc\",   showValues = TRUE,   title = \"Hospital Quality Metrics Dashboard\",   ylabel = \"Score / Rate\",   xlabel = \"Quality Metric\",   theme = \"publication\" )  print(quality_dashboard)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"clinical-value","dir":"Articles","previous_headings":"Clinical Applications and Use Cases > Use Case 1: Quality Metrics Dashboard","what":"Clinical Value","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Performance Monitoring: Track key hospital performance indicators Benchmark Comparison: Compare targets national averages Priority Setting: Identify areas needing improvement Stakeholder Communication: Clear visualization hospital administration","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"use-case-2-survey-response-analysis","dir":"Articles","previous_headings":"Clinical Applications and Use Cases","what":"Use Case 2: Survey Response Analysis","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Create survey data survey_data <- data.frame(   question = paste0(\"Q\", 1:10),   satisfaction_score = c(7.2, 8.1, 6.9, 8.7, 7.5, 8.3, 6.8, 7.9, 8.2, 7.1),   category = c(\"Service\", \"Care\", \"Environment\", \"Staff\", \"Communication\",                 \"Wait_Time\", \"Comfort\", \"Information\", \"Respect\", \"Overall\"),   response_rate = c(89, 92, 87, 94, 91, 88, 85, 90, 93, 95) )  # Survey response visualization survey_analysis <- lollipop(   data = survey_data,   dep = \"satisfaction_score\",   group = \"category\",   sortBy = \"value_desc\",   orientation = \"horizontal\",   showValues = TRUE,   showMean = TRUE,   title = \"Patient Satisfaction Survey Results\",   xlabel = \"Satisfaction Score (1-10)\",   ylabel = \"Survey Category\",   colorScheme = \"clinical\" )  print(survey_analysis)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"clinical-applications-1","dir":"Articles","previous_headings":"Clinical Applications and Use Cases > Use Case 2: Survey Response Analysis","what":"Clinical Applications","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Patient Experience: Monitor patient satisfaction across different aspects Improvement Priorities: Identify areas lowest satisfaction Trend Monitoring: Track changes satisfaction time Staff Feedback: Provide specific feedback different departments","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"use-case-3-diagnostic-test-performance","dir":"Articles","previous_headings":"Clinical Applications and Use Cases","what":"Use Case 3: Diagnostic Test Performance","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Create diagnostic test data diagnostic_data <- data.frame(   test = c(\"Test_A\", \"Test_B\", \"Test_C\", \"Test_D\", \"Test_E\", \"Test_F\"),   sensitivity = c(0.89, 0.92, 0.78, 0.95, 0.83, 0.87),   specificity = c(0.85, 0.88, 0.92, 0.82, 0.89, 0.84),   accuracy = c(0.87, 0.90, 0.85, 0.88, 0.86, 0.85),   cost = c(50, 120, 200, 300, 80, 150) )  # Diagnostic test sensitivity comparison diagnostic_sensitivity <- lollipop(   data = diagnostic_data,   dep = \"sensitivity\",   group = \"test\",   sortBy = \"value_desc\",   showValues = TRUE,   highlight = \"Test_D\",   title = \"Diagnostic Test Sensitivity Comparison\",   ylabel = \"Sensitivity\",   xlabel = \"Diagnostic Test\",   theme = \"publication\" )  print(diagnostic_sensitivity)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"clinical-decision-support","dir":"Articles","previous_headings":"Clinical Applications and Use Cases > Use Case 3: Diagnostic Test Performance","what":"Clinical Decision Support","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Test Selection: Compare diagnostic performance across tests Cost-Effectiveness: Balance performance cost considerations Clinical Guidelines: Support evidence-based test selection Quality Assurance: Monitor test performance time","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"descriptive-statistics","dir":"Articles","previous_headings":"Statistical Integration and Analysis","what":"Descriptive Statistics","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Calculate descriptive statistics for biomarker data biomarker_stats <- biomarker_data %>%   summarise(     n = n(),     mean = round(mean(biomarker_level), 2),     median = round(median(biomarker_level), 2),     sd = round(sd(biomarker_level), 2),     min = round(min(biomarker_level), 2),     max = round(max(biomarker_level), 2),     q25 = round(quantile(biomarker_level, 0.25), 2),     q75 = round(quantile(biomarker_level, 0.75), 2)   )  cat(\"=== BIOMARKER DESCRIPTIVE STATISTICS ===\\n\") cat(\"Sample size:\", biomarker_stats$n, \"\\n\") cat(\"Mean:\", biomarker_stats$mean, \"ng/mL\\n\") cat(\"Median:\", biomarker_stats$median, \"ng/mL\\n\") cat(\"Standard deviation:\", biomarker_stats$sd, \"ng/mL\\n\") cat(\"Range:\", biomarker_stats$min, \"-\", biomarker_stats$max, \"ng/mL\\n\") cat(\"Interquartile range:\", biomarker_stats$q25, \"-\", biomarker_stats$q75, \"ng/mL\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"outlier-detection-1","dir":"Articles","previous_headings":"Statistical Integration and Analysis","what":"Outlier Detection","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Identify outliers in biomarker data Q1 <- quantile(biomarker_data$biomarker_level, 0.25) Q3 <- quantile(biomarker_data$biomarker_level, 0.75) IQR <- Q3 - Q1  lower_bound <- Q1 - 1.5 * IQR upper_bound <- Q3 + 1.5 * IQR  outliers <- biomarker_data %>%   filter(biomarker_level < lower_bound | biomarker_level > upper_bound)  cat(\"=== OUTLIER ANALYSIS ===\\n\") cat(\"Lower bound:\", round(lower_bound, 2), \"ng/mL\\n\") cat(\"Upper bound:\", round(upper_bound, 2), \"ng/mL\\n\") cat(\"Number of outliers:\", nrow(outliers), \"\\n\")  if (nrow(outliers) > 0) {   cat(\"Outlier patients:\\n\")   print(outliers[, c(\"patient_id\", \"biomarker_level\", \"risk_category\")]) }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"comparative-analysis-1","dir":"Articles","previous_headings":"Statistical Integration and Analysis","what":"Comparative Analysis","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Compare biomarker levels by risk category risk_comparison <- biomarker_data %>%   group_by(risk_category) %>%   summarise(     n = n(),     mean = round(mean(biomarker_level), 2),     median = round(median(biomarker_level), 2),     sd = round(sd(biomarker_level), 2),     .groups = 'drop'   )  cat(\"=== BIOMARKER LEVELS BY RISK CATEGORY ===\\n\") print(risk_comparison)  # Statistical test for differences if (requireNamespace(\"stats\", quietly = TRUE)) {   kruskal_test <- kruskal.test(biomarker_level ~ risk_category, data = biomarker_data)   cat(\"\\nKruskal-Wallis test for differences between risk categories:\\n\")   cat(\"Chi-square =\", round(kruskal_test$statistic, 3), \"\\n\")   cat(\"p-value =\", round(kruskal_test$p.value, 6), \"\\n\")   cat(\"Interpretation:\", ifelse(kruskal_test$p.value < 0.05,                                \"Significant differences between groups\",                                \"No significant differences between groups\"), \"\\n\") }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"comprehensive-feature-combination","dir":"Articles","previous_headings":"Advanced Features and Customization","what":"Comprehensive Feature Combination","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Create a comprehensive example with all features comprehensive_analysis <- lollipop(   data = treatment_data,   dep = \"response_score\",   group = \"treatment\",   highlight = \"Combination_E\",   sortBy = \"value_desc\",   orientation = \"horizontal\",   showValues = TRUE,   showMean = TRUE,   colorScheme = \"clinical\",   theme = \"publication\",   pointSize = 4,   lineWidth = 1.5,   xlabel = \"Response Score (%)\",   ylabel = \"Treatment Type\",   title = \"Comprehensive Treatment Response Analysis\",   width = 1000,   height = 600 )  print(comprehensive_analysis)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"multiple-dataset-comparison","dir":"Articles","previous_headings":"Advanced Features and Customization","what":"Multiple Dataset Comparison","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Compare different aspects of the same treatments cat(\"=== TREATMENT COMPARISON ACROSS MULTIPLE METRICS ===\\n\")  # Response score analysis cat(\"\\n1. Response Score Analysis:\\n\") response_analysis <- treatment_data %>%   select(treatment, response_score) %>%   arrange(desc(response_score)) print(response_analysis)  # Cost analysis cat(\"\\n2. Cost Analysis:\\n\") cost_analysis <- treatment_data %>%   select(treatment, cost_thousands) %>%   arrange(cost_thousands) print(cost_analysis)  # Cost-effectiveness ratio cat(\"\\n3. Cost-Effectiveness Analysis:\\n\") cost_effectiveness <- treatment_data %>%   mutate(cost_per_response = round(cost_thousands / response_score * 100, 2)) %>%   select(treatment, response_score, cost_thousands, cost_per_response) %>%   arrange(cost_per_response) print(cost_effectiveness)"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"data-quality-assessment","dir":"Articles","previous_headings":"Best Practices and Clinical Guidelines > Data Preparation Guidelines","what":"1. Data Quality Assessment","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Check data quality before visualization check_data_quality <- function(data, dep_var, group_var) {   cat(\"=== DATA QUALITY ASSESSMENT ===\\n\")      # Check for missing values   missing_dep <- sum(is.na(data[[dep_var]]))   missing_group <- sum(is.na(data[[group_var]]))      cat(\"Missing values in dependent variable:\", missing_dep, \"\\n\")   cat(\"Missing values in grouping variable:\", missing_group, \"\\n\")      # Check for duplicates   duplicates <- sum(duplicated(data[[group_var]]))   cat(\"Duplicate categories:\", duplicates, \"\\n\")      # Check data types   cat(\"Dependent variable type:\", class(data[[dep_var]]), \"\\n\")   cat(\"Grouping variable type:\", class(data[[group_var]]), \"\\n\")      # Check ranges   if (is.numeric(data[[dep_var]])) {     cat(\"Value range:\", round(min(data[[dep_var]], na.rm = TRUE), 2), \"-\",          round(max(data[[dep_var]], na.rm = TRUE), 2), \"\\n\")   }      # Check number of categories   n_categories <- length(unique(data[[group_var]]))   cat(\"Number of categories:\", n_categories, \"\\n\")      if (n_categories > 50) {     cat(\"WARNING: Many categories (>50) may result in cluttered visualization\\n\")   } }  # Check biomarker data quality check_data_quality(biomarker_data, \"biomarker_level\", \"patient_id\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"clinical-reference-ranges","dir":"Articles","previous_headings":"Best Practices and Clinical Guidelines > Data Preparation Guidelines","what":"2. Clinical Reference Ranges","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Define clinical reference ranges clinical_ranges <- list(   biomarker = list(     normal = c(0, 40),     elevated = c(40, 70),     high = c(70, 150)   ),   response = list(     poor = c(0, 30),     moderate = c(30, 60),     good = c(60, 100)   ) )  # Function to categorize values categorize_biomarker <- function(value) {   if (value <= 40) return(\"Normal\")   if (value <= 70) return(\"Elevated\")   return(\"High\") }  # Apply clinical categorization biomarker_data$clinical_category <- sapply(biomarker_data$biomarker_level, categorize_biomarker)  cat(\"=== CLINICAL CATEGORIZATION ===\\n\") table(biomarker_data$clinical_category)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"color-usage-guidelines","dir":"Articles","previous_headings":"Best Practices and Clinical Guidelines > Visualization Best Practices","what":"1. Color Usage Guidelines","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"cat(\"=== COLOR USAGE GUIDELINES ===\\n\") cat(\"1. Use colorblind-safe palettes for publications\\n\") cat(\"2. Limit to 6-8 colors maximum for clarity\\n\") cat(\"3. Use highlighting sparingly for emphasis\\n\") cat(\"4. Consider cultural color associations (red = danger, green = safe)\\n\") cat(\"5. Maintain consistency across related charts\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"chart-layout-recommendations","dir":"Articles","previous_headings":"Best Practices and Clinical Guidelines > Visualization Best Practices","what":"2. Chart Layout Recommendations","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"cat(\"=== CHART LAYOUT RECOMMENDATIONS ===\\n\") cat(\"1. Use horizontal orientation for long category names\\n\") cat(\"2. Sort by value for ranking displays\\n\") cat(\"3. Include value labels for precise communication\\n\") cat(\"4. Add reference lines for clinical thresholds\\n\") cat(\"5. Use appropriate aspect ratios (width:height)\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"statistical-annotation","dir":"Articles","previous_headings":"Best Practices and Clinical Guidelines > Visualization Best Practices","what":"3. Statistical Annotation","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"cat(\"=== STATISTICAL ANNOTATION GUIDELINES ===\\n\") cat(\"1. Include sample sizes when relevant\\n\") cat(\"2. Add confidence intervals for estimates\\n\") cat(\"3. Note statistical significance levels\\n\") cat(\"4. Provide effect size measures\\n\") cat(\"5. Include relevant clinical thresholds\\n\")"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"visual-pattern-recognition","dir":"Articles","previous_headings":"Clinical Interpretation and Communication > Interpretation Framework","what":"1. Visual Pattern Recognition","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"cat(\"=== VISUAL PATTERN RECOGNITION ===\\n\") cat(\"1. Outliers: Points far from the group\\n\") cat(\"2. Clusters: Groups of similar values\\n\") cat(\"3. Trends: Gradual increases or decreases\\n\") cat(\"4. Gaps: Missing values or ranges\\n\") cat(\"5. Skewness: Asymmetric distributions\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"clinical-significance-assessment","dir":"Articles","previous_headings":"Clinical Interpretation and Communication > Interpretation Framework","what":"2. Clinical Significance Assessment","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"# Assess clinical significance of biomarker levels assess_clinical_significance <- function(data, threshold = 60) {   high_risk <- sum(data$biomarker_level > threshold)   total <- nrow(data)   percentage <- round(high_risk / total * 100, 1)      cat(\"=== CLINICAL SIGNIFICANCE ASSESSMENT ===\\n\")   cat(\"Patients above threshold (\", threshold, \" ng/mL):\", high_risk, \"/\", total, \" (\", percentage, \"%)\\n\")   cat(\"Clinical interpretation:\",        if (percentage > 30) \"High proportion of at-risk patients\"        else if (percentage > 10) \"Moderate proportion of at-risk patients\"       else \"Low proportion of at-risk patients\", \"\\n\") }  assess_clinical_significance(biomarker_data)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"for-clinical-colleagues","dir":"Articles","previous_headings":"Clinical Interpretation and Communication > Communication Strategies","what":"1. For Clinical Colleagues","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"cat(\"=== COMMUNICATION FOR CLINICAL COLLEAGUES ===\\n\") cat(\"1. Focus on clinical significance over statistical significance\\n\") cat(\"2. Use familiar clinical terminology and units\\n\") cat(\"3. Highlight actionable findings\\n\") cat(\"4. Provide clear recommendations\\n\") cat(\"5. Include confidence intervals and limitations\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"for-patients-and-families","dir":"Articles","previous_headings":"Clinical Interpretation and Communication > Communication Strategies","what":"2. For Patients and Families","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"cat(\"=== COMMUNICATION FOR PATIENTS AND FAMILIES ===\\n\") cat(\"1. Use simple, non-technical language\\n\") cat(\"2. Focus on individual patient results\\n\") cat(\"3. Explain what normal ranges mean\\n\") cat(\"4. Provide reassurance and context\\n\") cat(\"5. Offer clear next steps\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"for-administrators-and-stakeholders","dir":"Articles","previous_headings":"Clinical Interpretation and Communication > Communication Strategies","what":"3. For Administrators and Stakeholders","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"cat(\"=== COMMUNICATION FOR ADMINISTRATORS ===\\n\") cat(\"1. Emphasize quality metrics and outcomes\\n\") cat(\"2. Include cost-effectiveness considerations\\n\") cat(\"3. Provide benchmarking data\\n\") cat(\"4. Highlight improvement opportunities\\n\") cat(\"5. Quantify potential impacts\\n\")"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"data-related-errors","dir":"Articles","previous_headings":"Troubleshooting and Common Issues > Common Error Messages","what":"1. Data-Related Errors","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"cat(\"=== COMMON DATA-RELATED ERRORS ===\\n\") cat(\"1. 'Variable not found': Check variable names and spelling\\n\") cat(\"2. 'Dependent variable must be numeric': Ensure numeric data type\\n\") cat(\"3. 'At least 2 observations required': Check for sufficient data\\n\") cat(\"4. 'No complete cases found': Address missing values\\n\") cat(\"5. 'Grouping variable must have at least 2 categories': Check group variable\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"visualization-issues","dir":"Articles","previous_headings":"Troubleshooting and Common Issues > Common Error Messages","what":"2. Visualization Issues","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"cat(\"=== COMMON VISUALIZATION ISSUES ===\\n\") cat(\"1. Overlapping labels: Use horizontal orientation or smaller font\\n\") cat(\"2. Too many categories: Consider grouping or filtering\\n\") cat(\"3. Unclear patterns: Try different sorting or highlighting\\n\") cat(\"4. Poor color contrast: Use colorblind-safe palettes\\n\") cat(\"5. Inappropriate scale: Check for outliers or transform data\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"large-dataset-handling","dir":"Articles","previous_headings":"Troubleshooting and Common Issues > Performance Optimization","what":"1. Large Dataset Handling","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"","code":"cat(\"=== PERFORMANCE OPTIMIZATION TIPS ===\\n\") cat(\"1. Filter data before visualization for large datasets\\n\") cat(\"2. Use sampling for exploratory analysis\\n\") cat(\"3. Consider aggregation for many categories\\n\") cat(\"4. Optimize plot dimensions for intended use\\n\") cat(\"5. Use appropriate file formats for different purposes\\n\")"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"when-to-use-lollipop-charts-1","dir":"Articles","previous_headings":"Summary and Conclusions > Key Takeaways","what":"1. When to Use Lollipop Charts","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Individual emphasis: highlighting individual data points important Categorical comparisons: Comparing values across categories groups Sparse data: data points widely spaced Professional appearance: publications presentations Ranking displays: ordering important","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"clinical-applications-2","dir":"Articles","previous_headings":"Summary and Conclusions > Key Takeaways","what":"2. Clinical Applications","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Patient-level analysis: Individual biomarker levels, outcomes, timelines Treatment comparisons: Efficacy, safety, cost-effectiveness Quality metrics: Performance indicators, satisfaction scores Survey results: Patient feedback, staff assessments Diagnostic performance: Test characteristics, accuracy measures","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"best-practices","dir":"Articles","previous_headings":"Summary and Conclusions > Key Takeaways","what":"3. Best Practices","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Data quality: Ensure clean, complete data visualization Clinical context: Use appropriate reference ranges thresholds Clear communication: Tailor visualizations audience Statistical rigor: Include appropriate statistical measures Accessibility: Use colorblind-safe palettes clear labeling","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"advanced-features","dir":"Articles","previous_headings":"Summary and Conclusions > Future Directions","what":"1. Advanced Features","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Interactive elements: Hover information, clickable points Animation: Showing changes time Faceting: Multiple panels subgroup analysis Statistical overlays: Confidence intervals, significance tests Export options: Various formats different uses","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"integration-opportunities","dir":"Articles","previous_headings":"Summary and Conclusions > Future Directions","what":"2. Integration Opportunities","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Electronic health records: Direct data import visualization Clinical decision support: Real-time analysis alerts Quality improvement: Continuous monitoring feedback Research applications: Publication-ready figures Patient engagement: Personalized health visualizations","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"statistical-methods","dir":"Articles","previous_headings":"Summary and Conclusions > Resources and References","what":"1. Statistical Methods","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Descriptive statistics data visualization principles Outlier detection robust statistics Comparative analysis methods Clinical reference ranges thresholds","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"clinical-guidelines","dir":"Articles","previous_headings":"Summary and Conclusions > Resources and References","what":"2. Clinical Guidelines","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"Quality metric standards Patient safety indicators Treatment effectiveness measures Biomarker interpretation guidelines","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/31-lollipop-comprehensive.html","id":"technical-documentation","dir":"Articles","previous_headings":"Summary and Conclusions > Resources and References","what":"3. Technical Documentation","title":"Lollipop Charts for Clinical Categorical Data Visualization","text":"R documentation package information ggplot2 visualization principles Color theory accessibility Statistical computing resources comprehensive guide provides thorough introduction lollipop charts clinical research. additional support, consult package documentation contact development team.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"introduction-to-jjstreamgraph","dir":"Articles","previous_headings":"","what":"Introduction to jjstreamgraph","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"jjstreamgraph function powerful wrapper around streamgraph R package creates interactive, flowing stream graphs visualizing time series data multiple categories. Stream graphs particularly effective showing changes composition time, making ideal financial data, web analytics, epidemiological trends, multi-category time series analysis.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"Introduction to jjstreamgraph","what":"Key Features","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Interactive Visualization: Mouse-effects dynamic highlighting Multiple Layout Options: Silhouette, zero baseline, expanded views Flexible Interpolation: Smooth, linear, step interpolation data points Color Palettes: Multiple ColorBrewer palettes optimal data distinction Performance Optimized: Enhanced caching data preparation faster rendering Comprehensive Error Handling: Robust validation user-friendly error messages","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"loading-required-libraries","dir":"Articles","previous_headings":"Introduction to jjstreamgraph","what":"Loading Required Libraries","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"library(jjstatsplot) library(dplyr) library(lubridate)  # For this vignette, we'll create sample data set.seed(123)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"simple-time-series-example","dir":"Articles","previous_headings":"Basic Stream Graph Creation","what":"Simple Time Series Example","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Let’s start basic stream graph showing product sales time:","code":"# Create sample product sales data sales_data <- data.frame(   month = rep(1:12, 4),   sales = c(     cumsum(rnorm(12, 5, 2)) + 20,   # Product A     cumsum(rnorm(12, 3, 1.5)) + 15, # Product B     cumsum(rnorm(12, 4, 1.8)) + 18, # Product C     cumsum(rnorm(12, 2, 1)) + 10    # Product D   ),   product = factor(rep(c(\"Product A\", \"Product B\", \"Product C\", \"Product D\"), each = 12)) )  # Ensure positive values for stream graphs sales_data$sales <- pmax(sales_data$sales, 1)  # Create basic stream graph result_basic <- jjstreamgraph(   data = sales_data,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\",   offset = \"silhouette\",   interpolate = \"cardinal\",   palette = \"Blues\" )  print(result_basic)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"time-variable-x-axis","dir":"Articles","previous_headings":"Basic Stream Graph Creation > Understanding Stream Graph Components","what":"Time Variable (X-axis)","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Represents temporal dimension Can numeric (months, years, quarters) dates consistent intervals best results","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"value-variable-y-axisheight","dir":"Articles","previous_headings":"Basic Stream Graph Creation > Understanding Stream Graph Components","what":"Value Variable (Y-axis/Height)","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Represents magnitude quantity measured Must numeric preferably positive height stream time point","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"grouping-variable-categories","dir":"Articles","previous_headings":"Basic Stream Graph Creation > Understanding Stream Graph Components","what":"Grouping Variable (Categories)","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Categorical variable creates different colored streams category becomes distinct flowing band meaningful category names interpretation","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"different-offset-types","dir":"Articles","previous_headings":"Layout and Styling Options","what":"Different Offset Types","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"offset parameter controls streams positioned relative :","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"silhouette-layout-default","dir":"Articles","previous_headings":"Layout and Styling Options > Different Offset Types","what":"Silhouette Layout (Default)","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"result_silhouette <- jjstreamgraph(   data = sales_data,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\",   offset = \"silhouette\",   palette = \"Set1\" )  print(result_silhouette)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"zero-baseline-layout","dir":"Articles","previous_headings":"Layout and Styling Options > Different Offset Types","what":"Zero Baseline Layout","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"result_zero <- jjstreamgraph(   data = sales_data,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\",   offset = \"zero\",   palette = \"Greens\" )  print(result_zero)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"expanded-percentage-layout","dir":"Articles","previous_headings":"Layout and Styling Options > Different Offset Types","what":"Expanded (Percentage) Layout","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"result_expand <- jjstreamgraph(   data = sales_data,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\",   offset = \"expand\",   palette = \"Reds\" )  print(result_expand)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"smooth-cardinal-interpolation","dir":"Articles","previous_headings":"Layout and Styling Options > Interpolation Methods","what":"Smooth (Cardinal) Interpolation","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"result_smooth <- jjstreamgraph(   data = sales_data,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\",   interpolate = \"cardinal\",   palette = \"Pastel1\" )  print(result_smooth)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"linear-interpolation","dir":"Articles","previous_headings":"Layout and Styling Options > Interpolation Methods","what":"Linear Interpolation","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"result_linear <- jjstreamgraph(   data = sales_data,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\",   interpolate = \"linear\",   palette = \"Set1\" )  print(result_linear)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"step-interpolation","dir":"Articles","previous_headings":"Layout and Styling Options > Interpolation Methods","what":"Step Interpolation","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"result_step <- jjstreamgraph(   data = sales_data,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\",   interpolate = \"step\",   palette = \"Blues\" )  print(result_step)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"available-palette-options","dir":"Articles","previous_headings":"Color Palettes","what":"Available Palette Options","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"palettes <- c(\"Blues\", \"Greens\", \"Reds\", \"Pastel1\", \"Set1\")  for (palette in palettes[1:3]) {  # Show first 3 for space   cat(\"### Palette:\", palette, \"\\n\")   result_palette <- jjstreamgraph(     data = sales_data,     timeVar = \"month\",     valueVar = \"sales\",     groupVar = \"product\",     palette = palette   )   print(result_palette) }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"financial-data-visualization","dir":"Articles","previous_headings":"Real-World Applications","what":"Financial Data Visualization","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Example with financial sector data financial_data <- data.frame(   quarter = rep(1:20, 5),  # 5 years of quarterly data   revenue = c(     cumsum(rnorm(20, 8, 3)) + 200,   # Technology     cumsum(rnorm(20, 6, 2.5)) + 150, # Healthcare     cumsum(rnorm(20, 4, 2)) + 100,   # Energy     cumsum(rnorm(20, 5, 2.2)) + 120, # Finance     cumsum(rnorm(20, 3, 1.8)) + 80   # Consumer   ),   sector = factor(rep(c(\"Technology\", \"Healthcare\", \"Energy\", \"Finance\", \"Consumer\"), each = 20)) )  financial_result <- jjstreamgraph(   data = financial_data,   timeVar = \"quarter\",   valueVar = \"revenue\",   groupVar = \"sector\",   offset = \"zero\",   interpolate = \"cardinal\",   palette = \"Set1\",   width = \"1000px\",   height = \"600px\" )  print(financial_result)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"web-analytics-dashboard","dir":"Articles","previous_headings":"Real-World Applications","what":"Web Analytics Dashboard","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Example with web traffic data web_data <- data.frame(   week = rep(1:52, 6),   visitors = c(     500 + cumsum(rnorm(52, 2, 10)),  # Organic Search     300 + cumsum(rnorm(52, 1, 8)),   # Direct     200 + cumsum(rnorm(52, 0.5, 12)), # Social Media     150 + cumsum(rnorm(52, 1.2, 6)), # Email     100 + cumsum(rnorm(52, 0.8, 5)), # Paid Ads     80 + cumsum(rnorm(52, 0.3, 4))   # Referral   ),   source = factor(rep(c(\"Organic Search\", \"Direct\", \"Social Media\", \"Email\", \"Paid Ads\", \"Referral\"), each = 52)) )  # Ensure positive values web_data$visitors <- pmax(web_data$visitors, 1)  web_result <- jjstreamgraph(   data = web_data,   timeVar = \"week\",   valueVar = \"visitors\",   groupVar = \"source\",   offset = \"silhouette\",   palette = \"Blues\" )  print(web_result)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"clinical-research-applications","dir":"Articles","previous_headings":"Real-World Applications","what":"Clinical Research Applications","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Example with patient enrollment data clinical_data <- data.frame(   week = rep(1:26, 4),  # 6 months of weekly data   patients = c(     cumsum(rpois(26, 3)),  # Site 1     cumsum(rpois(26, 4)),  # Site 2     cumsum(rpois(26, 2)),  # Site 3     cumsum(rpois(26, 5))   # Site 4   ),   site = factor(rep(paste(\"Site\", 1:4), each = 26)) )  clinical_result <- jjstreamgraph(   data = clinical_data,   timeVar = \"week\",   valueVar = \"patients\",   groupVar = \"site\",   offset = \"zero\",   interpolate = \"linear\",   palette = \"Greens\" )  print(clinical_result)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"custom-dimensions","dir":"Articles","previous_headings":"Advanced Customization","what":"Custom Dimensions","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Create stream graph with custom size result_custom_size <- jjstreamgraph(   data = sales_data,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\",   width = \"1200px\",   height = \"700px\",   palette = \"Set1\" )  print(result_custom_size)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"working-with-date-variables","dir":"Articles","previous_headings":"Advanced Customization","what":"Working with Date Variables","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Create data with actual dates date_data <- data.frame(   date = rep(seq(as.Date(\"2023-01-01\"), as.Date(\"2023-12-01\"), by = \"month\"), 3),   metric = c(     cumsum(rnorm(12, 2, 1)) + 15,  # Metric A     cumsum(rnorm(12, 1.5, 0.8)) + 12, # Metric B     cumsum(rnorm(12, 1, 0.6)) + 10    # Metric C   ),   category = factor(rep(c(\"Category A\", \"Category B\", \"Category C\"), each = 12)) )  # Convert dates to numeric for streamgraph date_data$date_numeric <- as.numeric(date_data$date)  date_result <- jjstreamgraph(   data = date_data,   timeVar = \"date_numeric\",   valueVar = \"metric\",   groupVar = \"category\",   offset = \"silhouette\",   palette = \"Blues\" )  print(date_result)"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"time-series-structure","dir":"Articles","previous_headings":"Data Preparation and Best Practices > Data Requirements","what":"1. Time Series Structure","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Data long format (one row per time-category combination) Consistent time intervals work best Missing time points can cause visual discontinuities","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"value-preparation","dir":"Articles","previous_headings":"Data Preparation and Best Practices > Data Requirements","what":"2. Value Preparation","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Example of proper data preparation raw_data <- data.frame(   time = rep(1:10, 3),   value = c(rnorm(10, 5, 2), rnorm(10, -2, 1), rnorm(10, 8, 3)),   group = factor(rep(c(\"A\", \"B\", \"C\"), each = 10)) )  # Stream graphs work best with positive values prepared_data <- raw_data %>%   mutate(     # Ensure positive values     value_positive = pmax(value, 0.1),     # Optional: smooth extreme values     value_smoothed = pmax(pmin(value_positive, quantile(value_positive, 0.95)),                           quantile(value_positive, 0.05))   )  head(prepared_data)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"category-management","dir":"Articles","previous_headings":"Data Preparation and Best Practices > Data Requirements","what":"3. Category Management","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Ensure meaningful category names sales_data_clean <- sales_data %>%   mutate(     product = factor(product,                      levels = c(\"Product A\", \"Product B\", \"Product C\", \"Product D\"),                     labels = c(\"Premium Line\", \"Standard Line\", \"Budget Line\", \"Specialty Line\"))   )  result_clean <- jjstreamgraph(   data = sales_data_clean,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\",   palette = \"Set1\" )  print(result_clean)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"handling-missing-values","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Handling Missing Values","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Data with missing values data_with_na <- sales_data data_with_na$sales[c(5, 15, 25)] <- NA  # The function automatically handles missing values result_na <- jjstreamgraph(   data = data_with_na,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\" )  print(result_na)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"dealing-with-irregular-time-series","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Dealing with Irregular Time Series","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Irregular time intervals irregular_data <- data.frame(   time = c(1, 3, 5, 8, 12, 15, 20, 25, 30, 35),   value = cumsum(rnorm(10, 2, 1)) + 10,   group = \"Single Group\" )  # Add more groups for stream graph irregular_expanded <- bind_rows(   irregular_data,   irregular_data %>% mutate(group = \"Group B\", value = value * 0.8),   irregular_data %>% mutate(group = \"Group C\", value = value * 1.2) )  result_irregular <- jjstreamgraph(   data = irregular_expanded,   timeVar = \"time\",   valueVar = \"value\",   groupVar = \"group\",   interpolate = \"linear\"  # Linear works better for irregular intervals )  print(result_irregular)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"large-dataset-handling","dir":"Articles","previous_headings":"Performance Considerations","what":"Large Dataset Handling","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"function includes several performance optimizations:","code":"# Performance test with larger dataset large_data <- data.frame(   time = rep(1:365, 8),  # Daily data for 8 categories   value = as.vector(replicate(8, cumsum(rnorm(365, 1, 2)) + 20)),   category = factor(rep(paste(\"Category\", 1:8), each = 365)) )  # This should render efficiently due to optimizations start_time <- Sys.time() performance_result <- jjstreamgraph(   data = large_data,   timeVar = \"time\",   valueVar = \"value\",   groupVar = \"category\",   palette = \"Set1\" ) end_time <- Sys.time()  cat(\"Rendering time:\", difftime(end_time, start_time, units = \"secs\"), \"seconds\\n\") print(performance_result)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"optimization-features","dir":"Articles","previous_headings":"Performance Considerations","what":"Optimization Features","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"function implements several performance enhancements: Data Preparation Caching: Processed data cached avoid recomputation Option Preprocessing: Common option processing done cached Hash-based Change Detection: reprocesses data inputs change Efficient Memory Usage: Minimizes data copying transformation overhead Error Handling: Comprehensive validation prevents unnecessary processing","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"ideal-use-cases","dir":"Articles","previous_headings":"Comparison with Other Visualization Types > When to Use Stream Graphs","what":"✅ Ideal Use Cases:","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Multi-category time series: 3+ categories changing time Composition analysis: Understanding proportions change time Flow visualization: Showing smooth transitions trends Interactive exploration: users need hover explore data points","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"consider-alternatives-when","dir":"Articles","previous_headings":"Comparison with Other Visualization Types > When to Use Stream Graphs","what":"⚠️ Consider Alternatives When:","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Precise value reading: Line charts may better exact values categories (< 3): Simple line area charts might clearer Static presentations: Stream graphs lose impact without interactivity Negative values: Consider transforming data using different chart types","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"stream-graph-vs--stacked-area-chart","dir":"Articles","previous_headings":"Comparison with Other Visualization Types","what":"Stream Graph vs. Stacked Area Chart","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Stream graph emphasizes flow and composition stream_result <- jjstreamgraph(   data = sales_data,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\",   offset = \"silhouette\",   palette = \"Blues\" )  # Zero-baseline stream graph similar to stacked area stacked_result <- jjstreamgraph(   data = sales_data,   timeVar = \"month\",   valueVar = \"sales\",   groupVar = \"product\",   offset = \"zero\",   palette = \"Blues\" )  print(stream_result) print(stacked_result)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"design-guidelines","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Design Guidelines","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Color Selection: Use ColorBrewer palettes accessibility clarity Category Limits: 3-8 categories work best; many become cluttered Time Granularity: Choose appropriate time intervals data story Interpolation Choice: Smooth trends, linear accurate representation Layout Selection: Silhouette emphasis overall patterns, zero baseline comparison","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"data-quality-tips","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Data Quality Tips","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Check data quality before visualization check_data_quality <- function(data, time_var, value_var, group_var) {   cat(\"Data Quality Check:\\n\")   cat(\"- Total rows:\", nrow(data), \"\\n\")   cat(\"- Missing values in time variable:\", sum(is.na(data[[time_var]])), \"\\n\")   cat(\"- Missing values in value variable:\", sum(is.na(data[[value_var]])), \"\\n\")   cat(\"- Missing values in group variable:\", sum(is.na(data[[group_var]])), \"\\n\")   cat(\"- Number of groups:\", length(unique(data[[group_var]])), \"\\n\")   cat(\"- Time range:\", min(data[[time_var]], na.rm = TRUE), \"to\", max(data[[time_var]], na.rm = TRUE), \"\\n\")   cat(\"- Value range:\", min(data[[value_var]], na.rm = TRUE), \"to\", max(data[[value_var]], na.rm = TRUE), \"\\n\")      negative_values <- sum(data[[value_var]] < 0, na.rm = TRUE)   if (negative_values > 0) {     cat(\"- WARNING:\", negative_values, \"negative values found (consider transformation)\\n\")   } }  # Example usage check_data_quality(sales_data, \"month\", \"sales\", \"product\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"performance-tips","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Performance Tips","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Data Size: large datasets (>10k rows), consider aggregating sampling Time Intervals: Regular intervals perform better irregular ones Category Count: Limit 8-10 categories optimal performance Browser Considerations: Stream graphs interactive require modern browsers","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"example-disease-surveillance","dir":"Articles","previous_headings":"Integration with Clinical Workflows","what":"Example: Disease Surveillance","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Example for epidemiological surveillance surveillance_data <- data.frame(   week = rep(1:52, 4),   cases = c(     rpois(52, lambda = 5 + 3 * sin(2 * pi * (1:52) / 52)),  # Seasonal disease A     rpois(52, lambda = 3 + 2 * sin(2 * pi * (1:52) / 26)),  # Seasonal disease B     rpois(52, lambda = 2),                                   # Endemic disease C     c(rep(1, 30), rpois(22, 15))                            # Outbreak disease D   ),   disease = factor(rep(c(\"Influenza\", \"RSV\", \"COVID-19\", \"Norovirus\"), each = 52)) )  surveillance_result <- jjstreamgraph(   data = surveillance_data,   timeVar = \"week\",   valueVar = \"cases\",   groupVar = \"disease\",   offset = \"zero\",   palette = \"Reds\",   width = \"1000px\",   height = \"500px\" )  print(surveillance_result)"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"data-contains-no-complete-rows","dir":"Articles","previous_headings":"Troubleshooting Guide > Common Error Messages","what":"“Data contains no (complete) rows”","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Cause: rows missing values required variables Solution: Check missing data clean visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"error-creating-streamgraph","dir":"Articles","previous_headings":"Troubleshooting Guide > Common Error Messages","what":"“Error creating streamgraph”","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Cause: Data format issues insufficient data points Solution: Ensure numeric time/value variables multiple time points per group","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"empty-or-no-stream-graph-displayed","dir":"Articles","previous_headings":"Troubleshooting Guide > Common Error Messages","what":"Empty or No Stream Graph Displayed","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"Cause: Missing variable selections incompatible data types Solution: Verify three variables (time, value, group) selected appropriate","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"data-format-validation","dir":"Articles","previous_headings":"Troubleshooting Guide","what":"Data Format Validation","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"","code":"# Function to validate data format validate_streamgraph_data <- function(data, time_var, value_var, group_var) {   errors <- c()      # Check if variables exist   if (!time_var %in% names(data)) errors <- c(errors, \"Time variable not found in data\")   if (!value_var %in% names(data)) errors <- c(errors, \"Value variable not found in data\")    if (!group_var %in% names(data)) errors <- c(errors, \"Group variable not found in data\")      if (length(errors) > 0) return(errors)      # Check data types   if (!is.numeric(data[[time_var]])) errors <- c(errors, \"Time variable must be numeric\")   if (!is.numeric(data[[value_var]])) errors <- c(errors, \"Value variable must be numeric\")      # Check for sufficient data   complete_rows <- sum(complete.cases(data[c(time_var, value_var, group_var)]))   if (complete_rows < 3) errors <- c(errors, \"Need at least 3 complete data rows\")      # Check for multiple groups   if (length(unique(data[[group_var]])) < 2) {     errors <- c(errors, \"Need at least 2 groups for stream graph\")   }      if (length(errors) == 0) {     return(\"Data validation passed!\")   } else {     return(errors)   } }  # Test validation validate_streamgraph_data(sales_data, \"month\", \"sales\", \"product\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"jjstreamgraph function provides comprehensive solution time series visualization : Interactive stream graphs multiple layout styling options Performance optimizations efficient rendering Robust error handling data validation Flexible customization various use cases Clinical research applications epidemiological patient data makes excellent choice exploring temporal patterns multi-category data across research, clinical, business applications.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jjstreamgraph-comprehensive.html","id":"function-reference","dir":"Articles","previous_headings":"Summary","what":"Function Reference","title":"jjstreamgraph: Comprehensive Interactive Stream Graph Visualization","text":"complete parameter documentation, see streamgraph package documentation: - CRAN streamgraph documentation","code":"# Session information sessionInfo()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Social Science Statistical Visualization with jsjplot","text":"jsjplot function provides comprehensive social science statistical visualization using powerful sjPlot package. function designed specifically researchers psychology, sociology, political science, economics, related fields need publication-ready statistical visualizations model summaries.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"Introduction","what":"Key Features","title":"Social Science Statistical Visualization with jsjplot","text":"Multiple Analysis Types: Regression tables, coefficient plots, interaction visualizations, marginal effects, frequency tables, correlation matrices, PCA plots Model Support: Linear models (lm), generalized linear models (glm), logistic regression, Poisson regression, mixed effects models Publication Ready: High-quality plots extensive customization options Statistical Tables: HTML-formatted regression tables confidence intervals significance tests Performance Optimized: Intelligent caching system faster repeated analyses Comprehensive Output: Model statistics, summaries, interpretative guidance","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"Introduction","what":"Installation and Setup","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Load required libraries library(jjstatsplot) library(dplyr) library(ggplot2)   # Check if sjPlot is available if (!requireNamespace(\"sjPlot\", quietly = TRUE)) {   message(\"Note: sjPlot package not available. Install with: install.packages('sjPlot')\") }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"Social Science Statistical Visualization with jsjplot","text":"Let’s create realistic datasets different types social science analyses:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"basic-research-data","dir":"Articles","previous_headings":"Data Preparation","what":"Basic Research Data","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Create comprehensive research dataset set.seed(123) research_data <- data.frame(   # Continuous outcomes   life_satisfaction = rnorm(300, 65, 15),   academic_performance = rnorm(300, 75, 12),   income = exp(rnorm(300, 10.5, 0.8)), # Log-normal distribution      # Binary outcomes   employment_status = rbinom(300, 1, 0.7), # 1 = employed   college_graduate = rbinom(300, 1, 0.4),      # Count outcomes   social_activities = rpois(300, 3),   volunteer_hours = rpois(300, 2),      # Continuous predictors   age = round(rnorm(300, 35, 12)),   years_education = round(rnorm(300, 14, 3)),      # Categorical predictors   gender = factor(sample(c(\"Male\", \"Female\"), 300, replace = TRUE)),   marital_status = factor(sample(c(\"Single\", \"Married\", \"Divorced\"),                                  300, replace = TRUE, prob = c(0.4, 0.5, 0.1))),   income_bracket = factor(sample(c(\"Low\", \"Medium\", \"High\"),                                  300, replace = TRUE, prob = c(0.3, 0.4, 0.3))),      # Interaction variables   treatment = factor(sample(c(\"Control\", \"Intervention\"), 300, replace = TRUE)),   baseline_score = rnorm(300, 50, 10) ) %>%   mutate(     # Create realistic relationships     life_satisfaction = life_satisfaction +        0.2 * age +        2 * years_education +        ifelse(marital_status == \"Married\", 8, 0) +        ifelse(gender == \"Female\", 3, 0) +        rnorm(300, 0, 8),          academic_performance = academic_performance +        1.5 * years_education +        ifelse(income_bracket == \"High\", 5, 0) +        rnorm(300, 0, 6),          employment_status = rbinom(300, 1, plogis(-2 +        0.1 * years_education +        0.02 * age +        ifelse(gender == \"Male\", 0.3, 0)))   )  # Display data structure str(research_data)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"coefficient-plots","dir":"Articles","previous_headings":"Basic Usage","what":"Coefficient Plots","title":"Social Science Statistical Visualization with jsjplot","text":"common visualization social science research - coefficient plots show effect sizes confidence intervals:","code":"# Basic coefficient plot result_coef <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"gender\", \"marital_status\"),   model_type = \"lm\" )  # The result contains multiple components print(names(result_coef))"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"regression-tables","dir":"Articles","previous_headings":"Basic Usage","what":"Regression Tables","title":"Social Science Statistical Visualization with jsjplot","text":"Publication-ready regression tables multiple customization options:","code":"result_table <- jsjplot(   data = research_data,   analysis_type = \"regression_table\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"gender\", \"marital_status\"),   model_type = \"lm\",   show_p_values = TRUE,   standardized = FALSE,   confidence_level = 0.95 )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"continuous-outcomes","dir":"Articles","previous_headings":"Analysis Types > 1. Linear Regression Analysis","what":"Continuous Outcomes","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Comprehensive linear model linear_result <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"income_bracket\", \"marital_status\"),   model_type = \"lm\",   show_values = TRUE,   sort_estimates = TRUE,   remove_intercept = TRUE,   theme_style = \"minimal\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"model-diagnostics-and-statistics","dir":"Articles","previous_headings":"Analysis Types > 1. Linear Regression Analysis","what":"Model Diagnostics and Statistics","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Same model with full statistics display linear_stats <- jsjplot(   data = research_data,   analysis_type = \"regression_table\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"income_bracket\", \"marital_status\"),   model_type = \"lm\",   show_statistics = TRUE,   show_summary = TRUE,   html_output = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"binary-outcomes","dir":"Articles","previous_headings":"Analysis Types > 2. Logistic Regression Analysis","what":"Binary Outcomes","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Logistic regression for binary outcomes logistic_result <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"employment_status\",   independent_vars = c(\"age\", \"years_education\", \"gender\", \"marital_status\"),   model_type = \"logistic\",   show_values = TRUE,   colors = \"colorblind\",   title = \"Predictors of Employment Status\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"odds-ratios-visualization","dir":"Articles","previous_headings":"Analysis Types > 2. Logistic Regression Analysis","what":"Odds Ratios Visualization","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Logistic regression with transformed coefficients odds_ratio_result <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"college_graduate\",   independent_vars = c(\"age\", \"years_education\", \"income_bracket\"),   model_type = \"logistic\",   transform_axis = \"log\",   show_values = TRUE,   title = \"Odds Ratios for College Graduation\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"count-outcomes","dir":"Articles","previous_headings":"Analysis Types > 3. Poisson Regression Analysis","what":"Count Outcomes","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Poisson regression for count data poisson_result <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"social_activities\",   independent_vars = c(\"age\", \"life_satisfaction\", \"marital_status\"),   model_type = \"poisson\",   show_values = TRUE,   theme_style = \"apa\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"different-glm-families","dir":"Articles","previous_headings":"Analysis Types > 4. Generalized Linear Models","what":"Different GLM Families","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Gaussian GLM (equivalent to linear regression) gaussian_result <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\"),   model_type = \"glm\",   family = \"gaussian\" )  # Binomial GLM for binary outcomes binomial_result <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"employment_status\",   independent_vars = c(\"age\", \"years_education\"),   model_type = \"glm\",   family = \"binomial\" )  # Poisson GLM for count outcomes poisson_glm_result <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"volunteer_hours\",   independent_vars = c(\"age\", \"life_satisfaction\"),   model_type = \"glm\",   family = \"poisson\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"continuous-categorical-interactions","dir":"Articles","previous_headings":"Advanced Features > Interaction Effects","what":"Continuous × Categorical Interactions","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Create interaction data interaction_data <- research_data %>%   mutate(     # Interaction between age and treatment     outcome_with_interaction = baseline_score +        0.5 * age +        ifelse(treatment == \"Intervention\", 10, 0) +        # Interaction: age effect is stronger in intervention group       ifelse(treatment == \"Intervention\", 0.3 * age, 0) +        rnorm(300, 0, 8)   )  # Interaction plot interaction_result <- jsjplot(   data = interaction_data,   analysis_type = \"interaction_plot\",   dependent_var = \"outcome_with_interaction\",   interaction_vars = c(\"age\", \"treatment\"),   independent_vars = c(\"baseline_score\"),   title = \"Age × Treatment Interaction Effect\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"categorical-categorical-interactions","dir":"Articles","previous_headings":"Advanced Features > Interaction Effects","what":"Categorical × Categorical Interactions","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Interaction between gender and marital status categorical_interaction <- jsjplot(   data = research_data,   analysis_type = \"interaction_plot\",   dependent_var = \"life_satisfaction\",   interaction_vars = c(\"gender\", \"marital_status\"),   independent_vars = c(\"age\"),   colors = \"viridis\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"predicted-values-and-effects","dir":"Articles","previous_headings":"Advanced Features > Marginal Effects","what":"Predicted Values and Effects","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Marginal effects visualization marginal_result <- jsjplot(   data = research_data,   analysis_type = \"marginal_effects\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"marital_status\"),   model_type = \"lm\",   plot_type = \"eff\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"predicted-values-plot","dir":"Articles","previous_headings":"Advanced Features > Marginal Effects","what":"Predicted Values Plot","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Predicted values plot predicted_result <- jsjplot(   data = research_data,   analysis_type = \"marginal_effects\",   dependent_var = \"employment_status\",   independent_vars = c(\"age\", \"years_education\"),   model_type = \"logistic\",   plot_type = \"pred\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"categorical-variable-analysis","dir":"Articles","previous_headings":"Descriptive Analyses > Frequency Tables","what":"Categorical Variable Analysis","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Comprehensive frequency analysis freq_result <- jsjplot(   data = research_data,   analysis_type = \"frequency_table\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"cross-tabulations","dir":"Articles","previous_headings":"Descriptive Analyses > Frequency Tables","what":"Cross-Tabulations","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Create dataset with more categorical variables for better demonstration categorical_data <- research_data %>%   mutate(     age_group = cut(age, breaks = c(0, 30, 50, 100), labels = c(\"Young\", \"Middle\", \"Older\")),     satisfaction_level = cut(life_satisfaction,                             breaks = c(0, 50, 70, 100),                             labels = c(\"Low\", \"Medium\", \"High\"))   )  # Frequency analysis with more categories freq_categorical <- jsjplot(   data = categorical_data,   analysis_type = \"frequency_table\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"correlation-visualization","dir":"Articles","previous_headings":"Descriptive Analyses > Correlation Matrices","what":"Correlation Visualization","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Select numeric variables for correlation numeric_vars <- research_data %>%   select(life_satisfaction, academic_performance, age, years_education,           social_activities, volunteer_hours, baseline_score)  # Correlation matrix analysis corr_result <- jsjplot(   data = numeric_vars,   analysis_type = \"correlation_matrix\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"dimensionality-reduction","dir":"Articles","previous_headings":"Descriptive Analyses > Principal Component Analysis","what":"Dimensionality Reduction","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# PCA for dimensionality reduction pca_result <- jsjplot(   data = numeric_vars,   analysis_type = \"pca_plot\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"high-dimensional-data","dir":"Articles","previous_headings":"Descriptive Analyses > Principal Component Analysis","what":"High-Dimensional Data","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Create high-dimensional dataset set.seed(456) highdim_data <- data.frame(   replicate(10, rnorm(200)) ) %>%   setNames(paste0(\"variable_\", 1:10)) %>%   mutate(     # Create some factor structure     factor1 = variable_1 + variable_2 + variable_3 + rnorm(200, 0, 0.5),     factor2 = variable_4 + variable_5 + variable_6 + rnorm(200, 0, 0.5)   )  # PCA on high-dimensional data pca_highdim <- jsjplot(   data = highdim_data,   analysis_type = \"pca_plot\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"different-theme-styles","dir":"Articles","previous_headings":"Customization and Styling > Visual Themes","what":"Different Theme Styles","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"themes <- c(\"sjplot\", \"minimal\", \"classic\", \"apa\", \"bw\")  # Demonstrate different themes (showing code for minimal theme) theme_minimal <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"gender\"),   theme_style = \"minimal\",   title = \"Minimal Theme Example\" )  # APA style for publications theme_apa <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"gender\"),   theme_style = \"apa\",   title = \"APA Style for Publications\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"color-blind-friendly-options","dir":"Articles","previous_headings":"Customization and Styling > Color Schemes","what":"Color-blind Friendly Options","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Color-blind safe palette colorblind_plot <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"income_bracket\"),   colors = \"colorblind\",   title = \"Color-blind Friendly Plot\" )  # Viridis color scheme viridis_plot <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"income_bracket\"),   colors = \"viridis\",   title = \"Viridis Color Scheme\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"size-and-spacing-options","dir":"Articles","previous_headings":"Customization and Styling > Plot Customization","what":"Size and Spacing Options","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Customized plot appearance custom_plot <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"gender\", \"marital_status\"),   dot_size = 4,   line_size = 1.2,   grid_breaks = 0.5,   show_values = TRUE,   title = \"Customized Coefficient Plot\",   axis_labels = \"Age,Education,Gender,Marital Status\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"confidence-intervals","dir":"Articles","previous_headings":"Customization and Styling > Plot Customization","what":"Confidence Intervals","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Different confidence levels ci_90 <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\"),   confidence_level = 0.90,   title = \"90% Confidence Intervals\" )  ci_99 <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\"),   confidence_level = 0.99,   title = \"99% Confidence Intervals\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"beta-coefficients","dir":"Articles","previous_headings":"Advanced Statistical Options > Standardized Coefficients","what":"Beta Coefficients","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Standardized coefficients for comparison standardized_result <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"baseline_score\"),   standardized = TRUE,   title = \"Standardized Coefficients (Beta)\",   show_values = TRUE )  # Compare with unstandardized unstandardized_result <- jsjplot(   data = research_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"baseline_score\"),   standardized = FALSE,   title = \"Unstandardized Coefficients\",   show_values = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"multiple-model-types","dir":"Articles","previous_headings":"Advanced Statistical Options > Model Comparison","what":"Multiple Model Types","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Linear model linear_comparison <- jsjplot(   data = research_data,   analysis_type = \"regression_table\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"income_bracket\"),   model_type = \"lm\",   title = \"Linear Model Results\" )  # GLM with Gaussian family (equivalent to linear) glm_comparison <- jsjplot(   data = research_data,   analysis_type = \"regression_table\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"income_bracket\"),   model_type = \"glm\",   family = \"gaussian\",   title = \"GLM (Gaussian) Results\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"psychology-research-example","dir":"Articles","previous_headings":"Real-World Applications","what":"Psychology Research Example","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Create psychology research dataset psychology_data <- data.frame(   participant_id = 1:250,   # Psychological measures   depression_score = rnorm(250, 15, 8),   anxiety_score = rnorm(250, 12, 6),   stress_score = rnorm(250, 18, 10),   # Demographics   age = round(rnorm(250, 30, 10)),   gender = factor(sample(c(\"Male\", \"Female\"), 250, replace = TRUE)),   therapy_type = factor(sample(c(\"CBT\", \"Psychodynamic\", \"Control\"), 250, replace = TRUE)),   # Outcome   wellbeing_improvement = rnorm(250, 10, 15) ) %>%   mutate(     # Create realistic relationships     wellbeing_improvement = wellbeing_improvement -        0.3 * depression_score -        0.2 * anxiety_score -        0.1 * stress_score +        ifelse(therapy_type == \"CBT\", 8, 0) +        ifelse(therapy_type == \"Psychodynamic\", 5, 0) +        rnorm(250, 0, 8)   )  # Psychology research analysis psych_result <- jsjplot(   data = psychology_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"wellbeing_improvement\",   independent_vars = c(\"depression_score\", \"anxiety_score\", \"therapy_type\", \"age\"),   model_type = \"lm\",   theme_style = \"apa\",   show_values = TRUE,   title = \"Predictors of Wellbeing Improvement\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"economics-research-example","dir":"Articles","previous_headings":"Real-World Applications","what":"Economics Research Example","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Create economics dataset economics_data <- data.frame(   # Economic indicators   gdp_growth = rnorm(200, 2.5, 1.5),   unemployment_rate = rnorm(200, 6, 2),   inflation_rate = rnorm(200, 2, 1),   # Policy variables   fiscal_spending = rnorm(200, 20, 5),   tax_rate = rnorm(200, 25, 8),   # Country characteristics   country_size = factor(sample(c(\"Small\", \"Medium\", \"Large\"), 200, replace = TRUE)),   region = factor(sample(c(\"Europe\", \"Asia\", \"Americas\", \"Africa\"), 200, replace = TRUE)),   # Outcome   economic_satisfaction = rnorm(200, 60, 20) ) %>%   mutate(     economic_satisfaction = economic_satisfaction +        2 * gdp_growth -        1.5 * unemployment_rate +        0.5 * fiscal_spending +        ifelse(country_size == \"Large\", 10, 0) +        rnorm(200, 0, 12)   )  # Economics analysis econ_result <- jsjplot(   data = economics_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"economic_satisfaction\",   independent_vars = c(\"gdp_growth\", \"unemployment_rate\", \"fiscal_spending\", \"country_size\"),   model_type = \"lm\",   colors = \"metro\",   title = \"Economic Determinants of Satisfaction\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"clinical-research-example","dir":"Articles","previous_headings":"Real-World Applications","what":"Clinical Research Example","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Create clinical trial dataset clinical_data <- data.frame(   patient_id = 1:300,   # Baseline characteristics   age = round(rnorm(300, 55, 15)),   gender = factor(sample(c(\"Male\", \"Female\"), 300, replace = TRUE)),   baseline_severity = rnorm(300, 50, 15),   comorbidities = rpois(300, 1.5),   # Treatment   treatment_arm = factor(sample(c(\"Placebo\", \"Low_Dose\", \"High_Dose\"),                                 300, replace = TRUE)),   # Outcomes   treatment_response = rbinom(300, 1, 0.4),   side_effects = rpois(300, 0.8),   quality_of_life = rnorm(300, 70, 20) ) %>%   mutate(     treatment_response = rbinom(300, 1, plogis(-1.5 +        ifelse(treatment_arm == \"Low_Dose\", 0.8, 0) +        ifelse(treatment_arm == \"High_Dose\", 1.5, 0) -        0.01 * baseline_severity)),          quality_of_life = quality_of_life +        ifelse(treatment_response == 1, 15, 0) -        0.2 * age -        3 * comorbidities +        rnorm(300, 0, 12)   )  # Clinical analysis - treatment response clinical_response <- jsjplot(   data = clinical_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"treatment_response\",   independent_vars = c(\"treatment_arm\", \"age\", \"baseline_severity\", \"gender\"),   model_type = \"logistic\",   theme_style = \"minimal\",   title = \"Predictors of Treatment Response\" )  # Quality of life analysis clinical_qol <- jsjplot(   data = clinical_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"quality_of_life\",   independent_vars = c(\"treatment_response\", \"age\", \"comorbidities\"),   model_type = \"lm\",   title = \"Factors Affecting Quality of Life\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"missing-data","dir":"Articles","previous_headings":"Error Handling and Troubleshooting","what":"Missing Data","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Create data with missing values missing_data <- research_data missing_data$life_satisfaction[sample(1:300, 30)] <- NA missing_data$age[sample(1:300, 20)] <- NA  # Analysis with missing data missing_result <- jsjplot(   data = missing_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"gender\"),   model_type = \"lm\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"small-sample-sizes","dir":"Articles","previous_headings":"Error Handling and Troubleshooting","what":"Small Sample Sizes","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Small dataset small_data <- research_data[1:30, ]  # Analysis with small sample small_result <- jsjplot(   data = small_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\"),   model_type = \"lm\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"edge-cases","dir":"Articles","previous_headings":"Error Handling and Troubleshooting","what":"Edge Cases","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Constant variable (no variation) edge_data <- research_data edge_data$constant_var <- 5  # Perfect correlation edge_data$age_copy <- edge_data$age  # Analysis with edge cases edge_result <- jsjplot(   data = edge_data,   analysis_type = \"coefficient_plot\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"constant_var\"),   model_type = \"lm\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"caching-benefits","dir":"Articles","previous_headings":"Performance and Optimization","what":"Caching Benefits","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Large dataset for performance testing large_data <- do.call(rbind, replicate(3, research_data, simplify = FALSE)) large_data$id <- 1:nrow(large_data)  # First run (will be slower) system.time({   perf_result1 <- jsjplot(     data = large_data,     analysis_type = \"coefficient_plot\",     dependent_var = \"life_satisfaction\",     independent_vars = c(\"age\", \"years_education\", \"gender\", \"marital_status\"),     model_type = \"lm\"   ) })  # Second run with same data/options (should be faster due to caching) system.time({   perf_result2 <- jsjplot(     data = large_data,     analysis_type = \"coefficient_plot\",     dependent_var = \"life_satisfaction\",     independent_vars = c(\"age\", \"years_education\", \"gender\", \"marital_status\"),     model_type = \"lm\"   ) })"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"model-selection-guidelines","dir":"Articles","previous_headings":"Best Practices","what":"1. Model Selection Guidelines","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Create guidance table model_guide <- data.frame(   Outcome_Type = c(     \"Continuous (normal)\",     \"Binary (0/1)\",     \"Count (0,1,2,...)\",     \"Ordinal\",     \"Time-to-event\"   ),   Recommended_Model = c(     \"lm (Linear Model)\",     \"logistic (Logistic Regression)\",     \"poisson (Poisson Regression)\",     \"logistic with ordinal package\",     \"Survival models (not implemented)\"   ),   jsjplot_Setting = c(     \"model_type = 'lm'\",     \"model_type = 'logistic'\",     \"model_type = 'poisson'\",     \"model_type = 'logistic'\",     \"Not available\"   ),   Example_Use = c(     \"Life satisfaction, test scores\",     \"Employment status, treatment response\",     \"Number of events, visits\",     \"Likert scales, rankings\",     \"Time to treatment response\"   ) )  print(model_guide)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"visualization-guidelines","dir":"Articles","previous_headings":"Best Practices","what":"2. Visualization Guidelines","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Best practices for different analysis types viz_guide <- data.frame(   Analysis_Type = c(     \"coefficient_plot\",     \"regression_table\",     \"interaction_plot\",     \"marginal_effects\",     \"frequency_table\",     \"correlation_matrix\",     \"pca_plot\"   ),   Best_For = c(     \"Comparing effect sizes across predictors\",     \"Publication-ready regression results\",     \"Visualizing interaction effects\",     \"Showing predicted values and effects\",     \"Descriptive analysis of categories\",     \"Exploring variable relationships\",     \"Dimensionality reduction visualization\"   ),   Recommended_Options = c(     \"sort_estimates=TRUE, remove_intercept=TRUE\",     \"show_p_values=TRUE, confidence_level=0.95\",     \"Clear labeling of interaction variables\",     \"plot_type='eff' for effects\",     \"Limit to important categorical variables\",     \"Use with numeric variables only\",     \"Good for 3+ numeric variables\"   ) )  print(viz_guide)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"statistical-interpretation","dir":"Articles","previous_headings":"Best Practices","what":"3. Statistical Interpretation","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Effect size interpretation guidelines effect_guide <- data.frame(   Effect_Size = c(\"Small\", \"Medium\", \"Large\"),   Cohen_d = c(\"0.2\", \"0.5\", \"0.8\"),   R_squared = c(\"0.01\", \"0.09\", \"0.25\"),   Interpretation = c(     \"Subtle but potentially important\",     \"Moderate practical significance\",     \"Large practical significance\"   ) )  print(effect_guide)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"apa-style-reporting","dir":"Articles","previous_headings":"Reporting Results","what":"APA Style Reporting","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# Example of APA-style analysis apa_result <- jsjplot(   data = research_data,   analysis_type = \"regression_table\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"marital_status\"),   model_type = \"lm\",   theme_style = \"apa\",   confidence_level = 0.95,   show_p_values = TRUE,   standardized = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"publication-ready-tables","dir":"Articles","previous_headings":"Reporting Results","what":"Publication-Ready Tables","title":"Social Science Statistical Visualization with jsjplot","text":"","code":"# High-quality table for publication pub_table <- jsjplot(   data = research_data,   analysis_type = \"regression_table\",   dependent_var = \"life_satisfaction\",   independent_vars = c(\"age\", \"years_education\", \"gender\", \"marital_status\", \"income_bracket\"),   model_type = \"lm\",   html_output = TRUE,   show_p_values = TRUE,   standardized = FALSE,   confidence_level = 0.95 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Social Science Statistical Visualization with jsjplot","text":"jsjplot function provides comprehensive solution social science statistical visualization analysis. Key advantages include:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"core-capabilities","dir":"Articles","previous_headings":"Summary","what":"Core Capabilities","title":"Social Science Statistical Visualization with jsjplot","text":"Multiple Analysis Types: Seven different analysis types covering social science research needs Model Flexibility: Support linear, logistic, Poisson, generalized linear models Publication Quality: High-quality plots tables ready publication Statistical Rigor: Confidence intervals, significance tests, model diagnostics","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"performance-features","dir":"Articles","previous_headings":"Summary","what":"Performance Features","title":"Social Science Statistical Visualization with jsjplot","text":"Intelligent Caching: Automatic caching models results faster repeated analyses Error Handling: Robust error handling missing data edge cases Memory Efficiency: Optimized large datasets smart data preparation Validation: Comprehensive input validation informative error messages","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"customization-options","dir":"Articles","previous_headings":"Summary","what":"Customization Options","title":"Social Science Statistical Visualization with jsjplot","text":"Visual Themes: Multiple themes including APA style publications Color Schemes: Color-blind friendly aesthetically pleasing palettes Plot Customization: Extensive control plot elements styling Output Formats: HTML tables high-resolution plots","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"use-cases","dir":"Articles","previous_headings":"Summary","what":"Use Cases","title":"Social Science Statistical Visualization with jsjplot","text":"Academic Research: Psychology, sociology, political science, economics Clinical Research: Treatment effects, patient outcomes, clinical trials Business Analytics: Customer satisfaction, employee surveys, market research Policy Analysis: Public policy evaluation, social program assessment","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/32-jsjplot-comprehensive.html","id":"next-steps","dir":"Articles","previous_headings":"Summary","what":"Next Steps","title":"Social Science Statistical Visualization with jsjplot","text":"Explore ClinicoPath package documentation analysis functions Try different analysis types data Experiment customization options publication-ready outputs Consider sjPlot package documentation advanced features","code":"sessionInfo()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"introduction-to-jjtreemap","dir":"Articles","previous_headings":"","what":"Introduction to jjtreemap","title":"jjtreemap: Comprehensive Treemap Visualization","text":"jjtreemap function powerful wrapper around treemap ggplot2 R packages creates hierarchical treemap visualizations categorical data. Treemaps display hierarchical data nested rectangles, area rectangle proportional quantitative value, making ideal visualizing part--whole relationships, portfolio compositions, market share analysis, budget allocations.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"Introduction to jjtreemap","what":"Key Features","title":"jjtreemap: Comprehensive Treemap Visualization","text":"Hierarchical Visualization: Display nested categorical data structures Size Mapping: Rectangle areas represent quantitative values Color Coding: Additional categorical quantitative dimensions color Flexible Labeling: Customizable text display size, color, alignment options Performance Optimized: Enhanced caching data preparation faster rendering Publication-Ready: High-quality outputs suitable presentations reports","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"loading-required-libraries","dir":"Articles","previous_headings":"Introduction to jjtreemap","what":"Loading Required Libraries","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"library(jjstatsplot) library(dplyr) library(tidyr)  # For this vignette, we'll create sample data set.seed(123)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"simple-category-visualization","dir":"Articles","previous_headings":"Basic Treemap Creation","what":"Simple Category Visualization","title":"jjtreemap: Comprehensive Treemap Visualization","text":"Let’s start basic treemap showing market share company:","code":"# Create sample market share data market_data <- data.frame(   company = factor(c(\"TechCorp\", \"DataSoft\", \"CloudNet\", \"AIWorks\", \"SecureIT\", \"WebDev\")),   market_share = c(28.5, 22.3, 18.7, 12.5, 10.2, 7.8),   sector = factor(c(\"Software\", \"Software\", \"Cloud\", \"AI/ML\", \"Security\", \"Web\")) )  # Create basic treemap result_basic <- jjtreemap(   data = market_data,   group = \"company\",   size = \"market_share\",   showLabels = TRUE,   labelSize = 6 )  print(result_basic)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"group-variable-categories","dir":"Articles","previous_headings":"Basic Treemap Creation > Understanding Treemap Components","what":"Group Variable (Categories)","title":"jjtreemap: Comprehensive Treemap Visualization","text":"Defines rectangles treemap Can hierarchical (multiple levels) unique value becomes separate rectangle","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"size-variable-rectangle-area","dir":"Articles","previous_headings":"Basic Treemap Creation > Understanding Treemap Components","what":"Size Variable (Rectangle Area)","title":"jjtreemap: Comprehensive Treemap Visualization","text":"Must numeric positive Determines area rectangle Represents quantitative dimension","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"color-variable-optional","dir":"Articles","previous_headings":"Basic Treemap Creation > Understanding Treemap Components","what":"Color Variable (Optional)","title":"jjtreemap: Comprehensive Treemap Visualization","text":"Additional categorical dimension Helps distinguish groups show patterns Can represent secondary classification","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"border-customization","dir":"Articles","previous_headings":"Styling and Customization","what":"Border Customization","title":"jjtreemap: Comprehensive Treemap Visualization","text":"Control appearance rectangle borders:","code":"# Create data with hierarchical structure dept_budget <- data.frame(   department = factor(c(\"R&D\", \"Marketing\", \"Sales\", \"Operations\", \"HR\", \"IT\")),   budget = c(45.2, 32.5, 28.7, 38.9, 12.3, 22.5),   division = factor(c(\"Innovation\", \"Growth\", \"Growth\", \"Core\", \"Support\", \"Infrastructure\")) )  # Treemap with custom borders result_borders <- jjtreemap(   data = dept_budget,   group = \"department\",   size = \"budget\",   color = \"division\",   borderWidth = 1.5,   borderLevel1Width = 2,   borderLevel2Width = 0.5,   borderLevel1Color = \"darkblue\",   borderLevel2Color = \"lightgray\",   showLabels = TRUE )  print(result_borders)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"font-styling","dir":"Articles","previous_headings":"Styling and Customization > Label Customization","what":"Font Styling","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Test different font faces result_bold <- jjtreemap(   data = dept_budget,   group = \"department\",   size = \"budget\",   labelFontFace = \"bold\",   labelLevel1Size = 16,   labelLevel1Color = \"white\",   labelBackground = \"rgba(0,0,0,0.3)\",   showLabels = TRUE )  print(result_bold)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"label-alignment","dir":"Articles","previous_headings":"Styling and Customization > Label Customization","what":"Label Alignment","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Custom label alignment result_aligned <- jjtreemap(   data = dept_budget,   group = \"department\",   size = \"budget\",   labelAlignH = \"left\",   labelAlignV = \"top\",   showLabels = TRUE,   labelSize = 8 )  print(result_aligned)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"color-palettes-and-themes","dir":"Articles","previous_headings":"Styling and Customization","what":"Color Palettes and Themes","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Product portfolio with color coding product_data <- data.frame(   product = factor(c(\"Smartphones\", \"Laptops\", \"Tablets\", \"Headphones\",                       \"Smartwatches\", \"Cameras\", \"Speakers\", \"Monitors\")),   revenue = c(450, 380, 220, 180, 150, 120, 98, 85),   category = factor(c(\"Mobile\", \"Computing\", \"Mobile\", \"Audio\",                        \"Wearables\", \"Imaging\", \"Audio\", \"Computing\")) )  # Treemap with category colors result_colored <- jjtreemap(   data = product_data,   group = \"product\",   size = \"revenue\",   color = \"category\",   showLabels = TRUE,   labelSize = 6,   title = \"Product Revenue by Category\",   subtitle = \"2023 Annual Report\",   caption = \"Values in millions USD\" )  print(result_colored)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"market-share-analysis","dir":"Articles","previous_headings":"Real-World Applications","what":"Market Share Analysis","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Create realistic market share data tech_market <- data.frame(   company = factor(c(\"Apple\", \"Samsung\", \"Google\", \"Microsoft\", \"Amazon\",                      \"Meta\", \"Tesla\", \"NVIDIA\", \"Intel\", \"Oracle\")),   market_cap = c(2850, 1450, 1680, 2450, 1580,                   890, 780, 1100, 190, 280),   sector = factor(c(\"Consumer Tech\", \"Consumer Tech\", \"Internet\", \"Software\", \"E-commerce\",                     \"Social Media\", \"Automotive\", \"Semiconductors\", \"Semiconductors\", \"Enterprise\")) )  # Market capitalization treemap result_market <- jjtreemap(   data = tech_market,   group = \"company\",   size = \"market_cap\",   color = \"sector\",   showLabels = TRUE,   labelSize = 8,   title = \"Tech Giants Market Capitalization\",   subtitle = \"By Sector Classification\",   caption = \"Market cap in billions USD\",   aspectRatio = 1.4 )  print(result_market)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"budget-allocation-visualization","dir":"Articles","previous_headings":"Real-World Applications","what":"Budget Allocation Visualization","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Government budget example gov_budget <- data.frame(   category = factor(c(\"Healthcare\", \"Education\", \"Defense\", \"Social Security\",                       \"Infrastructure\", \"Science & Tech\", \"Environment\",                        \"Agriculture\", \"Justice\", \"Other\")),   allocation = c(28.5, 22.3, 18.7, 25.2, 12.5, 8.3, 6.7, 5.8, 4.2, 3.8),   type = factor(c(\"Social\", \"Social\", \"Security\", \"Social\",                   \"Infrastructure\", \"Research\", \"Environment\",                   \"Economic\", \"Administration\", \"Various\")) )  # Budget treemap with custom styling result_budget <- jjtreemap(   data = gov_budget,   group = \"category\",   size = \"allocation\",   color = \"type\",   showLabels = TRUE,   labelSize = 7,   labelFontFace = \"bold\",   title = \"Federal Budget Allocation\",   subtitle = \"Fiscal Year 2024\",   caption = \"Percentages of total budget\" )  print(result_budget)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"portfolio-composition","dir":"Articles","previous_headings":"Real-World Applications","what":"Portfolio Composition","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Investment portfolio breakdown portfolio <- data.frame(   asset = factor(c(\"US Stocks\", \"International Stocks\", \"Bonds\", \"Real Estate\",                    \"Commodities\", \"Cash\", \"Crypto\", \"Private Equity\")),   value = c(45000, 28000, 35000, 22000, 12000, 8000, 5000, 15000),   risk_level = factor(c(\"High\", \"High\", \"Low\", \"Medium\",                          \"High\", \"Low\", \"Very High\", \"High\")) )  # Portfolio treemap with risk coloring result_portfolio <- jjtreemap(   data = portfolio,   group = \"asset\",   size = \"value\",   color = \"risk_level\",   showLabels = TRUE,   labelSize = 8,   title = \"Investment Portfolio Composition\",   subtitle = \"Total Value: $170,000\",   caption = \"Color indicates risk level\" )  print(result_portfolio)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"aspect-ratio-control","dir":"Articles","previous_headings":"Advanced Customization","what":"Aspect Ratio Control","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Test different aspect ratios sales_data <- data.frame(   region = factor(c(\"North\", \"South\", \"East\", \"West\", \"Central\")),   sales = c(120, 95, 110, 88, 102) )  # Wide aspect ratio result_wide <- jjtreemap(   data = sales_data,   group = \"region\",   size = \"sales\",   aspectRatio = 2.5,   showLabels = TRUE,   title = \"Wide Aspect Ratio (2.5)\" )  print(result_wide)  # Square aspect ratio result_square <- jjtreemap(   data = sales_data,   group = \"region\",   size = \"sales\",   aspectRatio = 1,   showLabels = TRUE,   title = \"Square Aspect Ratio (1.0)\" )  print(result_square)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"handling-small-values","dir":"Articles","previous_headings":"Advanced Customization","what":"Handling Small Values","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Data with very different scales diverse_data <- data.frame(   category = factor(c(\"Giant\", \"Large\", \"Medium\", \"Small\", \"Tiny\", \"Microscopic\")),   value = c(1000, 200, 50, 10, 2, 0.5) )  # Treemap handles extreme differences result_diverse <- jjtreemap(   data = diverse_data,   group = \"category\",   size = \"value\",   showLabels = TRUE,   labelSize = 4,   labelOverlap = 0.8,  # Allow more overlap for small rectangles   title = \"Handling Extreme Value Differences\" )  print(result_diverse)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"label-visibility-control","dir":"Articles","previous_headings":"Advanced Customization","what":"Label Visibility Control","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Many categories - label management many_categories <- data.frame(   item = factor(paste0(\"Item_\", LETTERS[1:20])),   value = sort(runif(20, 10, 100), decreasing = TRUE) )  # Control label display result_many <- jjtreemap(   data = many_categories,   group = \"item\",   size = \"value\",   showLabels = TRUE,   labelSize = 4,  # Minimum size for readability   labelOverlap = 0.3,  # Less overlap tolerance   title = \"Many Categories with Smart Labeling\" )  print(result_many)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"clinical-trial-enrollment","dir":"Articles","previous_headings":"Clinical and Research Applications","what":"Clinical Trial Enrollment","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Clinical trial sites and enrollment trial_sites <- data.frame(   site = factor(paste0(\"Site_\", sprintf(\"%02d\", 1:12))),   enrolled = c(125, 98, 87, 76, 72, 68, 65, 58, 52, 48, 45, 42),   region = factor(c(rep(\"North America\", 3), rep(\"Europe\", 3),                      rep(\"Asia Pacific\", 3), rep(\"Latin America\", 3))),   site_type = factor(c(\"Academic\", \"Community\", \"Private\", \"Academic\",                         \"Community\", \"Academic\", \"Private\", \"Community\",                        \"Academic\", \"Community\", \"Private\", \"Academic\")) )  # Enrollment treemap result_clinical <- jjtreemap(   data = trial_sites,   group = \"site\",   size = \"enrolled\",   color = \"region\",   showLabels = TRUE,   labelSize = 6,   title = \"Clinical Trial Enrollment by Site\",   subtitle = \"Phase III Multi-Center Study\",   caption = \"Total enrolled: 866 patients\" )  print(result_clinical)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"research-funding-distribution","dir":"Articles","previous_headings":"Clinical and Research Applications","what":"Research Funding Distribution","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Research grant distribution research_grants <- data.frame(   department = factor(c(\"Oncology\", \"Cardiology\", \"Neurology\", \"Immunology\",                         \"Genetics\", \"Infectious Disease\", \"Pediatrics\", \"Surgery\")),   funding = c(12.5, 10.2, 9.8, 8.5, 7.2, 6.5, 5.8, 4.5),   grant_type = factor(c(\"Federal\", \"Federal\", \"Mixed\", \"Private\",                         \"Federal\", \"Mixed\", \"State\", \"Private\")) )  # Funding treemap result_research <- jjtreemap(   data = research_grants,   group = \"department\",   size = \"funding\",   color = \"grant_type\",   showLabels = TRUE,   labelSize = 7,   labelFontFace = \"bold\",   title = \"Research Funding Distribution\",   subtitle = \"Academic Medical Center FY2024\",   caption = \"Values in millions USD\" )  print(result_research)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"aggregating-data","dir":"Articles","previous_headings":"Data Preparation Best Practices","what":"Aggregating Data","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Raw transaction data raw_sales <- data.frame(   product = sample(c(\"A\", \"B\", \"C\", \"D\"), 100, replace = TRUE),   region = sample(c(\"North\", \"South\", \"East\", \"West\"), 100, replace = TRUE),   sales = runif(100, 10, 100) )  # Aggregate before treemap agg_sales <- raw_sales %>%   group_by(product, region) %>%   summarise(total_sales = sum(sales), .groups = 'drop') %>%   arrange(desc(total_sales))  # Display top aggregated data head(agg_sales, 10)  # Create treemap from aggregated data result_agg <- jjtreemap(   data = agg_sales,   group = \"product\",   size = \"total_sales\",   color = \"region\",   showLabels = TRUE,   title = \"Aggregated Sales by Product\" )  print(result_agg)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"handling-negative-values","dir":"Articles","previous_headings":"Data Preparation Best Practices","what":"Handling Negative Values","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Data with negative values (profits/losses) profit_data <- data.frame(   division = factor(c(\"Electronics\", \"Software\", \"Services\", \"Hardware\",                        \"Consulting\", \"Support\")),   profit = c(25.5, 18.3, -5.2, 12.7, -2.1, 8.5) )  # Function automatically converts negatives to small positive values result_profit <- jjtreemap(   data = profit_data,   group = \"division\",   size = \"profit\",   showLabels = TRUE,   labelSize = 8,   title = \"Division Performance\",   subtitle = \"Note: Negative values shown as minimal size\",   caption = \"Original negative values: Services (-5.2), Consulting (-2.1)\" )  print(result_profit)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"hierarchical-data-preparation","dir":"Articles","previous_headings":"Data Preparation Best Practices","what":"Hierarchical Data Preparation","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Prepare hierarchical data structure hierarchy_data <- data.frame(   main_category = factor(rep(c(\"Electronics\", \"Clothing\", \"Food\"), each = 3)),   sub_category = factor(c(\"Phones\", \"Laptops\", \"Tablets\",                           \"Shirts\", \"Pants\", \"Shoes\",                           \"Fruits\", \"Vegetables\", \"Dairy\")),   sales = c(150, 120, 80, 60, 70, 90, 45, 38, 52) )  # Create treemap with hierarchy indication through colors result_hierarchy <- jjtreemap(   data = hierarchy_data,   group = \"sub_category\",   size = \"sales\",   color = \"main_category\",   showLabels = TRUE,   labelSize = 6,   title = \"Sales by Category and Subcategory\",   subtitle = \"Color indicates main category\" )  print(result_hierarchy)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"large-dataset-handling","dir":"Articles","previous_headings":"Performance Optimization","what":"Large Dataset Handling","title":"jjtreemap: Comprehensive Treemap Visualization","text":"function includes several performance optimizations:","code":"# Performance test with larger dataset large_data <- data.frame(   category = factor(paste0(\"Category_\", 1:50)),   value = runif(50, 100, 10000),   group = factor(rep(paste0(\"Group_\", LETTERS[1:5]), each = 10)) )  # This should render efficiently due to optimizations start_time <- Sys.time() performance_result <- jjtreemap(   data = large_data,   group = \"category\",   size = \"value\",   color = \"group\",   showLabels = TRUE ) end_time <- Sys.time()  cat(\"Rendering time:\", difftime(end_time, start_time, units = \"secs\"), \"seconds\\n\") print(performance_result)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"optimization-features","dir":"Articles","previous_headings":"Performance Optimization","what":"Optimization Features","title":"jjtreemap: Comprehensive Treemap Visualization","text":"function implements several performance enhancements: Data Preparation Caching: Processed data cached avoid recomputation Option Preprocessing: Common option processing done cached Treemap Data Caching: treemap calculation cached reused Hash-based Change Detection: reprocesses inputs change Efficient Memory Usage: Minimizes data copying transformation overhead","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"label-visibility","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Label Visibility","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Small rectangles with labels small_rect_data <- data.frame(   item = factor(c(\"Large\", \"Medium\", \"Small\", \"Tiny\", \"Micro\")),   value = c(100, 30, 10, 3, 1) )  # Solution 1: Adjust minimum label size result_min_label <- jjtreemap(   data = small_rect_data,   group = \"item\",   size = \"value\",   showLabels = TRUE,   labelSize = 3,  # Smaller minimum size   title = \"Solution: Smaller Minimum Label Size\" )  print(result_min_label)  # Solution 2: Hide labels selectively result_no_labels <- jjtreemap(   data = small_rect_data,   group = \"item\",    size = \"value\",   showLabels = FALSE,  # Hide labels for cleaner look   title = \"Solution: Hide Labels for Small Items\" )  print(result_no_labels)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"color-contrast","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Color Contrast","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Ensure good contrast between labels and backgrounds contrast_data <- data.frame(   category = factor(c(\"A\", \"B\", \"C\", \"D\")),   value = c(40, 30, 20, 10),   type = factor(c(\"Dark\", \"Dark\", \"Light\", \"Light\")) )  # Adjust label colors for contrast result_contrast <- jjtreemap(   data = contrast_data,   group = \"category\",   size = \"value\",   color = \"type\",   showLabels = TRUE,   labelLevel1Color = \"black\",  # Dark labels   labelBackground = \"rgba(255,255,255,0.7)\",  # Semi-transparent white background   title = \"Improved Label Contrast\" )  print(result_contrast)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"data-validation","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Data Validation","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Function to validate treemap data validate_treemap_data <- function(data, group_var, size_var) {   errors <- c()      # Check if variables exist   if (!group_var %in% names(data)) {     errors <- c(errors, \"Group variable not found in data\")   }   if (!size_var %in% names(data)) {     errors <- c(errors, \"Size variable not found in data\")   }      if (length(errors) > 0) return(errors)      # Check data types   if (!is.numeric(data[[size_var]])) {     errors <- c(errors, \"Size variable must be numeric\")   }      # Check for negative values   if (any(data[[size_var]] < 0, na.rm = TRUE)) {     errors <- c(errors, \"Warning: Negative values will be converted to 0.01\")   }      # Check for missing values   complete_rows <- sum(complete.cases(data[c(group_var, size_var)]))   if (complete_rows == 0) {     errors <- c(errors, \"No complete data rows\")   }      if (length(errors) == 0) {     return(\"Data validation passed!\")   } else {     return(errors)   } }  # Test validation test_data <- data.frame(   category = c(\"A\", \"B\", \"C\"),   value = c(10, 20, 30) )  validate_treemap_data(test_data, \"category\", \"value\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"design-guidelines","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Design Guidelines","title":"jjtreemap: Comprehensive Treemap Visualization","text":"Hierarchy Levels: Limit 2-3 levels clarity Color Usage: Use color represent meaningful categories Label Density: Show labels significant rectangles Aspect Ratio: Choose based display medium (wide presentations, square reports) Border Width: Use thicker borders main categories","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"data-preparation-tips","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Data Preparation Tips","title":"jjtreemap: Comprehensive Treemap Visualization","text":"Aggregate First: Always aggregate data appropriate level Handle Negatives: Convert negative values use alternative visualization Sort Size: Larger values create visually prominent rectangles Limit Categories: 5-15 categories work best readability Use Meaningful Names: Short, descriptive category names","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"visual-hierarchy","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Visual Hierarchy","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# Example of good visual hierarchy hierarchy_example <- data.frame(   category = factor(c(\"Primary A\", \"Primary B\", \"Secondary C\",                        \"Secondary D\", \"Minor E\", \"Minor F\")),   value = c(350, 280, 120, 95, 45, 30),   importance = factor(c(\"High\", \"High\", \"Medium\", \"Medium\", \"Low\", \"Low\")) )  result_hierarchy <- jjtreemap(   data = hierarchy_example,   group = \"category\",   size = \"value\",   color = \"importance\",   showLabels = TRUE,   labelSize = 6,   borderWidth = 1.5,   title = \"Visual Hierarchy in Treemap Design\",   subtitle = \"Size and color reinforce importance\" )  print(result_hierarchy)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"export-ready-plots","dir":"Articles","previous_headings":"Integration with Reporting Workflows","what":"Export-Ready Plots","title":"jjtreemap: Comprehensive Treemap Visualization","text":"","code":"# High-quality treemap for reports report_data <- data.frame(   metric = factor(c(\"Revenue\", \"Costs\", \"R&D\", \"Marketing\", \"Operations\")),   value = c(150, 85, 25, 18, 42),   category = factor(c(\"Income\", \"Expense\", \"Investment\", \"Investment\", \"Expense\")) )  # Publication-quality treemap result_publication <- jjtreemap(   data = report_data,   group = \"metric\",   size = \"value\",   color = \"category\",   showLabels = TRUE,   labelSize = 10,   labelFontFace = \"bold\",   borderWidth = 2,   title = \"Financial Overview FY2024\",   subtitle = \"All values in millions USD\",   caption = \"Source: Annual Financial Report\" )  print(result_publication)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"interactive-exploration-tips","dir":"Articles","previous_headings":"Integration with Reporting Workflows","what":"Interactive Exploration Tips","title":"jjtreemap: Comprehensive Treemap Visualization","text":"treemaps static, can guide interactive exploration: Start Broad: Show high-level categories first Drill : Create separate treemaps subcategories Time Series: Compare treemaps across time periods Filters: Create treemaps filtered data subsets","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"jjtreemap: Comprehensive Treemap Visualization","text":"jjtreemap function provides comprehensive solution hierarchical data visualization : Flexible customization borders, labels, colors Performance optimizations efficient rendering Robust error handling data validation Publication-ready output quality Wide applicability across business, research, clinical domains Treemaps particularly effective : - Part--whole relationships - Portfolio composition - Budget allocation - Market share analysis - Resource distribution - Hierarchical categorical data","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jjtreemap-comprehensive.html","id":"function-reference","dir":"Articles","previous_headings":"Summary","what":"Function Reference","title":"jjtreemap: Comprehensive Treemap Visualization","text":"complete parameter documentation, see treemap ggplot2 package documentation: - CRAN treemap documentation - ggplot2 documentation","code":"# Session information sessionInfo()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"jsummarytools function provides comprehensive descriptive statistics using powerful summarytools package. function designed specifically clinical researchers, epidemiologists, data analysts need professional-quality descriptive statistics publication-ready output.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"Introduction","what":"Key Features","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"Four Analysis Types: Data frame summaries (dfSummary), frequency tables (freq), descriptive statistics (descr), cross-tabulations (ctable) Professional Output: HTML-formatted tables summaries ready reports publications Comprehensive Statistics: Complete descriptive statistics missing data reporting Grouping Support: Stratified analyses grouping variables Performance Optimized: Intelligent caching system faster repeated analyses Flexible Customization: Extensive options formatting statistical content","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"Introduction","what":"Installation and Setup","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Load required libraries library(jjstatsplot) library(dplyr) library(knitr)   # Check if summarytools is available if (!requireNamespace(\"summarytools\", quietly = TRUE)) {   message(\"Note: summarytools package not available. Install with: install.packages('summarytools')\") }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"Let’s create realistic datasets different types descriptive analyses:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"clinical-research-data","dir":"Articles","previous_headings":"Data Preparation","what":"Clinical Research Data","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Create comprehensive clinical dataset set.seed(123) clinical_data <- data.frame(   # Patient identifiers   patient_id = paste0(\"PT_\", sprintf(\"%03d\", 1:300)),      # Demographics   age = round(rnorm(300, 65, 12)),   gender = factor(sample(c(\"Male\", \"Female\"), 300, replace = TRUE)),   race = factor(sample(c(\"White\", \"Black\", \"Hispanic\", \"Asian\", \"Other\"),                        300, replace = TRUE, prob = c(0.65, 0.15, 0.12, 0.06, 0.02))),      # Clinical measurements   height_cm = round(rnorm(300, 170, 12)),   weight_kg = round(rnorm(300, 75, 15)),   systolic_bp = round(rnorm(300, 140, 25)),   diastolic_bp = round(rnorm(300, 85, 15)),   heart_rate = round(rnorm(300, 75, 12)),      # Laboratory values   glucose_mg_dl = round(rnorm(300, 110, 30)),   cholesterol_mg_dl = round(rnorm(300, 200, 40)),   creatinine_mg_dl = round(rnorm(300, 1.0, 0.3), 2),   hemoglobin_g_dl = round(rnorm(300, 13.5, 2.0), 1),      # Medical history   diabetes = factor(sample(c(\"No\", \"Yes\"), 300, replace = TRUE, prob = c(0.7, 0.3))),   hypertension = factor(sample(c(\"No\", \"Yes\"), 300, replace = TRUE, prob = c(0.6, 0.4))),   smoking_status = factor(sample(c(\"Never\", \"Former\", \"Current\"),                                  300, replace = TRUE, prob = c(0.5, 0.35, 0.15))),      # Treatment information   treatment_group = factor(sample(c(\"Control\", \"Treatment_A\", \"Treatment_B\"),                                   300, replace = TRUE)),   study_site = factor(sample(c(\"Site_1\", \"Site_2\", \"Site_3\"), 300, replace = TRUE)),      # Outcomes   treatment_response = factor(sample(c(\"No Response\", \"Partial\", \"Complete\"),                                      300, replace = TRUE, prob = c(0.3, 0.5, 0.2))),   quality_of_life = round(rnorm(300, 70, 18)),   adverse_events = rpois(300, 1.2) ) %>%   mutate(     # Calculate BMI     bmi = round(weight_kg / (height_cm/100)^2, 1),          # Create realistic medical relationships     systolic_bp = pmax(90, systolic_bp + 0.3 * age +                        ifelse(diabetes == \"Yes\", 15, 0) +                       ifelse(smoking_status == \"Current\", 10, 0)),          glucose_mg_dl = pmax(70, glucose_mg_dl +                          ifelse(diabetes == \"Yes\", 50, 0) +                          0.1 * age),          cholesterol_mg_dl = pmax(120, cholesterol_mg_dl + 0.5 * age + 0.8 * bmi),          # Blood pressure category     bp_category = factor(case_when(       systolic_bp < 120 ~ \"Normal\",       systolic_bp < 130 ~ \"Elevated\",        systolic_bp < 140 ~ \"Stage 1\",       TRUE ~ \"Stage 2\"     ), levels = c(\"Normal\", \"Elevated\", \"Stage 1\", \"Stage 2\")),          # BMI category     bmi_category = factor(case_when(       bmi < 18.5 ~ \"Underweight\",       bmi < 25 ~ \"Normal\",       bmi < 30 ~ \"Overweight\",        TRUE ~ \"Obese\"     ), levels = c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\"))   )  # Display data structure str(clinical_data)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"survey-research-data","dir":"Articles","previous_headings":"Data Preparation","what":"Survey Research Data","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Create survey/questionnaire dataset survey_data <- data.frame(   respondent_id = 1:500,      # Demographics   age_group = factor(sample(c(\"18-25\", \"26-35\", \"36-50\", \"51-65\", \"65+\"),                             500, replace = TRUE, prob = c(0.15, 0.25, 0.3, 0.2, 0.1))),   gender = factor(sample(c(\"Male\", \"Female\", \"Non-binary\"),                          500, replace = TRUE, prob = c(0.48, 0.5, 0.02))),   education = factor(sample(c(\"High School\", \"Some College\", \"Bachelor\", \"Graduate\"),                             500, replace = TRUE, prob = c(0.25, 0.25, 0.35, 0.15))),   income_bracket = factor(sample(c(\"Under $30k\", \"$30k-$60k\", \"$60k-$100k\", \"Over $100k\"),                                  500, replace = TRUE, prob = c(0.25, 0.35, 0.25, 0.15))),   employment = factor(sample(c(\"Full-time\", \"Part-time\", \"Unemployed\", \"Student\", \"Retired\"),                              500, replace = TRUE, prob = c(0.55, 0.15, 0.1, 0.1, 0.1))),      # Likert scale responses (1-5: Strongly Disagree to Strongly Agree)   satisfaction_service = sample(1:5, 500, replace = TRUE, prob = c(0.05, 0.1, 0.2, 0.45, 0.2)),   satisfaction_price = sample(1:5, 500, replace = TRUE, prob = c(0.1, 0.15, 0.25, 0.35, 0.15)),   satisfaction_quality = sample(1:5, 500, replace = TRUE, prob = c(0.03, 0.07, 0.15, 0.5, 0.25)),      # 7-point agreement scales   recommend_likelihood = sample(1:7, 500, replace = TRUE,                                 prob = c(0.05, 0.05, 0.1, 0.15, 0.2, 0.25, 0.2)),   value_perception = sample(1:7, 500, replace = TRUE,                             prob = c(0.08, 0.07, 0.12, 0.18, 0.25, 0.2, 0.1)),      # Frequency responses   usage_frequency = factor(sample(c(\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"),                                   500, replace = TRUE, prob = c(0.05, 0.15, 0.3, 0.35, 0.15))),      # Binary choices   will_recommend = factor(sample(c(\"No\", \"Yes\"), 500, replace = TRUE, prob = c(0.25, 0.75))),   return_customer = factor(sample(c(\"No\", \"Yes\"), 500, replace = TRUE, prob = c(0.3, 0.7))),      # Continuous measures   years_customer = round(runif(500, 0, 10), 1),   monthly_spending = round(exp(rnorm(500, 4.5, 0.8)), 2),   overall_rating = round(rnorm(500, 4.2, 0.8), 1) ) %>%   mutate(     # Constrain ratings to valid ranges     overall_rating = pmax(1, pmin(5, overall_rating))   )  str(survey_data)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"data-frame-summary-dfsummary","dir":"Articles","previous_headings":"Basic Usage","what":"Data Frame Summary (dfSummary)","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"comprehensive overview dataset:","code":"# Basic data frame summary summary_result <- jsummarytools(   data = clinical_data,   analysis_type = \"dfsummary\" )  # The result contains comprehensive information about each variable print(names(summary_result))"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"customized-dfsummary","dir":"Articles","previous_headings":"Basic Usage > Data Frame Summary (dfSummary)","what":"Customized dfSummary","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Customized data frame summary with specific options custom_summary <- jsummarytools(   data = clinical_data,   analysis_type = \"dfsummary\",   vars = c(\"age\", \"gender\", \"bmi\", \"systolic_bp\", \"diabetes\", \"treatment_group\"),   show_graphs = TRUE,   show_labels = TRUE,   show_variable_numbers = FALSE,   round_digits = 2 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"grouped-dfsummary","dir":"Articles","previous_headings":"Basic Usage > Data Frame Summary (dfSummary)","what":"Grouped dfSummary","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Data frame summary stratified by treatment group grouped_summary <- jsummarytools(   data = clinical_data,   analysis_type = \"dfsummary\",    vars = c(\"age\", \"bmi\", \"systolic_bp\", \"glucose_mg_dl\"),   group_var = \"treatment_group\",   show_graphs = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"frequency-tables-freq","dir":"Articles","previous_headings":"Basic Usage","what":"Frequency Tables (freq)","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"Detailed frequency distributions categorical variables:","code":"# Basic frequency analysis freq_result <- jsummarytools(   data = survey_data,   analysis_type = \"freq\",   vars = c(\"satisfaction_service\", \"usage_frequency\", \"education\") )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"frequency-tables-with-options","dir":"Articles","previous_headings":"Basic Usage > Frequency Tables (freq)","what":"Frequency Tables with Options","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Frequency analysis with cumulative percentages freq_cumulative <- jsummarytools(   data = survey_data,   analysis_type = \"freq\",   vars = c(\"recommend_likelihood\", \"value_perception\"),   include_cumulative = TRUE,   report_missing = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"grouped-frequency-analysis","dir":"Articles","previous_headings":"Basic Usage > Frequency Tables (freq)","what":"Grouped Frequency Analysis","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Frequency analysis by demographic groups freq_grouped <- jsummarytools(   data = survey_data,   analysis_type = \"freq\",   vars = c(\"satisfaction_service\", \"will_recommend\"),   group_var = \"age_group\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"descriptive-statistics-descr","dir":"Articles","previous_headings":"Basic Usage","what":"Descriptive Statistics (descr)","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"Comprehensive descriptive statistics numeric variables:","code":"# Basic descriptive statistics descr_result <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"age\", \"bmi\", \"systolic_bp\", \"diastolic_bp\", \"glucose_mg_dl\", \"cholesterol_mg_dl\") )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"custom-statistics-selection","dir":"Articles","previous_headings":"Basic Usage > Descriptive Statistics (descr)","what":"Custom Statistics Selection","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Custom selection of statistics descr_custom <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"age\", \"bmi\", \"quality_of_life\"),   stats_to_include = \"custom\",   include_mean = TRUE,   include_median = TRUE,   include_sd = TRUE,   include_quartiles = TRUE,   include_skewness = TRUE,   round_digits = 3 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"descriptive-statistics-by-group","dir":"Articles","previous_headings":"Basic Usage > Descriptive Statistics (descr)","what":"Descriptive Statistics by Group","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Descriptive statistics stratified by treatment group descr_grouped <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"systolic_bp\", \"glucose_mg_dl\", \"quality_of_life\"),   group_var = \"treatment_group\",   stats_to_include = \"all\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"different-statistics-sets","dir":"Articles","previous_headings":"Basic Usage > Descriptive Statistics (descr)","what":"Different Statistics Sets","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Basic statistics only descr_basic <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"age\", \"bmi\"),   stats_to_include = \"basic\" )  # Central tendency measures descr_central <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",    vars = c(\"systolic_bp\", \"diastolic_bp\"),   stats_to_include = \"central\" )  # Dispersion measures descr_dispersion <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"glucose_mg_dl\", \"cholesterol_mg_dl\"),   stats_to_include = \"dispersion\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"cross-tabulation-ctable","dir":"Articles","previous_headings":"Basic Usage","what":"Cross-tabulation (ctable)","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"Professional cross-tabulation tables statistical tests:","code":"# Basic cross-tabulation ctable_result <- jsummarytools(   data = clinical_data,   analysis_type = \"ctable\",   cross_var1 = \"treatment_group\",   cross_var2 = \"treatment_response\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"cross-tabulation-with-proportions","dir":"Articles","previous_headings":"Basic Usage > Cross-tabulation (ctable)","what":"Cross-tabulation with Proportions","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Cross-tabulation with row proportions ctable_row <- jsummarytools(   data = clinical_data,   analysis_type = \"ctable\",   cross_var1 = \"gender\",   cross_var2 = \"bp_category\",   cross_proportions = \"row\" )  # Cross-tabulation with column proportions   ctable_col <- jsummarytools(   data = clinical_data,   analysis_type = \"ctable\",   cross_var1 = \"smoking_status\",   cross_var2 = \"diabetes\",   cross_proportions = \"col\" )  # Cross-tabulation with total proportions ctable_total <- jsummarytools(   data = clinical_data,   analysis_type = \"ctable\",   cross_var1 = \"study_site\",    cross_var2 = \"treatment_group\",   cross_proportions = \"total\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"weighted-cross-tabulation","dir":"Articles","previous_headings":"Basic Usage > Cross-tabulation (ctable)","what":"Weighted Cross-tabulation","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Add sample weights to data clinical_weighted <- clinical_data %>%   mutate(sample_weight = runif(nrow(clinical_data), 0.5, 2.0))  # Weighted cross-tabulation ctable_weighted <- jsummarytools(   data = clinical_weighted,   analysis_type = \"ctable\",   cross_var1 = \"treatment_group\",   cross_var2 = \"treatment_response\",    weights_var = \"sample_weight\",   cross_proportions = \"row\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"different-output-styles","dir":"Articles","previous_headings":"Advanced Features > Output Styling and Formatting","what":"Different Output Styles","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Grid style (default) style_grid <- jsummarytools(   data = survey_data,   analysis_type = \"freq\",   vars = c(\"satisfaction_service\"),   output_style = \"grid\" )  # Simple style style_simple <- jsummarytools(   data = survey_data,   analysis_type = \"freq\",    vars = c(\"satisfaction_service\"),   output_style = \"simple\" )  # Bootstrap style style_bootstrap <- jsummarytools(   data = survey_data,   analysis_type = \"freq\",   vars = c(\"satisfaction_service\"),    output_style = \"bootstrap\" )  # Minimal style style_minimal <- jsummarytools(   data = survey_data,   analysis_type = \"freq\",   vars = c(\"satisfaction_service\"),   output_style = \"minimal\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"html-vs-ascii-output","dir":"Articles","previous_headings":"Advanced Features > Output Styling and Formatting","what":"HTML vs ASCII Output","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# HTML output (default) html_output <- jsummarytools(   data = clinical_data,   analysis_type = \"dfsummary\",   vars = c(\"age\", \"gender\", \"bmi\"),   plain_ascii = FALSE,   bootstrap_css = TRUE )  # Plain ASCII output ascii_output <- jsummarytools(   data = clinical_data,   analysis_type = \"dfsummary\",   vars = c(\"age\", \"gender\", \"bmi\"),   plain_ascii = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"customization-options","dir":"Articles","previous_headings":"Advanced Features > Output Styling and Formatting","what":"Customization Options","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Highly customized output customized_output <- jsummarytools(   data = clinical_data,   analysis_type = \"dfsummary\",   vars = c(\"age\", \"systolic_bp\", \"treatment_group\"),   show_labels = TRUE,   show_variable_numbers = TRUE,   show_graphs = TRUE,   show_valid_counts = TRUE,   show_na_counts = TRUE,   round_digits = 3,   max_distinct_values = 15,   headings = TRUE,   escape_pipe = TRUE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"dataset-with-missing-values","dir":"Articles","previous_headings":"Advanced Features > Missing Data Analysis","what":"Dataset with Missing Values","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Create dataset with missing values clinical_missing <- clinical_data set.seed(456)  # Introduce different missing patterns clinical_missing$age[sample(1:300, 25)] <- NA  # MCAR clinical_missing$weight_kg[sample(1:300, 20)] <- NA  # MCAR  # MAR: older patients less likely to report income-related variables older_patients <- which(clinical_missing$age > 70) clinical_missing$quality_of_life[sample(older_patients, length(older_patients) * 0.3)] <- NA  # MNAR: patients with diabetes less likely to report glucose diabetic_patients <- which(clinical_missing$diabetes == \"Yes\") clinical_missing$glucose_mg_dl[sample(diabetic_patients, length(diabetic_patients) * 0.2)] <- NA  # Analysis of missing data patterns missing_summary <- jsummarytools(   data = clinical_missing,   analysis_type = \"dfsummary\",   show_na_counts = TRUE,   show_valid_counts = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"missing-data-in-different-analysis-types","dir":"Articles","previous_headings":"Advanced Features > Missing Data Analysis","what":"Missing Data in Different Analysis Types","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Descriptive statistics with missing data missing_descr <- jsummarytools(   data = clinical_missing,   analysis_type = \"descr\",   vars = c(\"age\", \"weight_kg\", \"glucose_mg_dl\", \"quality_of_life\") )  # Frequency analysis with missing data reporting missing_freq <- jsummarytools(   data = clinical_missing,   analysis_type = \"freq\",   vars = c(\"diabetes\", \"treatment_group\"),   report_missing = TRUE )  # Cross-tabulation handling missing values missing_ctable <- jsummarytools(   data = clinical_missing,   analysis_type = \"ctable\",   cross_var1 = \"diabetes\",   cross_var2 = \"treatment_group\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"clinical-trial-analysis","dir":"Articles","previous_headings":"Real-World Applications","what":"Clinical Trial Analysis","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Comprehensive baseline characteristics table baseline_characteristics <- jsummarytools(   data = clinical_data,   analysis_type = \"dfsummary\",   vars = c(\"age\", \"gender\", \"race\", \"bmi\", \"systolic_bp\", \"diastolic_bp\",             \"diabetes\", \"hypertension\", \"smoking_status\"),   group_var = \"treatment_group\",   show_graphs = FALSE,   round_digits = 1 )  # Treatment group comparisons treatment_comparison <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"age\", \"bmi\", \"systolic_bp\", \"glucose_mg_dl\", \"quality_of_life\"),   group_var = \"treatment_group\",   stats_to_include = \"all\" )  # Outcome analysis outcome_analysis <- jsummarytools(   data = clinical_data,   analysis_type = \"ctable\",   cross_var1 = \"treatment_group\",   cross_var2 = \"treatment_response\",   cross_proportions = \"row\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"survey-research-analysis","dir":"Articles","previous_headings":"Real-World Applications","what":"Survey Research Analysis","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Demographics overview demographics_overview <- jsummarytools(   data = survey_data,   analysis_type = \"freq\",   vars = c(\"age_group\", \"gender\", \"education\", \"income_bracket\", \"employment\") )  # Satisfaction analysis satisfaction_analysis <- jsummarytools(   data = survey_data,   analysis_type = \"descr\",   vars = c(\"satisfaction_service\", \"satisfaction_price\", \"satisfaction_quality\",             \"recommend_likelihood\", \"overall_rating\"),   stats_to_include = \"all\" )  # Customer segmentation customer_segments <- jsummarytools(   data = survey_data,   analysis_type = \"ctable\",   cross_var1 = \"usage_frequency\",   cross_var2 = \"return_customer\",   cross_proportions = \"row\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"laboratory-data-analysis","dir":"Articles","previous_headings":"Real-World Applications","what":"Laboratory Data Analysis","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Laboratory values overview lab_overview <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"glucose_mg_dl\", \"cholesterol_mg_dl\", \"creatinine_mg_dl\", \"hemoglobin_g_dl\"),   stats_to_include = \"all\",   round_digits = 2 )  # Laboratory values by patient characteristics lab_by_diabetes <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"glucose_mg_dl\", \"cholesterol_mg_dl\"),   group_var = \"diabetes\" )  lab_by_gender <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"hemoglobin_g_dl\", \"creatinine_mg_dl\"),   group_var = \"gender\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"caching-benefits","dir":"Articles","previous_headings":"Performance and Optimization","what":"Caching Benefits","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Large dataset for performance testing large_dataset <- do.call(rbind, replicate(3, clinical_data, simplify = FALSE)) large_dataset$patient_id <- paste0(\"PT_\", sprintf(\"%04d\", 1:nrow(large_dataset)))  # First run (will be slower) system.time({   perf_result1 <- jsummarytools(     data = large_dataset,     analysis_type = \"descr\",     vars = c(\"age\", \"bmi\", \"systolic_bp\", \"glucose_mg_dl\")   ) })  # Second run with same parameters (should be faster due to caching) system.time({   perf_result2 <- jsummarytools(     data = large_dataset,     analysis_type = \"descr\",      vars = c(\"age\", \"bmi\", \"systolic_bp\", \"glucose_mg_dl\")   ) })"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"memory-efficiency","dir":"Articles","previous_headings":"Performance and Optimization","what":"Memory Efficiency","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Check memory usage with different dataset sizes datasets <- list(   small = clinical_data[1:50, ],   medium = clinical_data[1:150, ],   large = clinical_data )  memory_usage <- sapply(names(datasets), function(size) {   gc()  # Garbage collection   start_memory <- gc()[2,2]  # Memory before      result <- jsummarytools(     data = datasets[[size]],     analysis_type = \"dfsummary\"   )      end_memory <- gc()[2,2]  # Memory after   return(end_memory - start_memory) })  print(memory_usage)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"comprehensive-statistics-selection","dir":"Articles","previous_headings":"Advanced Statistical Options","what":"Comprehensive Statistics Selection","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# All available statistics all_stats <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"age\", \"bmi\", \"systolic_bp\"),   stats_to_include = \"all\",   transpose_output = FALSE )  # Custom statistics with advanced measures custom_advanced <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"glucose_mg_dl\", \"cholesterol_mg_dl\"),   stats_to_include = \"custom\",   include_mean = TRUE,   include_median = TRUE,   include_mode = FALSE,   include_sd = TRUE,   include_var = TRUE,   include_range = TRUE,   include_quartiles = TRUE,   include_skewness = TRUE,   include_kurtosis = TRUE )  # Transposed output for publication transposed_stats <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"age\", \"bmi\", \"systolic_bp\", \"glucose_mg_dl\"),   transpose_output = TRUE,   round_digits = 2 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"advanced-cross-tabulation","dir":"Articles","previous_headings":"Advanced Statistical Options","what":"Advanced Cross-tabulation","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Complex cross-tabulation with multiple variables multi_var_data <- clinical_data %>%   mutate(     age_category = cut(age, breaks = c(0, 50, 65, 100),                        labels = c(\"Under 50\", \"50-65\", \"Over 65\")),     bmi_category_simple = cut(bmi, breaks = c(0, 25, 30, 50),                              labels = c(\"Normal\", \"Overweight\", \"Obese\"))   )  # Age and BMI relationship age_bmi_crosstab <- jsummarytools(   data = multi_var_data,   analysis_type = \"ctable\",   cross_var1 = \"age_category\",   cross_var2 = \"bmi_category_simple\",   cross_proportions = \"total\" )  # Treatment and outcome by study site site_treatment_outcome <- jsummarytools(   data = clinical_data,   analysis_type = \"ctable\",   cross_var1 = \"study_site\",   cross_var2 = \"treatment_response\",   cross_proportions = \"col\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"small-sample-sizes","dir":"Articles","previous_headings":"Error Handling and Edge Cases","what":"Small Sample Sizes","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Very small dataset tiny_dataset <- clinical_data[1:10, ]  small_summary <- jsummarytools(   data = tiny_dataset,   analysis_type = \"dfsummary\" )  small_descr <- jsummarytools(   data = tiny_dataset,   analysis_type = \"descr\",   vars = c(\"age\", \"bmi\", \"systolic_bp\") )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"single-variable-analysis","dir":"Articles","previous_headings":"Error Handling and Edge Cases","what":"Single Variable Analysis","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Single numeric variable single_numeric <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"age\") )  # Single categorical variable single_categorical <- jsummarytools(   data = clinical_data,   analysis_type = \"freq\",   vars = c(\"gender\") )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"unusual-data-distributions","dir":"Articles","previous_headings":"Error Handling and Edge Cases","what":"Unusual Data Distributions","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Create data with unusual characteristics unusual_data <- data.frame(   id = 1:100,   constant_var = rep(5, 100),  # No variation   binary_rare = c(rep(0, 95), rep(1, 5)),  # Very rare event   skewed_var = exp(rnorm(100, 0, 2)),  # Highly skewed   outlier_var = c(rnorm(95, 0, 1), rnorm(5, 100, 1)),  # With outliers   normal_var = rnorm(100, 50, 10) )  unusual_summary <- jsummarytools(   data = unusual_data,   analysis_type = \"dfsummary\" )  unusual_descr <- jsummarytools(   data = unusual_data,   analysis_type = \"descr\",   vars = c(\"skewed_var\", \"outlier_var\", \"normal_var\") )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"analysis-type-selection-guide","dir":"Articles","previous_headings":"Best Practices and Guidelines","what":"Analysis Type Selection Guide","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Create guidance table analysis_guide <- data.frame(   Analysis_Type = c(\"dfsummary\", \"freq\", \"descr\", \"ctable\"),   Best_For = c(     \"Initial data exploration and quality assessment\",     \"Categorical variable distributions and patterns\",     \"Comprehensive numeric variable summaries\",     \"Relationships between categorical variables\"   ),   When_To_Use = c(     \"First look at new dataset, data cleaning\",     \"Survey responses, demographic analysis\",     \"Baseline characteristics, outcome measures\",     \"Treatment comparisons, association testing\"   ),   Output_Type = c(     \"HTML tables with graphs and summaries\",     \"Frequency tables with percentages\",     \"Statistical summary tables\",     \"Cross-tabulation with chi-square tests\"   ) )  kable(analysis_guide, caption = \"jsummarytools Analysis Type Selection Guide\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"statistical-interpretation-guidelines","dir":"Articles","previous_headings":"Best Practices and Guidelines","what":"Statistical Interpretation Guidelines","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Create interpretation guide interpretation_guide <- data.frame(   Statistic = c(\"Mean\", \"Median\", \"Standard Deviation\", \"IQR\", \"Skewness\", \"Kurtosis\"),   Interpretation = c(     \"Average value, sensitive to outliers\",     \"Middle value, robust to outliers\",      \"Average distance from mean\",     \"Range of middle 50% of data\",     \"Asymmetry of distribution\",     \"Peakedness of distribution\"   ),   Normal_Range = c(     \"Depends on variable\",     \"Should be close to mean if normal\",     \"About 1/6 of range for normal data\",     \"About 1.35 * SD for normal data\",      \"0 for normal distribution\",     \"3 for normal distribution\"   ) )  kable(interpretation_guide, caption = \"Statistical Interpretation Guide\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"publication-ready-tables","dir":"Articles","previous_headings":"Best Practices and Guidelines","what":"Publication-Ready Tables","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Table 1: Baseline characteristics table1 <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"age\", \"bmi\", \"systolic_bp\", \"diastolic_bp\", \"glucose_mg_dl\"),   group_var = \"treatment_group\",   stats_to_include = \"basic\",   round_digits = 1 )  # Table 2: Categorical variables summary table2 <- jsummarytools(   data = clinical_data,   analysis_type = \"freq\",    vars = c(\"gender\", \"race\", \"diabetes\", \"hypertension\", \"smoking_status\") )  # Table 3: Treatment outcomes table3 <- jsummarytools(   data = clinical_data,   analysis_type = \"ctable\",   cross_var1 = \"treatment_group\",   cross_var2 = \"treatment_response\",   cross_proportions = \"row\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"reproducible-research","dir":"Articles","previous_headings":"Integration with Research Workflows","what":"Reproducible Research","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Set parameters for reproducible analysis analysis_params <- list(   variables_continuous = c(\"age\", \"bmi\", \"systolic_bp\", \"glucose_mg_dl\"),   variables_categorical = c(\"gender\", \"diabetes\", \"treatment_group\"),   grouping_variable = \"treatment_group\",   decimal_places = 2,   include_missing = TRUE )  # Systematic analysis using parameters systematic_analysis <- function(data, params) {   results <- list()      # Data overview   results$overview <- jsummarytools(     data = data,     analysis_type = \"dfsummary\",     show_na_counts = params$include_missing   )      # Continuous variables   results$continuous <- jsummarytools(     data = data,     analysis_type = \"descr\",     vars = params$variables_continuous,     group_var = params$grouping_variable,     round_digits = params$decimal_places   )      # Categorical variables   results$categorical <- jsummarytools(     data = data,     analysis_type = \"freq\",     vars = params$variables_categorical,     report_missing = params$include_missing   )      return(results) }  # Run systematic analysis study_results <- systematic_analysis(clinical_data, analysis_params)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"quality-control-and-validation","dir":"Articles","previous_headings":"Integration with Research Workflows","what":"Quality Control and Validation","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"","code":"# Data quality assessment quality_check <- jsummarytools(   data = clinical_data,   analysis_type = \"dfsummary\",   show_na_counts = TRUE,   show_valid_counts = TRUE,   max_distinct_values = 20 )  # Outlier detection through descriptive statistics outlier_detection <- jsummarytools(   data = clinical_data,   analysis_type = \"descr\",   vars = c(\"age\", \"bmi\", \"systolic_bp\", \"glucose_mg_dl\", \"cholesterol_mg_dl\"),   stats_to_include = \"all\" )  # Completeness assessment completeness_check <- clinical_data %>%   summarise(     total_observations = n(),     complete_cases = sum(complete.cases(.)),     completeness_rate = round(100 * complete_cases / total_observations, 1)   )  print(completeness_check)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"jsummarytools function provides comprehensive solution descriptive statistics clinical survey research. Key advantages include:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"core-capabilities","dir":"Articles","previous_headings":"Summary","what":"Core Capabilities","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"Four Analysis Types: dfSummary data exploration, freq categorical analysis, descr numeric summaries, ctable cross-tabulations Professional Output: HTML-formatted tables ready reports publications Grouping Support: Stratified analyses treatment comparisons subgroup analyses Missing Data Handling: Comprehensive reporting appropriate handling missing values","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"performance-features","dir":"Articles","previous_headings":"Summary","what":"Performance Features","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"Intelligent Caching: Automatic caching results faster repeated analyses Memory Efficiency: Optimized large datasets smart data preparation Error Handling: Robust error handling edge cases unusual data Validation: Comprehensive input validation informative error messages","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"customization-options-1","dir":"Articles","previous_headings":"Summary","what":"Customization Options","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"Output Formatting: Multiple styles including HTML, ASCII, Bootstrap CSS Statistical Control: Custom selection statistics precision control Visual Elements: Optional graphs charts dfSummary output Publication Ready: Professional formatting suitable academic publications","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"use-cases","dir":"Articles","previous_headings":"Summary","what":"Use Cases","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"Clinical Research: Baseline characteristics, outcome analysis, safety reporting Survey Research: Demographics, satisfaction analysis, response patterns Quality Control: Data validation, completeness assessment, outlier detection Regulatory Submissions: Standardized statistical summaries regulatory bodies","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/33-jsummarytools-comprehensive.html","id":"next-steps","dir":"Articles","previous_headings":"Summary","what":"Next Steps","title":"Comprehensive Descriptive Statistics with jsummarytools","text":"Explore different analysis types data Experiment grouping variables comparative analyses Try different output styles various reporting needs Consider summarytools package documentation advanced features","code":"sessionInfo()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"introduction-to-jjwithinstats","dir":"Articles","previous_headings":"","what":"Introduction to jjwithinstats","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"jjwithinstats function powerful wrapper around ggstatsplot::ggwithinstats function creates publication-ready violin-box plots within-subjects (repeated measures) designs. Within-subjects designs fundamental research participants measured multiple time points different conditions, making tool essential longitudinal studies, clinical trials, experimental research.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"Introduction to jjwithinstats","what":"Key Features","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"Repeated Measures Analysis: Compare 2-4 measurements subjects Statistical Flexibility: Parametric, nonparametric, robust, Bayesian tests Visual Customization: Violin plots, box plots, individual data points, connection lines Pairwise Comparisons: Multiple comparison corrections effect size calculations Performance Optimized: Enhanced caching data preparation faster rendering Publication-Ready: High-quality outputs suitable manuscripts presentations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"loading-required-libraries","dir":"Articles","previous_headings":"Introduction to jjwithinstats","what":"Loading Required Libraries","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"library(jjstatsplot) library(dplyr) library(tidyr)  # For this vignette, we'll create sample data set.seed(123)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"simple-pre-post-design","dir":"Articles","previous_headings":"Basic Within-Subjects Analysis","what":"Simple Pre-Post Design","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"common within-subjects design compares measurements intervention:","code":"# Create pre-post treatment data prepost_data <- data.frame(   subject_id = 1:20,   pre_treatment = rnorm(20, mean = 85, sd = 12),   post_treatment = rnorm(20, mean = 75, sd = 10) )  # Add realistic correlation prepost_data$post_treatment <- prepost_data$pre_treatment - rnorm(20, mean = 8, sd = 5)  # Create basic within-subjects plot result_basic <- jjwithinstats(   data = prepost_data,   dep1 = \"pre_treatment\",   dep2 = \"post_treatment\",   mytitle = \"Treatment Effect Analysis\",   xtitle = \"Time Point\",   ytitle = \"Outcome Score\" )  print(result_basic)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"key-concepts","dir":"Articles","previous_headings":"Basic Within-Subjects Analysis > Understanding Within-Subjects Design","what":"Key Concepts","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"Within-Subjects Design Advantages: - Reduces individual differences confounding variables - statistical power smaller sample sizes - participant serves control - Ideal studying change time Data Requirements: - Wide format: row represents one subject - Multiple columns different time points/conditions - Complete cases (missing data removed) - Numeric measurements ","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"therapy-effectiveness-study","dir":"Articles","previous_headings":"Three Time Points Analysis","what":"Therapy Effectiveness Study","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Create therapy effectiveness data therapy_data <- data.frame(   patient_id = 1:25,   baseline_anxiety = rnorm(25, mean = 65, sd = 15),   week_6_anxiety = rnorm(25, mean = 50, sd = 12),   week_12_anxiety = rnorm(25, mean = 35, sd = 10) )  # Add realistic decreasing trend for(i in 1:25) {   therapy_data$week_6_anxiety[i] <- therapy_data$baseline_anxiety[i] - runif(1, 8, 18)   therapy_data$week_12_anxiety[i] <- therapy_data$week_6_anxiety[i] - runif(1, 10, 20) }  # Create three-timepoint analysis result_therapy <- jjwithinstats(   data = therapy_data,   dep1 = \"baseline_anxiety\",   dep2 = \"week_6_anxiety\",   dep3 = \"week_12_anxiety\",   typestatistics = \"nonparametric\",   pairwisecomparisons = TRUE,   mytitle = \"Anxiety Reduction Over Therapy\",   xtitle = \"Assessment Time\",   ytitle = \"Anxiety Score\" )  print(result_therapy)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"clinical-trial-longitudinal-study","dir":"Articles","previous_headings":"Four Time Points Analysis","what":"Clinical Trial Longitudinal Study","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Create clinical trial data clinical_data <- data.frame(   participant_id = 1:30,   baseline_score = rnorm(30, mean = 100, sd = 20),   month_3_score = rnorm(30, mean = 85, sd = 18),   month_6_score = rnorm(30, mean = 70, sd = 16),   month_12_score = rnorm(30, mean = 55, sd = 15) )  # Add realistic progressive improvement for(i in 1:30) {   decline_factor <- runif(1, 0.8, 0.95)   clinical_data$month_3_score[i] <- clinical_data$baseline_score[i] * decline_factor   clinical_data$month_6_score[i] <- clinical_data$month_3_score[i] * decline_factor   clinical_data$month_12_score[i] <- clinical_data$month_6_score[i] * decline_factor }  # Create four-timepoint analysis result_clinical <- jjwithinstats(   data = clinical_data,   dep1 = \"baseline_score\",   dep2 = \"month_3_score\",   dep3 = \"month_6_score\",   dep4 = \"month_12_score\",   typestatistics = \"parametric\",   pairwisecomparisons = TRUE,   centralityplotting = TRUE,   mytitle = \"Clinical Trial Longitudinal Results\",   xtitle = \"Study Month\",   ytitle = \"Clinical Score\" )  print(result_clinical)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"parametric-vs-nonparametric-analysis","dir":"Articles","previous_headings":"Statistical Test Types","what":"Parametric vs Nonparametric Analysis","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Create example data for statistical comparisons stat_data <- data.frame(   measurement_1 = c(80, 85, 78, 82, 88, 75, 83, 79, 86, 81),   measurement_2 = c(70, 75, 68, 72, 78, 65, 73, 69, 76, 71),   measurement_3 = c(60, 65, 58, 62, 68, 55, 63, 59, 66, 61) )  # Parametric analysis (assumes normality) result_parametric <- jjwithinstats(   data = stat_data,   dep1 = \"measurement_1\",   dep2 = \"measurement_2\",   dep3 = \"measurement_3\",   typestatistics = \"parametric\",   pairwisecomparisons = TRUE,   mytitle = \"Parametric Analysis (ANOVA)\",   resultssubtitle = TRUE )  print(result_parametric)  # Nonparametric analysis (distribution-free) result_nonparam <- jjwithinstats(   data = stat_data,   dep1 = \"measurement_1\",   dep2 = \"measurement_2\",   dep3 = \"measurement_3\",   typestatistics = \"nonparametric\",   pairwisecomparisons = TRUE,   mytitle = \"Nonparametric Analysis (Friedman Test)\",   resultssubtitle = TRUE )  print(result_nonparam)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"robust-and-bayesian-analysis","dir":"Articles","previous_headings":"Statistical Test Types","what":"Robust and Bayesian Analysis","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Robust analysis (trimmed means, resistant to outliers) result_robust <- jjwithinstats(   data = stat_data,   dep1 = \"measurement_1\",   dep2 = \"measurement_2\",   dep3 = \"measurement_3\",   typestatistics = \"robust\",   pairwisecomparisons = TRUE,   mytitle = \"Robust Analysis (Trimmed Means)\",   centralityplotting = TRUE,   centralitytype = \"robust\" )  print(result_robust)  # Bayesian analysis result_bayes <- jjwithinstats(   data = stat_data,   dep1 = \"measurement_1\",   dep2 = \"measurement_2\",   dep3 = \"measurement_3\",   typestatistics = \"bayes\",   pairwisecomparisons = TRUE,   mytitle = \"Bayesian Analysis\",   centralityplotting = TRUE,   centralitytype = \"bayes\" )  print(result_bayes)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"multiple-comparison-adjustments","dir":"Articles","previous_headings":"Pairwise Comparisons and Corrections","what":"Multiple Comparison Adjustments","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Create data for pairwise comparison demonstration pairwise_data <- data.frame(   time_1 = rnorm(20, mean = 100, sd = 15),   time_2 = rnorm(20, mean = 90, sd = 12),   time_3 = rnorm(20, mean = 80, sd = 10),   time_4 = rnorm(20, mean = 70, sd = 8) )  # Bonferroni correction (conservative) result_bonferroni <- jjwithinstats(   data = pairwise_data,   dep1 = \"time_1\",   dep2 = \"time_2\",   dep3 = \"time_3\",   dep4 = \"time_4\",   pairwisecomparisons = TRUE,   padjustmethod = \"bonferroni\",   pairwisedisplay = \"everything\",   mytitle = \"Bonferroni Correction\" )  print(result_bonferroni)  # Holm correction (step-down method) result_holm <- jjwithinstats(   data = pairwise_data,   dep1 = \"time_1\",   dep2 = \"time_2\",   dep3 = \"time_3\",   dep4 = \"time_4\",   pairwisecomparisons = TRUE,   padjustmethod = \"holm\",   pairwisedisplay = \"significant\",   mytitle = \"Holm Correction\" )  print(result_holm)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"effect-size-calculations","dir":"Articles","previous_headings":"Pairwise Comparisons and Corrections","what":"Effect Size Calculations","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Unbiased effect sizes (Hedge's g) result_unbiased <- jjwithinstats(   data = pairwise_data,   dep1 = \"time_1\",   dep2 = \"time_2\",   dep3 = \"time_3\",   dep4 = \"time_4\",   typestatistics = \"parametric\",   effsizetype = \"unbiased\",   pairwisecomparisons = TRUE,   mytitle = \"Unbiased Effect Sizes (Hedge's g)\" )  print(result_unbiased)  # Partial omega-squared for ANOVA result_omega <- jjwithinstats(   data = pairwise_data,   dep1 = \"time_1\",   dep2 = \"time_2\",   dep3 = \"time_3\",   dep4 = \"time_4\",   typestatistics = \"parametric\",   effsizetype = \"omega\",   pairwisecomparisons = TRUE,   mytitle = \"Partial Omega-Squared Effect Size\" )  print(result_omega)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"visual-components-control","dir":"Articles","previous_headings":"Plot Customization","what":"Visual Components Control","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Create sample data for customization custom_data <- data.frame(   pre_score = c(85, 88, 82, 90, 87, 84, 91, 86, 89, 83),   post_score = c(75, 78, 72, 80, 77, 74, 81, 76, 79, 73) )  # Violin plots only result_violin <- jjwithinstats(   data = custom_data,   dep1 = \"pre_score\",   dep2 = \"post_score\",   violin = TRUE,   boxplot = FALSE,   point = FALSE,   mytitle = \"Violin Plots Only\" )  print(result_violin)  # Box plots with individual points result_box_points <- jjwithinstats(   data = custom_data,   dep1 = \"pre_score\",   dep2 = \"post_score\",   violin = FALSE,   boxplot = TRUE,   point = TRUE,   pointpath = TRUE,   mytitle = \"Box Plots with Connected Points\" )  print(result_box_points)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"centrality-and-path-options","dir":"Articles","previous_headings":"Plot Customization","what":"Centrality and Path Options","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Centrality plotting with paths result_centrality <- jjwithinstats(   data = custom_data,   dep1 = \"pre_score\",   dep2 = \"post_score\",   centralityplotting = TRUE,   centralitytype = \"parametric\",   centralitypath = TRUE,   pointpath = TRUE,   mytitle = \"Mean Values with Connection Paths\" )  print(result_centrality)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"theme-customization","dir":"Articles","previous_headings":"Plot Customization","what":"Theme Customization","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Original ggstatsplot theme result_original <- jjwithinstats(   data = custom_data,   dep1 = \"pre_score\",   dep2 = \"post_score\",   originaltheme = TRUE,   mytitle = \"Original ggstatsplot Theme\" )  print(result_original)  # Custom jamovi theme result_custom <- jjwithinstats(   data = custom_data,   dep1 = \"pre_score\",   dep2 = \"post_score\",   originaltheme = FALSE,   mytitle = \"Custom Jamovi Theme\" )  print(result_custom)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"clinical-research-pain-management","dir":"Articles","previous_headings":"Real-World Applications","what":"Clinical Research: Pain Management","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Pain management study pain_data <- data.frame(   patient_id = 1:25,   pain_baseline = sample(6:10, 25, replace = TRUE, prob = c(0.1, 0.2, 0.3, 0.3, 0.1)),   pain_week_2 = sample(4:8, 25, replace = TRUE, prob = c(0.15, 0.25, 0.3, 0.25, 0.05)),   pain_week_4 = sample(2:6, 25, replace = TRUE, prob = c(0.2, 0.3, 0.3, 0.15, 0.05)),   pain_week_8 = sample(1:5, 25, replace = TRUE, prob = c(0.3, 0.3, 0.25, 0.1, 0.05)) )  result_pain <- jjwithinstats(   data = pain_data,   dep1 = \"pain_baseline\",   dep2 = \"pain_week_2\",   dep3 = \"pain_week_4\",   dep4 = \"pain_week_8\",   typestatistics = \"nonparametric\",   pairwisecomparisons = TRUE,   mytitle = \"Pain Reduction Over Treatment Period\",   xtitle = \"Assessment Time\",   ytitle = \"Pain Score (1-10 scale)\",   pointpath = TRUE )  print(result_pain)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"educational-research-learning-assessment","dir":"Articles","previous_headings":"Real-World Applications","what":"Educational Research: Learning Assessment","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Educational assessment data education_data <- data.frame(   student_id = 1:30,   pretest_score = rnorm(30, mean = 60, sd = 15),   midterm_score = rnorm(30, mean = 70, sd = 12),   final_score = rnorm(30, mean = 80, sd = 10) )  # Add learning progression for(i in 1:30) {   improvement <- runif(1, 5, 15)   education_data$midterm_score[i] <- education_data$pretest_score[i] + improvement   education_data$final_score[i] <- education_data$midterm_score[i] + improvement } education_data$midterm_score <- pmin(education_data$midterm_score, 100) education_data$final_score <- pmin(education_data$final_score, 100)  result_education <- jjwithinstats(   data = education_data,   dep1 = \"pretest_score\",   dep2 = \"midterm_score\",   dep3 = \"final_score\",   typestatistics = \"parametric\",   pairwisecomparisons = TRUE,   centralityplotting = TRUE,   centralitypath = TRUE,   mytitle = \"Student Learning Progression\",   xtitle = \"Assessment Period\",   ytitle = \"Test Score (%)\" )  print(result_education)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"exercise-science-performance-training","dir":"Articles","previous_headings":"Real-World Applications","what":"Exercise Science: Performance Training","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Exercise performance data exercise_data <- data.frame(   athlete_id = 1:20,   week_0_performance = rnorm(20, mean = 120, sd = 25),   week_4_performance = rnorm(20, mean = 135, sd = 22),   week_8_performance = rnorm(20, mean = 150, sd = 20),   week_12_performance = rnorm(20, mean = 165, sd = 18) )  # Add realistic training progression for(i in 1:20) {   base_performance <- exercise_data$week_0_performance[i]   improvement_rate <- runif(1, 1.08, 1.15)   exercise_data$week_4_performance[i] <- base_performance * improvement_rate   exercise_data$week_8_performance[i] <- exercise_data$week_4_performance[i] * improvement_rate   exercise_data$week_12_performance[i] <- exercise_data$week_8_performance[i] * improvement_rate }  result_exercise <- jjwithinstats(   data = exercise_data,   dep1 = \"week_0_performance\",   dep2 = \"week_4_performance\",   dep3 = \"week_8_performance\",   dep4 = \"week_12_performance\",   typestatistics = \"parametric\",   pairwisecomparisons = TRUE,   effsizetype = \"unbiased\",   mytitle = \"Athletic Performance Improvement\",   xtitle = \"Training Week\",   ytitle = \"Performance Score\",   pointpath = TRUE )  print(result_exercise)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"psychology-cognitive-training","dir":"Articles","previous_headings":"Real-World Applications","what":"Psychology: Cognitive Training","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Cognitive training study cognitive_data <- data.frame(   participant_id = 1:25,   memory_pre = rnorm(25, mean = 75, sd = 18),   memory_post_1month = rnorm(25, mean = 85, sd = 16),   memory_post_3month = rnorm(25, mean = 90, sd = 14),   memory_post_6month = rnorm(25, mean = 88, sd = 15)  # Some decline over time )  # Add realistic cognitive improvement pattern for(i in 1:25) {   initial_improvement <- runif(1, 8, 18)   continued_improvement <- runif(1, 3, 10)   maintenance_decline <- runif(1, 0, 5)      cognitive_data$memory_post_1month[i] <- cognitive_data$memory_pre[i] + initial_improvement   cognitive_data$memory_post_3month[i] <- cognitive_data$memory_post_1month[i] + continued_improvement   cognitive_data$memory_post_6month[i] <- cognitive_data$memory_post_3month[i] - maintenance_decline }  result_cognitive <- jjwithinstats(   data = cognitive_data,   dep1 = \"memory_pre\",   dep2 = \"memory_post_1month\",   dep3 = \"memory_post_3month\",   dep4 = \"memory_post_6month\",   typestatistics = \"robust\",   pairwisecomparisons = TRUE,   centralityplotting = TRUE,   mytitle = \"Cognitive Training Effects with Maintenance\",   xtitle = \"Assessment Time\",   ytitle = \"Memory Score\" )  print(result_cognitive)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"large-dataset-handling","dir":"Articles","previous_headings":"Performance Optimization Features","what":"Large Dataset Handling","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Performance test with larger dataset large_data <- data.frame(   time_1 = runif(500, 80, 120),   time_2 = runif(500, 75, 115),   time_3 = runif(500, 70, 110) )  # This renders efficiently due to optimization start_time <- Sys.time() performance_result <- jjwithinstats(   data = large_data,   dep1 = \"time_1\",   dep2 = \"time_2\",   dep3 = \"time_3\",   typestatistics = \"parametric\" ) end_time <- Sys.time()  cat(\"Rendering time:\", difftime(end_time, start_time, units = \"secs\"), \"seconds\\\\n\") print(performance_result)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"optimization-features","dir":"Articles","previous_headings":"Performance Optimization Features","what":"Optimization Features","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"function implements several performance enhancements: Data Preparation Caching: Long data transformation cached reused Option Preprocessing: Statistical options plot arguments processed Hash-based Change Detection: reprocesses inputs actually change Efficient Memory Usage: Minimizes data copying transformation overhead Smart Invalidation: Cache cleared relevant options change","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"data-format-requirements","dir":"Articles","previous_headings":"Data Preparation Best Practices","what":"Data Format Requirements","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Correct format: Wide data with subjects as rows correct_format <- data.frame(   subject_id = 1:5,   time_1 = c(85, 90, 78, 88, 92),   time_2 = c(75, 85, 68, 82, 87),   time_3 = c(65, 80, 58, 76, 82) )  cat(\"✓ Correct Format (Wide):\\\\n\") print(correct_format)  # Function automatically converts to long format internally cat(\"\\\\n→ Internal conversion to long format for analysis\\\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"handling-missing-data","dir":"Articles","previous_headings":"Data Preparation Best Practices","what":"Handling Missing Data","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Data with missing values missing_data <- data.frame(   pre_measure = c(80, 85, NA, 88, 92),   post_measure = c(75, NA, 68, 82, 87) )  cat(\"Data with missing values:\\\\n\") print(missing_data)  # Function removes incomplete cases result_missing <- jjwithinstats(   data = missing_data,   dep1 = \"pre_measure\",   dep2 = \"post_measure\",   mytitle = \"Handling Missing Data\" )  cat(\"\\\\n→ Analysis proceeds with complete cases only\\\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"data-validation","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Data Validation","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Function to validate within-subjects data validate_within_subjects_data <- function(data, variables) {   errors <- c()      # Check if variables exist   missing_vars <- variables[!variables %in% names(data)]   if (length(missing_vars) > 0) {     errors <- c(errors, paste(\"Missing variables:\", paste(missing_vars, collapse = \", \")))   }      if (length(errors) > 0) return(errors)      # Check data types   non_numeric <- variables[!sapply(variables, function(v) is.numeric(data[[v]]))]   if (length(non_numeric) > 0) {     errors <- c(errors, paste(\"Non-numeric variables:\", paste(non_numeric, collapse = \", \")))   }      # Check for sufficient data   complete_rows <- sum(complete.cases(data[variables]))   if (complete_rows < 3) {     errors <- c(errors, \"Insufficient complete cases (need at least 3)\")   }      # Check for variance   zero_variance <- variables[sapply(variables, function(v) var(data[[v]], na.rm = TRUE) == 0)]   if (length(zero_variance) > 0) {     errors <- c(errors, paste(\"Zero variance variables:\", paste(zero_variance, collapse = \", \")))   }      if (length(errors) == 0) {     return(\"Data validation passed!\")   } else {     return(errors)   } }  # Test validation test_data <- data.frame(   measurement_1 = c(80, 85, 90),   measurement_2 = c(75, 80, 85) )  validate_within_subjects_data(test_data, c(\"measurement_1\", \"measurement_2\"))"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"common-error-solutions","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"Common Error Solutions","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Error prevention examples  # 1. Ensure sufficient data points minimal_data <- data.frame(   pre = c(10, 15, 20),   post = c(8, 12, 18) )  cat(\"✓ Minimal viable dataset (n=3):\\\\n\") result_minimal <- jjwithinstats(   data = minimal_data,   dep1 = \"pre\",   dep2 = \"post\",   typestatistics = \"nonparametric\",   pairwisecomparisons = FALSE,   mytitle = \"Minimal Dataset Analysis\" )  # 2. Handle extreme values extreme_data <- data.frame(   measure_a = c(1, 2, 3, 1000),  # Outlier   measure_b = c(0.5, 1.5, 2.5, 500)  # Outlier )  cat(\"\\\\n✓ Dataset with extreme values:\\\\n\") result_extreme <- jjwithinstats(   data = extreme_data,   dep1 = \"measure_a\",   dep2 = \"measure_b\",   typestatistics = \"robust\",  # Robust to outliers   mytitle = \"Robust Analysis for Extreme Values\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"dose-response-studies","dir":"Articles","previous_headings":"Advanced Applications","what":"Dose-Response Studies","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Drug dosage optimization dosage_data <- data.frame(   patient_id = 1:15,   efficacy_5mg = rnorm(15, mean = 40, sd = 12),   efficacy_10mg = rnorm(15, mean = 65, sd = 15),   efficacy_15mg = rnorm(15, mean = 80, sd = 18),   efficacy_20mg = rnorm(15, mean = 85, sd = 20) )  # Add dose-response relationship for(i in 1:15) {   base_response <- dosage_data$efficacy_5mg[i]   dosage_data$efficacy_10mg[i] <- base_response + runif(1, 15, 30)   dosage_data$efficacy_15mg[i] <- dosage_data$efficacy_10mg[i] + runif(1, 10, 20)   dosage_data$efficacy_20mg[i] <- dosage_data$efficacy_15mg[i] + runif(1, 2, 8) }  result_dosage <- jjwithinstats(   data = dosage_data,   dep1 = \"efficacy_5mg\",   dep2 = \"efficacy_10mg\",    dep3 = \"efficacy_15mg\",   dep4 = \"efficacy_20mg\",   typestatistics = \"parametric\",   pairwisecomparisons = TRUE,   centralityplotting = TRUE,   mytitle = \"Dose-Response Relationship\",   xtitle = \"Drug Dosage (mg)\",   ytitle = \"Treatment Efficacy (%)\" )  print(result_dosage)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"recovery-time-analysis","dir":"Articles","previous_headings":"Advanced Applications","what":"Recovery Time Analysis","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Recovery study with realistic progression recovery_data <- data.frame(   patient_id = 1:20,   recovery_day_1 = rnorm(20, mean = 80, sd = 15),   recovery_day_7 = rnorm(20, mean = 60, sd = 12),   recovery_day_14 = rnorm(20, mean = 40, sd = 10),   recovery_day_21 = rnorm(20, mean = 20, sd = 8) )  # Add realistic recovery progression for(i in 1:20) {   daily_improvement <- runif(1, 2, 4)   recovery_data$recovery_day_7[i] <- recovery_data$recovery_day_1[i] - (daily_improvement * 6)   recovery_data$recovery_day_14[i] <- recovery_data$recovery_day_7[i] - (daily_improvement * 7)   recovery_data$recovery_day_21[i] <- recovery_data$recovery_day_14[i] - (daily_improvement * 7) } recovery_data[, 2:5] <- lapply(recovery_data[, 2:5], function(x) pmax(x, 0))  result_recovery <- jjwithinstats(   data = recovery_data,   dep1 = \"recovery_day_1\",   dep2 = \"recovery_day_7\",   dep3 = \"recovery_day_14\",   dep4 = \"recovery_day_21\",   typestatistics = \"nonparametric\",   pairwisecomparisons = TRUE,   pointpath = TRUE,   mytitle = \"Patient Recovery Trajectory\",   xtitle = \"Days Post-Treatment\",   ytitle = \"Recovery Score\" )  print(result_recovery)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"design-guidelines","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Design Guidelines","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"Sample Size: Minimum 8-10 subjects reliable results Time Points: 2-4 measurements work best (function limitation) Measurement Spacing: Ensure sufficient time meaningful change Data Quality: Remove extreme outliers may bias results Statistical Choice: Use nonparametric tests ordinal data small samples","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"statistical-considerations","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Statistical Considerations","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"Sphericity: parametric tests >2 time points, consider sphericity assumptions Effect Sizes: Report effect sizes alongside p-values practical significance Multiple Comparisons: Use appropriate corrections pairwise comparisons Missing Data: Understand complete case analysis used","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"visualization-best-practices","dir":"Articles","previous_headings":"Best Practices and Recommendations","what":"Visualization Best Practices","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"","code":"# Optimal visualization settings best_practice_data <- data.frame(   pre_intervention = rnorm(20, 70, 15),   post_intervention = rnorm(20, 55, 12) )  result_best_practice <- jjwithinstats(   data = best_practice_data,   dep1 = \"pre_intervention\",   dep2 = \"post_intervention\",   # Statistical settings   typestatistics = \"parametric\",   pairwisecomparisons = TRUE,   padjustmethod = \"holm\",   effsizetype = \"unbiased\",   # Visual settings   violin = TRUE,   boxplot = TRUE,   point = TRUE,   pointpath = TRUE,   centralityplotting = TRUE,   # Labels   mytitle = \"Intervention Effectiveness Study\",   xtitle = \"Assessment Time\",   ytitle = \"Outcome Measure\",   resultssubtitle = TRUE )  print(result_best_practice)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"jjwithinstats function provides comprehensive solution within-subjects analysis : Flexible Design Support: 2-4 repeated measurements Statistical Rigor: Multiple test types correction methods Visual Excellence: Customizable publication-ready plots Performance Optimization: Efficient rendering large datasets Clinical Applicability: Ideal longitudinal intervention studies","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"when-to-use-jjwithinstats","dir":"Articles","previous_headings":"Summary","what":"When to Use jjwithinstats","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"Ideal Applications: - Pre-post intervention studies - Longitudinal clinical trials - Educational assessment progressions - Therapy effectiveness research - Dose-response studies - Recovery time analysis Key Advantages: - Reduces individual differences confounding variables - Higher statistical power smaller samples - Comprehensive statistical output effect sizes - Publication-ready visualizations - Robust error handling optimization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jjwithinstats-comprehensive.html","id":"function-reference","dir":"Articles","previous_headings":"Summary","what":"Function Reference","title":"jjwithinstats: Comprehensive Within-Subjects Analysis","text":"complete parameter documentation, see ggstatsplot package documentation: - CRAN ggstatsplot documentation - ggwithinstats function","code":"# Session information sessionInfo()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Professional Violin Plots with jviolin","text":"jviolin function provides professional violin plots visualizing distribution continuous data across groups. Violin plots combine best features box plots density plots, showing summary statistics shape data distribution.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"what-are-violin-plots","dir":"Articles","previous_headings":"Introduction","what":"What are Violin Plots?","title":"Professional Violin Plots with jviolin","text":"Violin plots mirror-symmetric density plots display: - Distribution shape: width shows data density value - Summary statistics: Can include quartiles, medians, means - Group comparisons: Easy visual comparison across categories - Data points: Optional overlay individual observations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"key-features","dir":"Articles","previous_headings":"Introduction","what":"Key Features","title":"Professional Violin Plots with jviolin","text":"Advanced Overlays: Boxplots, individual points, mean indicators, quantile lines Multiple Distributions: Handle normal, skewed, bimodal, complex distributions Professional Styling: Multiple themes color palettes Performance Optimized: Intelligent caching large datasets Flexible Customization: Extensive options appearance behavior Clinical Focus: Designed medical clinical research applications","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"Introduction","what":"Installation and Setup","title":"Professional Violin Plots with jviolin","text":"","code":"# Load required libraries library(jjstatsplot) library(dplyr) library(ggplot2)    # Check if packages are available if (!requireNamespace(\"ggplot2\", quietly = TRUE)) {   message(\"Note: ggplot2 package required for violin plots\") }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"Professional Violin Plots with jviolin","text":"Let’s create realistic datasets different types violin plot applications:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"clinical-trial-data","dir":"Articles","previous_headings":"Data Preparation","what":"Clinical Trial Data","title":"Professional Violin Plots with jviolin","text":"","code":"# Create clinical trial dataset set.seed(123) clinical_data <- data.frame(   # Patient identifiers   patient_id = paste0(\"PT_\", sprintf(\"%03d\", 1:240)),      # Treatment groups   treatment_arm = factor(sample(c(\"Placebo\", \"Low_Dose\", \"High_Dose\"),                                 240, replace = TRUE, prob = c(0.4, 0.3, 0.3))),   study_site = factor(sample(c(\"Site_A\", \"Site_B\", \"Site_C\"), 240, replace = TRUE)),      # Patient characteristics   age = round(rnorm(240, 58, 15)),   gender = factor(sample(c(\"Male\", \"Female\"), 240, replace = TRUE)),   baseline_severity = factor(sample(c(\"Mild\", \"Moderate\", \"Severe\"),                                     240, replace = TRUE, prob = c(0.4, 0.4, 0.2))),      # Outcome measures   baseline_score = rnorm(240, 45, 12),   blood_pressure = rnorm(240, 130, 20),   quality_of_life = rnorm(240, 60, 18),      # Laboratory values (often log-normally distributed)   biomarker_a = exp(rnorm(240, 2, 0.8)),   biomarker_b = exp(rnorm(240, 3, 0.6)),   inflammatory_marker = exp(rnorm(240, 1.5, 1.0)) ) %>%   mutate(     # Create realistic dose-response relationships     change_from_baseline = case_when(       treatment_arm == \"Placebo\" ~ rnorm(240, 2, 8),       treatment_arm == \"Low_Dose\" ~ rnorm(240, 8, 10),       treatment_arm == \"High_Dose\" ~ rnorm(240, 15, 12)     ) +        # Add baseline severity effect       case_when(         baseline_severity == \"Mild\" ~ rnorm(240, 5, 5),         baseline_severity == \"Moderate\" ~ rnorm(240, 0, 5),         baseline_severity == \"Severe\" ~ rnorm(240, -5, 5)       ) +       rnorm(240, 0, 6),          # Quality of life improvement     qol_improvement = case_when(       treatment_arm == \"Placebo\" ~ rnorm(240, 5, 15),       treatment_arm == \"Low_Dose\" ~ rnorm(240, 12, 18),       treatment_arm == \"High_Dose\" ~ rnorm(240, 20, 20)     ) + rnorm(240, 0, 10),          # Biomarker changes (treatment reduces inflammatory marker)     inflammatory_marker = inflammatory_marker * case_when(       treatment_arm == \"Placebo\" ~ 1,       treatment_arm == \"Low_Dose\" ~ 0.8,       treatment_arm == \"High_Dose\" ~ 0.6     ) * exp(rnorm(240, 0, 0.3))   )  # Display data structure str(clinical_data)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"educational-assessment-data","dir":"Articles","previous_headings":"Data Preparation","what":"Educational Assessment Data","title":"Professional Violin Plots with jviolin","text":"","code":"# Create educational assessment dataset education_data <- data.frame(   student_id = 1:300,      # School characteristics   school_type = factor(sample(c(\"Public\", \"Private\", \"Charter\"),                               300, replace = TRUE, prob = c(0.6, 0.25, 0.15))),   class_size = factor(sample(c(\"Small\", \"Medium\", \"Large\"),                              300, replace = TRUE, prob = c(0.3, 0.5, 0.2))),      # Student demographics   grade_level = factor(sample(c(\"9th\", \"10th\", \"11th\", \"12th\"), 300, replace = TRUE)),   gender = factor(sample(c(\"Male\", \"Female\"), 300, replace = TRUE)),   socioeconomic = factor(sample(c(\"Low\", \"Middle\", \"High\"),                                 300, replace = TRUE, prob = c(0.3, 0.5, 0.2))),      # Teaching interventions   teaching_method = factor(sample(c(\"Traditional\", \"Technology\", \"Hybrid\"), 300, replace = TRUE)),   tutoring = factor(sample(c(\"No\", \"Yes\"), 300, replace = TRUE, prob = c(0.7, 0.3))),      # Test scores with realistic distributions   math_score = rnorm(300, 75, 15),   reading_score = rnorm(300, 78, 13),   science_score = rnorm(300, 72, 14) ) %>%   mutate(     # Create realistic educational relationships     math_score = pmax(0, pmin(100, math_score +        case_when(         teaching_method == \"Traditional\" ~ 0,         teaching_method == \"Technology\" ~ 5,         teaching_method == \"Hybrid\" ~ 8       ) +       ifelse(tutoring == \"Yes\", 10, 0) +       case_when(         socioeconomic == \"Low\" ~ -8,         socioeconomic == \"Middle\" ~ 0,         socioeconomic == \"High\" ~ 8       ) + rnorm(300, 0, 8))),          reading_score = pmax(0, pmin(100, reading_score +        0.3 * (math_score - 75) + rnorm(300, 0, 6))),          science_score = pmax(0, pmin(100, science_score +        0.4 * (math_score - 75) + rnorm(300, 0, 7)))   )  str(education_data)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"simple-violin-plot","dir":"Articles","previous_headings":"Basic Usage","what":"Simple Violin Plot","title":"Professional Violin Plots with jviolin","text":"basic violin plot shows distribution continuous variable across groups:","code":"# Basic violin plot basic_result <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\" )  # The result contains the plot object print(names(basic_result))"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"understanding-the-output","dir":"Articles","previous_headings":"Basic Usage > Simple Violin Plot","what":"Understanding the Output","title":"Professional Violin Plots with jviolin","text":"basic violin plot shows: - Width: Indicates data density - wider areas observations - Shape: Shows distribution characteristics (normal, skewed, bimodal) - Symmetry: Violin plots mirrored density plots - Comparison: Easy visual comparison groups","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"different-distribution-types","dir":"Articles","previous_headings":"Basic Usage","what":"Different Distribution Types","title":"Professional Violin Plots with jviolin","text":"Violin plots excel showing different distribution shapes:","code":"# Normal distribution normal_violin <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",    group = \"treatment_arm\",   themex = \"minimal\" )  # Skewed distribution (biomarker data) skewed_violin <- jviolin(   data = clinical_data,   dep = \"inflammatory_marker\",   group = \"treatment_arm\",    themex = \"minimal\" )  # Multiple outcomes comparison qol_violin <- jviolin(   data = clinical_data,   dep = \"qol_improvement\",   group = \"treatment_arm\",   themex = \"minimal\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"group-comparisons","dir":"Articles","previous_headings":"Basic Usage","what":"Group Comparisons","title":"Professional Violin Plots with jviolin","text":"Violin plots ideal comparing distributions across multiple groups:","code":"# Educational intervention comparison education_violin <- jviolin(   data = education_data,   dep = \"math_score\",   group = \"teaching_method\",   themex = \"classic\" )  # Socioeconomic impact socio_violin <- jviolin(   data = education_data,   dep = \"math_score\",   group = \"socioeconomic\",   themex = \"classic\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"boxplot-overlay","dir":"Articles","previous_headings":"Advanced Features","what":"Boxplot Overlay","title":"Professional Violin Plots with jviolin","text":"Add boxplots inside violins show summary statistics: boxplot overlay shows: - Median: Central line - Quartiles: Box boundaries (25th 75th percentiles) - Whiskers: Extend data within 1.5 × IQR - Outliers: Points beyond whiskers (hidden points shown)","code":"# Violin with boxplot overlay violin_with_box <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   add_boxplot = TRUE,   boxplot_width = 0.2,   boxplot_alpha = 0.8,   themex = \"bw\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"individual-data-points","dir":"Articles","previous_headings":"Advanced Features","what":"Individual Data Points","title":"Professional Violin Plots with jviolin","text":"Add individual observations points: Point options: - Jitter: Horizontal spread prevent overlap - Size: Point size adjustment - Alpha: Transparency level - Color: Automatically matches group colors","code":"# Violin with data points violin_with_points <- jviolin(   data = clinical_data,   dep = \"qol_improvement\",   group = \"treatment_arm\",   add_points = TRUE,   point_size = 1.5,   point_alpha = 0.6,   point_jitter = TRUE,   themex = \"light\" )  # Without jitter (stacked points) violin_no_jitter <- jviolin(   data = clinical_data,   dep = \"qol_improvement\",   group = \"treatment_arm\",   add_points = TRUE,   point_size = 1.0,   point_alpha = 0.5,   point_jitter = FALSE,   themex = \"light\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"mean-indicators","dir":"Articles","previous_headings":"Advanced Features","what":"Mean Indicators","title":"Professional Violin Plots with jviolin","text":"Add mean values prominent markers: Mean indicators appear red diamond-shaped points, making easy compare central tendencies across groups.","code":"# Violin with mean indicators violin_with_means <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   add_boxplot = TRUE,   add_mean = TRUE,   themex = \"minimal\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"quantile-lines","dir":"Articles","previous_headings":"Advanced Features","what":"Quantile Lines","title":"Professional Violin Plots with jviolin","text":"Add horizontal lines specific quantiles: Quantile lines help identify: - Distribution spread: Distance quantiles - Skewness: Asymmetric quantile spacing - Outliers: Values beyond extreme quantiles","code":"# Standard quartiles violin_quartiles <- jviolin(   data = clinical_data,   dep = \"inflammatory_marker\",   group = \"treatment_arm\",   draw_quantiles = TRUE,   quantile_lines = \"0.25,0.5,0.75\",   themex = \"dark\" )  # Custom quantiles violin_custom_quant <- jviolin(   data = clinical_data,   dep = \"inflammatory_marker\",   group = \"treatment_arm\",   draw_quantiles = TRUE,   quantile_lines = \"0.1,0.9\",  # 10th and 90th percentiles   themex = \"dark\" )  # Five-number summary violin_five_num <- jviolin(   data = clinical_data,   dep = \"inflammatory_marker\",   group = \"treatment_arm\",   draw_quantiles = TRUE,   quantile_lines = \"0.1,0.25,0.5,0.75,0.9\",   themex = \"dark\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"complex-combinations","dir":"Articles","previous_headings":"Advanced Features","what":"Complex Combinations","title":"Professional Violin Plots with jviolin","text":"Combine multiple features comprehensive visualization:","code":"# Kitchen sink violin plot complex_violin <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   add_boxplot = TRUE,   add_points = TRUE,   add_mean = TRUE,   draw_quantiles = TRUE,   quantile_lines = \"0.25,0.5,0.75\",   point_size = 1.2,   point_alpha = 0.4,   point_jitter = TRUE,   boxplot_width = 0.15,   boxplot_alpha = 0.9,   themex = \"minimal\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"violin-scaling-options","dir":"Articles","previous_headings":"Violin Customization","what":"Violin Scaling Options","title":"Professional Violin Plots with jviolin","text":"Control violin widths scaled: Scaling options: - Area: Equal total area (default) - good comparing shapes - Count: Area proportional sample size - emphasizes group sizes - Width: Equal maximum width - good detailed shape comparison","code":"# Equal area (default) - all violins have same area area_scaling <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   scale_violin = \"area\",   add_boxplot = TRUE )  # Equal count - areas proportional to sample size count_scaling <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   scale_violin = \"count\",   add_boxplot = TRUE )  # Equal width - all violins have same maximum width width_scaling <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   scale_violin = \"width\",   add_boxplot = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"trimming-and-width","dir":"Articles","previous_headings":"Violin Customization","what":"Trimming and Width","title":"Professional Violin Plots with jviolin","text":"Control violin appearance:","code":"# Trimmed violins (default) trimmed_violin <- jviolin(   data = clinical_data,   dep = \"inflammatory_marker\",   group = \"treatment_arm\",   trim_violin = TRUE,   violin_width = 1.0,   violin_alpha = 0.7 )  # Untrimmed violins - show full density estimation untrimmed_violin <- jviolin(   data = clinical_data,   dep = \"inflammatory_marker\",   group = \"treatment_arm\",   trim_violin = FALSE,   violin_width = 1.2,   violin_alpha = 0.6 )  # Wide, transparent violins wide_violin <- jviolin(   data = clinical_data,   dep = \"inflammatory_marker\",   group = \"treatment_arm\",   violin_width = 1.5,   violin_alpha = 0.5,   add_boxplot = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"color-and-fill-variables","dir":"Articles","previous_headings":"Violin Customization","what":"Color and Fill Variables","title":"Professional Violin Plots with jviolin","text":"Use different variables color fill aesthetics:","code":"# Different fill variable fill_mapping <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   fill = \"baseline_severity\",   add_boxplot = TRUE )  # Different color and fill variables color_fill_mapping <- jviolin(   data = clinical_data,   dep = \"qol_improvement\",   group = \"study_site\",   fill = \"treatment_arm\",   col = \"gender\",   add_boxplot = TRUE )  # Education example with multiple groupings education_mapping <- jviolin(   data = education_data,   dep = \"math_score\",   group = \"teaching_method\",   fill = \"socioeconomic\",   add_points = TRUE,   point_alpha = 0.4 )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"color-palettes","dir":"Articles","previous_headings":"Color Palettes and Themes","what":"Color Palettes","title":"Professional Violin Plots with jviolin","text":"Choose various color schemes:","code":"# Default ggplot2 colors default_colors <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   color_palette = \"default\",   add_boxplot = TRUE )  # Viridis (color-blind friendly) viridis_colors <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   color_palette = \"viridis\",   add_boxplot = TRUE )  # ColorBrewer palettes brewer_colors <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   color_palette = \"brewer\",   add_boxplot = TRUE )  # Manual colors manual_colors <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   color_palette = \"manual\",   manual_colors = \"red,blue,green\",   add_boxplot = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"theme-options","dir":"Articles","previous_headings":"Color Palettes and Themes","what":"Theme Options","title":"Professional Violin Plots with jviolin","text":"Apply different visual themes: Available themes: - minimal: Clean, modern appearance - classic: Traditional statistical plots - bw: Black white, high contrast - dark: Dark background presentations - light, grey, void: Additional options - ipsum: Modern typography (requires hrbrthemes package)","code":"# Minimal theme (clean, publication-ready) minimal_theme <- jviolin(   data = clinical_data,   dep = \"qol_improvement\",   group = \"treatment_arm\",   themex = \"minimal\",   add_boxplot = TRUE )  # Classic theme (traditional R plotting) classic_theme <- jviolin(   data = clinical_data,   dep = \"qol_improvement\",   group = \"treatment_arm\",   themex = \"classic\",   add_boxplot = TRUE )  # Black and white (high contrast) bw_theme <- jviolin(   data = clinical_data,   dep = \"qol_improvement\",   group = \"treatment_arm\",   themex = \"bw\",   add_boxplot = TRUE )  # Dark theme dark_theme <- jviolin(   data = clinical_data,   dep = \"qol_improvement\",   group = \"treatment_arm\",   themex = \"dark\",   add_boxplot = TRUE,   color_palette = \"viridis\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"dose-response-relationships","dir":"Articles","previous_headings":"Real-World Applications > Clinical Trial Analysis","what":"Dose-Response Relationships","title":"Professional Violin Plots with jviolin","text":"","code":"# Primary efficacy endpoint efficacy_violin <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   add_boxplot = TRUE,   add_mean = TRUE,   draw_quantiles = TRUE,   quantile_lines = \"0.25,0.5,0.75\",   themex = \"minimal\",   usexlabel = TRUE,   xlabel = \"Treatment Group\",   useylabel = TRUE,   ylabel = \"Change from Baseline (points)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"safety-analysis","dir":"Articles","previous_headings":"Real-World Applications > Clinical Trial Analysis","what":"Safety Analysis","title":"Professional Violin Plots with jviolin","text":"","code":"# Biomarker safety assessment safety_violin <- jviolin(   data = clinical_data,   dep = \"inflammatory_marker\",   group = \"treatment_arm\",   add_boxplot = TRUE,   add_points = TRUE,   point_alpha = 0.5,   scale_violin = \"width\",   themex = \"classic\",   usexlabel = TRUE,   xlabel = \"Treatment Group\",   useylabel = TRUE,   ylabel = \"Inflammatory Marker (ng/mL)\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"subgroup-analysis","dir":"Articles","previous_headings":"Real-World Applications > Clinical Trial Analysis","what":"Subgroup Analysis","title":"Professional Violin Plots with jviolin","text":"","code":"# Efficacy by baseline severity subgroup_violin <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"baseline_severity\",   fill = \"treatment_arm\",   add_boxplot = TRUE,   color_palette = \"viridis\",   themex = \"minimal\",   usexlabel = TRUE,   xlabel = \"Baseline Disease Severity\",   useylabel = TRUE,   ylabel = \"Treatment Response\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"teaching-method-effectiveness","dir":"Articles","previous_headings":"Real-World Applications > Educational Research","what":"Teaching Method Effectiveness","title":"Professional Violin Plots with jviolin","text":"","code":"# Math score improvement by teaching method teaching_violin <- jviolin(   data = education_data,   dep = \"math_score\",   group = \"teaching_method\",   add_boxplot = TRUE,   add_mean = TRUE,   themex = \"classic\",   usexlabel = TRUE,   xlabel = \"Teaching Method\",   useylabel = TRUE,   ylabel = \"Math Score\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"equity-analysis","dir":"Articles","previous_headings":"Real-World Applications > Educational Research","what":"Equity Analysis","title":"Professional Violin Plots with jviolin","text":"","code":"# Achievement gaps by socioeconomic status equity_violin <- jviolin(   data = education_data,   dep = \"math_score\",   group = \"socioeconomic\",   fill = \"school_type\",   add_boxplot = TRUE,   add_points = TRUE,   point_alpha = 0.4,   color_palette = \"brewer\",   themex = \"minimal\",   usexlabel = TRUE,   xlabel = \"Socioeconomic Status\",   useylabel = TRUE,   ylabel = \"Math Achievement Score\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"intervention-impact","dir":"Articles","previous_headings":"Real-World Applications > Educational Research","what":"Intervention Impact","title":"Professional Violin Plots with jviolin","text":"","code":"# Tutoring effectiveness across different contexts tutoring_violin <- jviolin(   data = education_data,   dep = \"math_score\",   group = \"tutoring\",   fill = \"teaching_method\",   add_boxplot = TRUE,   add_mean = TRUE,   color_palette = \"viridis\",   themex = \"light\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"coordinate-flipping","dir":"Articles","previous_headings":"Advanced Techniques","what":"Coordinate Flipping","title":"Professional Violin Plots with jviolin","text":"Create horizontal violin plots: Horizontal plots useful : - Group names long - Space limited vertically - Following certain journal conventions","code":"# Horizontal violin plot horizontal_violin <- jviolin(   data = clinical_data,   dep = \"qol_improvement\",   group = \"treatment_arm\",   add_boxplot = TRUE,   flip = TRUE,   themex = \"minimal\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"missing-data-handling","dir":"Articles","previous_headings":"Advanced Techniques","what":"Missing Data Handling","title":"Professional Violin Plots with jviolin","text":"Handle missing data appropriately:","code":"# Create data with missing values missing_data <- clinical_data missing_data$change_from_baseline[sample(1:240, 30)] <- NA missing_data$treatment_arm[sample(1:240, 10)] <- NA  # Exclude missing data exclude_missing <- jviolin(   data = missing_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   excl = TRUE,   add_boxplot = TRUE,   themex = \"minimal\" )  # Include missing data (default behavior) include_missing <- jviolin(   data = missing_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",    excl = FALSE,   add_boxplot = TRUE,   themex = \"minimal\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"large-dataset-optimization","dir":"Articles","previous_headings":"Advanced Techniques","what":"Large Dataset Optimization","title":"Professional Violin Plots with jviolin","text":"function automatically optimizes performance large datasets: Performance features: - Intelligent caching: Automatic caching prepared data plots - Change detection: Cache invalidation data options change - Memory efficiency: Optimized data preparation processing","code":"# Create large dataset large_data <- do.call(rbind, replicate(5, clinical_data, simplify = FALSE)) large_data$patient_id <- 1:nrow(large_data)  # Performance timing system.time({   large_violin <- jviolin(     data = large_data,     dep = \"change_from_baseline\",     group = \"treatment_arm\",     add_boxplot = TRUE,     add_points = TRUE,     point_alpha = 0.3   ) })  # Second run should be faster due to caching system.time({   large_violin2 <- jviolin(     data = large_data,     dep = \"change_from_baseline\",     group = \"treatment_arm\",     add_boxplot = TRUE,     add_points = TRUE,     point_alpha = 0.3   ) })"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"when-to-use-violin-plots","dir":"Articles","previous_headings":"Best Practices and Guidelines","what":"When to Use Violin Plots","title":"Professional Violin Plots with jviolin","text":"Use violin plots want :","code":"# Create best practices guide best_practices <- data.frame(   Use_Case = c(     \"Distribution comparison\",     \"Outlier detection\",      \"Bimodal distributions\",     \"Sample size differences\",     \"Clinical endpoints\",     \"Biomarker analysis\"   ),   Description = c(     \"Compare shapes of distributions across groups\",     \"Identify outliers and extreme values\",     \"Visualize multi-modal data distributions\",      \"Show groups with different sample sizes\",     \"Primary and secondary efficacy endpoints\",     \"Laboratory values and biomarkers\"   ),   Recommended_Options = c(     \"add_boxplot=TRUE for summary stats\",     \"add_points=TRUE to show outliers\",     \"trim_violin=FALSE to show full shape\",     \"scale_violin='count' to show sample sizes\",     \"add_mean=TRUE for clinical significance\",     \"Use log scale for biomarkers if needed\"   ) )  knitr::kable(best_practices, caption = \"Violin Plot Best Practices\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"distribution-shape-analysis","dir":"Articles","previous_headings":"Best Practices and Guidelines > Statistical Interpretation","what":"Distribution Shape Analysis","title":"Professional Violin Plots with jviolin","text":"","code":"# Create interpretation guide interpretation_guide <- data.frame(   Pattern = c(\"Symmetric\", \"Right-skewed\", \"Left-skewed\", \"Bimodal\", \"Uniform\"),   Violin_Shape = c(     \"Symmetric around center\",     \"Wider at bottom, tail extends up\",     \"Wider at top, tail extends down\",      \"Two bulges or peaks visible\",     \"Rectangular or even width\"   ),   Typical_Examples = c(     \"Height, many biological measures\",     \"Income, reaction times, biomarkers\",     \"Test scores with ceiling effects\",     \"Mixed populations, treatment responders\",     \"Random assignments, uniform sampling\"   ),   Analysis_Notes = c(     \"Use standard statistical tests\",     \"Consider log transformation\",     \"Check for ceiling/floor effects\",     \"Investigate subgroups\",     \"Verify randomization\"   ) )  knitr::kable(interpretation_guide, caption = \"Distribution Shape Interpretation\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"color-selection","dir":"Articles","previous_headings":"Best Practices and Guidelines > Customization Guidelines","what":"Color Selection","title":"Professional Violin Plots with jviolin","text":"","code":"# Clinical color recommendations clinical_colors <- data.frame(   Context = c(\"Dose groups\", \"Treatment vs Control\", \"Safety categories\", \"Efficacy levels\"),   Recommended_Palette = c(\"viridis\", \"manual: blue,red\", \"brewer\", \"manual: red,yellow,green\"),    Rationale = c(     \"Sequential, color-blind safe\",     \"Clear contrast, conventional colors\",     \"Qualitative, distinct categories\",     \"Intuitive traffic light system\"   ) )  knitr::kable(clinical_colors, caption = \"Color Selection Guidelines\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"publication-requirements","dir":"Articles","previous_headings":"Best Practices and Guidelines > Customization Guidelines","what":"Publication Requirements","title":"Professional Violin Plots with jviolin","text":"Publication considerations: - Grayscale compatibility: Ensure plots work black white - Font sizes: Use readable fonts small print - Color choices: Consider journal color policies - Statistical annotations: Include sample sizes significance tests","code":"# Publication-ready violin plot publication_violin <- jviolin(   data = clinical_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   add_boxplot = TRUE,   add_mean = TRUE,   color_palette = \"manual\",   manual_colors = \"grey80,lightblue,darkblue\",   themex = \"classic\",   usexlabel = TRUE,   xlabel = \"Treatment Group\",   useylabel = TRUE,   ylabel = \"Change from Baseline (points)\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"data-validation","dir":"Articles","previous_headings":"Error Handling and Troubleshooting > Common Issues","what":"Data Validation","title":"Professional Violin Plots with jviolin","text":"","code":"# Check data requirements if (any(sapply(clinical_data[c(\"change_from_baseline\")], function(x) !is.numeric(x)))) {   message(\"Dependent variable must be numeric\") }  if (any(sapply(clinical_data[c(\"treatment_arm\")], function(x) !is.factor(x) && !is.character(x)))) {   message(\"Group variable should be categorical\") }  # Check for sufficient data group_sizes <- table(clinical_data$treatment_arm) print(group_sizes) if (any(group_sizes < 5)) {   message(\"Warning: Some groups have very few observations\") }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"edge-cases","dir":"Articles","previous_headings":"Error Handling and Troubleshooting > Common Issues","what":"Edge Cases","title":"Professional Violin Plots with jviolin","text":"","code":"# Single group single_group_data <- clinical_data[clinical_data$treatment_arm == \"Placebo\", ]  single_group_violin <- jviolin(   data = single_group_data,   dep = \"change_from_baseline\",   group = \"baseline_severity\",  # Different grouping   add_boxplot = TRUE )  # Very small groups small_group_data <- clinical_data[1:15, ]  small_group_violin <- jviolin(   data = small_group_data,   dep = \"change_from_baseline\",   group = \"treatment_arm\",   add_points = TRUE,   point_alpha = 0.7 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"performance-optimization","dir":"Articles","previous_headings":"Error Handling and Troubleshooting > Common Issues","what":"Performance Optimization","title":"Professional Violin Plots with jviolin","text":"","code":"# For very large datasets performance_tips <- data.frame(   Scenario = c(     \"Large dataset (>10k rows)\",     \"Many groups (>10)\",     \"Frequent replotting\",     \"Interactive dashboards\"   ),   Recommendation = c(     \"Use point_alpha < 0.5, avoid add_points\",     \"Consider faceting instead of single plot\",     \"Cache results, avoid changing data unnecessarily\",      \"Use moderate point_size and alpha values\"   ),   Alternative = c(     \"Sample data for exploration\",     \"Group into broader categories\",     \"Use static plots for final versions\",     \"Consider other plot types for many groups\"   ) )  knitr::kable(performance_tips, caption = \"Performance Optimization Tips\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"reproducible-analysis","dir":"Articles","previous_headings":"Integration with Research Workflows","what":"Reproducible Analysis","title":"Professional Violin Plots with jviolin","text":"","code":"# Set analysis parameters analysis_params <- list(   primary_endpoint = \"change_from_baseline\",   treatment_var = \"treatment_arm\",   covariates = c(\"baseline_severity\", \"age\", \"gender\"),   alpha_level = 0.05,   plot_theme = \"minimal\" )  # Systematic violin plot analysis create_violin_analysis <- function(data, params) {   results <- list()      # Primary analysis   results$primary <- jviolin(     data = data,     dep = params$primary_endpoint,     group = params$treatment_var,     add_boxplot = TRUE,     add_mean = TRUE,     themex = params$plot_theme   )      # Subgroup analyses   for (covariate in params$covariates[1:2]) {  # Limit for example     results[[paste0(\"subgroup_\", covariate)]] <- jviolin(       data = data,       dep = params$primary_endpoint,       group = covariate,       fill = params$treatment_var,       add_boxplot = TRUE,       themex = params$plot_theme     )   }      return(results) }  # Run systematic analysis study_violins <- create_violin_analysis(clinical_data, analysis_params)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"quality-control","dir":"Articles","previous_headings":"Integration with Research Workflows","what":"Quality Control","title":"Professional Violin Plots with jviolin","text":"","code":"# Data quality checks qc_checks <- function(data, dep_var, group_var) {   checks <- list()      # Check for missing data   checks$missing_dep <- sum(is.na(data[[dep_var]]))   checks$missing_group <- sum(is.na(data[[group_var]]))      # Check group sizes   checks$group_sizes <- table(data[[group_var]], useNA = \"ifany\")   checks$min_group_size <- min(checks$group_sizes)      # Check distribution characteristics   checks$dep_var_range <- range(data[[dep_var]], na.rm = TRUE)   checks$dep_var_outliers <- sum(abs(scale(data[[dep_var]])) > 3, na.rm = TRUE)      return(checks) }  # Run QC qc_results <- qc_checks(clinical_data, \"change_from_baseline\", \"treatment_arm\") print(qc_results)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Professional Violin Plots with jviolin","text":"jviolin function provides comprehensive solution distribution visualization clinical research settings. Key advantages include:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"core-capabilities","dir":"Articles","previous_headings":"Summary","what":"Core Capabilities","title":"Professional Violin Plots with jviolin","text":"Advanced Overlays: Boxplots, points, means, quantile lines comprehensive visualization Distribution Analysis: Excellent comparing shapes, identifying outliers, detecting bimodality Flexible Grouping: Multiple grouping variables color fill mapping Professional Output: Publication-ready plots extensive customization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"performance-features","dir":"Articles","previous_headings":"Summary","what":"Performance Features","title":"Professional Violin Plots with jviolin","text":"Intelligent Caching: Automatic optimization repeated analyses large datasets Memory Efficiency: Optimized data preparation processing Scalability: Handles datasets small samples large studies Responsiveness: Fast rendering smart change detection","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"clinical-applications","dir":"Articles","previous_headings":"Summary","what":"Clinical Applications","title":"Professional Violin Plots with jviolin","text":"Efficacy Analysis: Primary secondary endpoints dose-response visualization Safety Assessment: Biomarker distributions adverse event analysis Subgroup Analysis: Treatment effects across patient populations Quality Control: Distribution assessment outlier detection","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"research-benefits","dir":"Articles","previous_headings":"Summary","what":"Research Benefits","title":"Professional Violin Plots with jviolin","text":"Educational Research: Teaching method effectiveness achievement gap analysis Survey Research: Response distribution group comparison analysis Biomedical Research: Expression data, biomarker analysis, treatment responses Epidemiological Studies: Population distribution comparisons","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/34-jviolin-comprehensive.html","id":"next-steps","dir":"Articles","previous_headings":"Summary","what":"Next Steps","title":"Professional Violin Plots with jviolin","text":"Explore different overlay combinations specific data types Experiment color palettes themes publication requirements Try performance optimization features large datasets Consider violin plots exploratory data analysis research workflow","code":"sessionInfo()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Clinical Research Visualization with jvisr","text":"jvisr function provides professional clinical research visualizations using visR package sensible defaults based graphical principles. ’s designed specifically clinical medical research applications, supporting multiple analysis types including survival analysis, cumulative incidence, patient flow charts, clinical summaries.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"what-is-visr","dir":"Articles","previous_headings":"Introduction","what":"What is visR?","title":"Clinical Research Visualization with jvisr","text":"visR R package provides grammar graphics implementation focused visualization needs clinical development medical research. offers: Fit--purpose plots: Designed specifically clinical research contexts Regulatory compliance: Follows industry standards clinical trial reporting CDISC integration: Native support CDISC ADaM data standards Consistent styling: Professional, publication-ready visualizations Statistical rigor: Proper handling censoring, competing risks, confidence intervals","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"key-features-of-jvisr","dir":"Articles","previous_headings":"Introduction","what":"Key Features of jvisr","title":"Clinical Research Visualization with jvisr","text":"Multiple Analysis Types: Kaplan-Meier curves, cumulative incidence, Table One summaries, attrition flowcharts, risk tables CDISC Support: Native support CDISC ADaM ADTTE data format Advanced Customization: Extensive options themes, colors, labels, statistical displays Performance Optimized: Intelligent caching large clinical datasets Clinical Focus: Designed specifically medical clinical research applications","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"Introduction","what":"Installation and Setup","title":"Clinical Research Visualization with jvisr","text":"","code":"# Load required libraries library(jjstatsplot) library(dplyr) library(survival)    # Check if packages are available if (!requireNamespace(\"survival\", quietly = TRUE)) {   message(\"Note: survival package required for clinical analysis\") }  if (!requireNamespace(\"visR\", quietly = TRUE)) {   message(\"Note: visR package provides enhanced clinical visualizations\") }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"Clinical Research Visualization with jvisr","text":"Let’s create realistic clinical datasets different types analysis:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"clinical-trial-data","dir":"Articles","previous_headings":"Data Preparation","what":"Clinical Trial Data","title":"Clinical Research Visualization with jvisr","text":"","code":"# Create clinical trial dataset set.seed(42) clinical_trial <- data.frame(   # Patient identifiers   patient_id = paste0(\"PT_\", sprintf(\"%03d\", 1:300)),      # Treatment groups   treatment_arm = factor(sample(c(\"Placebo\", \"Low_Dose\", \"High_Dose\"),                                 300, replace = TRUE, prob = c(0.35, 0.35, 0.3))),   study_site = factor(sample(c(\"Site_A\", \"Site_B\", \"Site_C\"), 300, replace = TRUE)),      # Patient characteristics   age = round(rnorm(300, 58, 15)),   gender = factor(sample(c(\"Male\", \"Female\"), 300, replace = TRUE)),   baseline_severity = factor(sample(c(\"Mild\", \"Moderate\", \"Severe\"),                                     300, replace = TRUE, prob = c(0.4, 0.4, 0.2))),      # CDISC ADaM ADTTE variables   AVAL = rexp(300, 0.1),  # Analysis Value (time to event)   CNSR = rbinom(300, 1, 0.4),  # Censor indicator (1=censored, 0=event)   PARAM = factor(rep(\"Overall Survival\", 300)),   PARAMCD = factor(rep(\"OS\", 300)),      # Standard survival variables   time_to_event = rexp(300, 0.1),   event_indicator = rbinom(300, 1, 0.6),      # Biomarkers   biomarker_positive = factor(sample(c(\"Positive\", \"Negative\"), 300, replace = TRUE, prob = c(0.4, 0.6))),   pdl1_expression = pmax(0, pmin(100, rnorm(300, 25, 15))),      # Quality of life   baseline_qol = round(pmax(0, pmin(100, rnorm(300, 70, 15)))),   qol_change = rnorm(300, 5, 12) ) %>%   mutate(     # Create realistic dose-response relationships     time_to_event = case_when(       treatment_arm == \"Placebo\" ~ rexp(300, 0.12),       treatment_arm == \"Low_Dose\" ~ rexp(300, 0.08),       treatment_arm == \"High_Dose\" ~ rexp(300, 0.06)     ) + rnorm(300, 0, 2),          # Ensure positive survival times     time_to_event = pmax(0.1, time_to_event),          # AVAL should match time_to_event for OS endpoint     AVAL = time_to_event,          # Event indicators should be consistent     event_indicator = ifelse(CNSR == 1, 0, 1),  # Convert CNSR to event indicator          # Add realistic biomarker effects     time_to_event = time_to_event * ifelse(biomarker_positive == \"Positive\", 1.3, 1.0),          # Age effects     age = pmax(18, pmin(85, age))   )  # Display data structure str(clinical_trial)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"real-world-evidence-data","dir":"Articles","previous_headings":"Data Preparation","what":"Real-World Evidence Data","title":"Clinical Research Visualization with jvisr","text":"","code":"# Create real-world evidence dataset rwe_data <- data.frame(   patient_id = paste0(\"RWE_\", sprintf(\"%04d\", 1:500)),      # More heterogeneous treatment patterns   treatment_line = factor(sample(1:4, 500, replace = TRUE, prob = c(0.4, 0.3, 0.2, 0.1))),   treatment_class = factor(sample(c(\"Chemotherapy\", \"Immunotherapy\", \"Targeted\", \"Combination\"),                                  500, replace = TRUE, prob = c(0.3, 0.25, 0.25, 0.2))),      # Healthcare system variables   hospital_type = factor(sample(c(\"Academic\", \"Community\", \"Cancer_Center\"),                                 500, replace = TRUE, prob = c(0.3, 0.5, 0.2))),   insurance_type = factor(sample(c(\"Private\", \"Medicare\", \"Medicaid\"),                                  500, replace = TRUE, prob = c(0.5, 0.35, 0.15))),      # More complex patient population   age = round(rnorm(500, 65, 18)),   comorbidity_count = rpois(500, 2.5),      # Survival outcomes   time_to_death = rweibull(500, 1.1, 20),   death_observed = rbinom(500, 1, 0.45),   time_to_progression = rweibull(500, 1.5, 8),   progression_observed = rbinom(500, 1, 0.75) ) %>%   mutate(     # Create line-of-therapy effects     time_to_death = case_when(       treatment_line == 1 ~ rweibull(500, 1.3, 25),       treatment_line == 2 ~ rweibull(500, 1.2, 18),       treatment_line == 3 ~ rweibull(500, 1.1, 12),       treatment_line == 4 ~ rweibull(500, 1.0, 8)     ),          time_to_death = pmax(0.5, time_to_death),     age = pmax(18, pmin(95, age))   )  str(rwe_data)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"kaplan-meier-survival-analysis","dir":"Articles","previous_headings":"Basic Usage","what":"Kaplan-Meier Survival Analysis","title":"Clinical Research Visualization with jvisr","text":"common clinical visualization Kaplan-Meier survival curve:","code":"# Basic Kaplan-Meier analysis km_basic <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\" )  # The result contains the clinical visualization print(names(km_basic))"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"stratified-analysis","dir":"Articles","previous_headings":"Basic Usage > Kaplan-Meier Survival Analysis","what":"Stratified Analysis","title":"Clinical Research Visualization with jvisr","text":"Compare survival across treatment groups:","code":"# Stratified Kaplan-Meier analysis km_stratified <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"understanding-the-clinical-output","dir":"Articles","previous_headings":"Basic Usage > Kaplan-Meier Survival Analysis","what":"Understanding the Clinical Output","title":"Clinical Research Visualization with jvisr","text":"clinical Kaplan-Meier plot shows: - Survival curves: Probability survival time - Confidence intervals: Uncertainty bounds (default: 95%) - Risk tables: Numbers risk time point - P-values: Statistical comparison groups (log-rank test) - Median survival: Time 50% patients experienced event","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"cdisc-format-support","dir":"Articles","previous_headings":"Basic Usage","what":"CDISC Format Support","title":"Clinical Research Visualization with jvisr","text":"regulatory submissions clinical trials following CDISC standards: CDISC format uses: - AVAL: Analysis Value (time event) - CNSR: Censor indicator (1=censored, 0=event) - PARAM/PARAMCD: Parameter descriptions codes","code":"# CDISC ADaM ADTTE format cdisc_analysis <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   cdisc_format = TRUE,   aval_var = \"AVAL\",   cnsr_var = \"CNSR\",   strata_var = \"treatment_arm\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"cumulative-incidence-analysis","dir":"Articles","previous_headings":"Advanced Clinical Visualizations","what":"Cumulative Incidence Analysis","title":"Clinical Research Visualization with jvisr","text":"competing risks scenarios: Cumulative incidence plots essential : - Multiple types events can occur - Events prevent observation primary endpoint - Competing risks present (death vs. disease progression)","code":"# Cumulative incidence analysis cuminc_analysis <- jvisr(   data = clinical_trial,   analysis_type = \"cuminc\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"table-one-summaries","dir":"Articles","previous_headings":"Advanced Clinical Visualizations","what":"Table One Summaries","title":"Clinical Research Visualization with jvisr","text":"Generate comprehensive baseline characteristics tables: Table One summaries include: - Demographics: Age, gender, race/ethnicity distributions - Clinical characteristics: Disease stage, performance status, biomarkers - Treatment assignment: Randomization stratification factors - Baseline assessments: Laboratory values, quality life scores","code":"# Table One clinical summary tableone_analysis <- jvisr(   data = clinical_trial,   analysis_type = \"tableone\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"attrition-flowcharts","dir":"Articles","previous_headings":"Advanced Clinical Visualizations","what":"Attrition Flowcharts","title":"Clinical Research Visualization with jvisr","text":"Visualize patient flow clinical studies: Attrition charts show: - Enrollment: Total patients screened enrolled - Randomization: Treatment assignment stratification - Follow-: Patients completing study procedures - Analysis populations: ITT, per-protocol, safety populations","code":"# Patient attrition flowchart attrition_analysis <- jvisr(   data = clinical_trial,   analysis_type = \"attrition\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"risk-tables","dir":"Articles","previous_headings":"Advanced Clinical Visualizations","what":"Risk Tables","title":"Clinical Research Visualization with jvisr","text":"Detailed risk table analysis:","code":"# Risk table analysis risktable_analysis <- jvisr(   data = clinical_trial,   analysis_type = \"risktable\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"confidence-intervals-and-statistical-display","dir":"Articles","previous_headings":"Customization Options","what":"Confidence Intervals and Statistical Display","title":"Clinical Research Visualization with jvisr","text":"Control statistical elements: Statistical options include: - Confidence intervals: Show uncertainty bounds around survival estimates - P-values: Log-rank test group comparisons - Quantiles: Median quartile survival times - Risk tables: Numbers risk, events, survival probabilities","code":"# Enhanced statistical display enhanced_km <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   confidence_interval = TRUE,   p_value = TRUE,   quantiles = TRUE,   risk_table = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"function-scale-options","dir":"Articles","previous_headings":"Customization Options","what":"Function Scale Options","title":"Clinical Research Visualization with jvisr","text":"Different survival function transformations: Function scales help : - Survival: Standard clinical interpretation - Event: Focus event occurrence - Cumulative hazard: Assess hazard function shape - Log cumulative hazard: Evaluate proportional hazards assumption","code":"# Survival probability (default) surv_prob <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   fun_type = \"surv\" )  # Event probability (1 - survival) event_prob <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   fun_type = \"event\" )  # Cumulative hazard cumhaz <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   fun_type = \"cumhaz\" )  # Log cumulative hazard cloglog <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   fun_type = \"cloglog\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"professional-themes-and-styling","dir":"Articles","previous_headings":"Customization Options","what":"Professional Themes and Styling","title":"Clinical Research Visualization with jvisr","text":"Apply clinical research themes:","code":"# visR clinical theme (default) visr_theme <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   theme_style = \"visr\" )  # Classic statistical graphics classic_theme <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   theme_style = \"classic\" )  # Minimal clean style minimal_theme <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   theme_style = \"minimal\" )  # Clean black and white clean_theme <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   theme_style = \"clean\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"color-palettes-for-clinical-research","dir":"Articles","previous_headings":"Customization Options","what":"Color Palettes for Clinical Research","title":"Clinical Research Visualization with jvisr","text":"Choose appropriate color schemes:","code":"# ColorBrewer Set1 (good for group comparisons) set1_colors <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   color_palette = \"Set1\" )  # ColorBrewer Set2 (softer colors) set2_colors <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   color_palette = \"Set2\" )  # Dark2 (high contrast) dark2_colors <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   color_palette = \"Dark2\" )  # Paired colors (for before/after comparisons) paired_colors <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   color_palette = \"Paired\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"custom-labels-and-annotations","dir":"Articles","previous_headings":"Customization Options","what":"Custom Labels and Annotations","title":"Clinical Research Visualization with jvisr","text":"Add clinical context proper labeling: Professional labeling includes: - Descriptive titles: Study phase, endpoint, population - Axis labels: Clear, clinically meaningful descriptions - Time units: Specify measurement scale (days, months, years) - Statistical annotations: P-values, confidence levels, sample sizes","code":"# Comprehensive labeling labeled_analysis <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   title = \"Phase III Clinical Trial: Overall Survival Analysis\",   time_label = \"Time from Randomization\",   time_units = \"months\",   survival_label = \"Overall Survival Probability\",   confidence_interval = TRUE,   risk_table = TRUE,   p_value = TRUE )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"primary-efficacy-endpoint","dir":"Articles","previous_headings":"Real-World Applications > Multi-arm Clinical Trial Analysis","what":"Primary Efficacy Endpoint","title":"Clinical Research Visualization with jvisr","text":"","code":"# Primary efficacy analysis primary_efficacy <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   title = \"Primary Efficacy Analysis: Overall Survival\",   time_label = \"Time from Randomization\",   time_units = \"months\",   survival_label = \"Overall Survival Probability\",   confidence_interval = TRUE,   risk_table = TRUE,   p_value = TRUE,   quantiles = TRUE,   theme_style = \"visr\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"biomarker-subgroup-analysis","dir":"Articles","previous_headings":"Real-World Applications > Multi-arm Clinical Trial Analysis","what":"Biomarker Subgroup Analysis","title":"Clinical Research Visualization with jvisr","text":"","code":"# Biomarker-stratified analysis biomarker_analysis <- jvisr(   data = clinical_trial[clinical_trial$biomarker_positive == \"Positive\", ],   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   title = \"Biomarker-Positive Population: Overall Survival\",   time_label = \"Time from Randomization\",   time_units = \"months\",   survival_label = \"Overall Survival Probability\",   confidence_interval = TRUE,   risk_table = TRUE,   p_value = TRUE,   theme_style = \"visr\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"safety-population-analysis","dir":"Articles","previous_headings":"Real-World Applications > Multi-arm Clinical Trial Analysis","what":"Safety Population Analysis","title":"Clinical Research Visualization with jvisr","text":"","code":"# Safety population (all treated patients) safety_analysis <- jvisr(   data = clinical_trial,   analysis_type = \"tableone\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"treatment-effectiveness-in-clinical-practice","dir":"Articles","previous_headings":"Real-World Applications > Real-World Evidence Study","what":"Treatment Effectiveness in Clinical Practice","title":"Clinical Research Visualization with jvisr","text":"","code":"# Real-world effectiveness analysis rwe_effectiveness <- jvisr(   data = rwe_data,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_death\",   event_var = \"death_observed\",   strata_var = \"treatment_class\",   title = \"Real-World Evidence: Treatment Effectiveness\",   time_label = \"Time from Treatment Initiation\",   time_units = \"months\",   survival_label = \"Overall Survival Probability\",   confidence_interval = TRUE,   risk_table = TRUE,   theme_style = \"classic\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"line-of-therapy-analysis","dir":"Articles","previous_headings":"Real-World Applications > Real-World Evidence Study","what":"Line of Therapy Analysis","title":"Clinical Research Visualization with jvisr","text":"","code":"# Treatment line analysis line_therapy <- jvisr(   data = rwe_data,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_death\",    event_var = \"death_observed\",   strata_var = \"treatment_line\",   title = \"Survival by Line of Therapy\",   time_label = \"Time from Treatment Start\",   time_units = \"months\",   survival_label = \"Overall Survival Probability\",   confidence_interval = TRUE,   risk_table = TRUE,   theme_style = \"minimal\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"healthcare-setting-comparison","dir":"Articles","previous_headings":"Real-World Applications > Real-World Evidence Study","what":"Healthcare Setting Comparison","title":"Clinical Research Visualization with jvisr","text":"","code":"# Healthcare setting analysis setting_analysis <- jvisr(   data = rwe_data,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_death\",   event_var = \"death_observed\",   strata_var = \"hospital_type\",   title = \"Survival by Healthcare Setting\",   time_label = \"Time from Diagnosis\",   time_units = \"months\",   survival_label = \"Overall Survival Probability\",   confidence_interval = TRUE,   risk_table = TRUE,   theme_style = \"clean\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"cdisc-compliant-analysis","dir":"Articles","previous_headings":"Real-World Applications > Regulatory Submission Analysis","what":"CDISC-Compliant Analysis","title":"Clinical Research Visualization with jvisr","text":"","code":"# Regulatory submission analysis regulatory_analysis <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   cdisc_format = TRUE,   aval_var = \"AVAL\",   cnsr_var = \"CNSR\",   strata_var = \"treatment_arm\",   title = \"CDISC ADaM ADTTE Analysis: Overall Survival\",   time_label = \"Analysis Value (AVAL)\",   time_units = \"months\",   survival_label = \"Survival Probability\",   confidence_interval = TRUE,   risk_table = TRUE,   p_value = TRUE,   quantiles = TRUE,   theme_style = \"classic\",   color_palette = \"Set1\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"missing-data-handling","dir":"Articles","previous_headings":"Advanced Techniques","what":"Missing Data Handling","title":"Clinical Research Visualization with jvisr","text":"Handle missing data appropriately clinical analyses: Missing data considerations: - Complete case analysis: Default approach, removes missing observations - Multiple imputation: Consider sensitivity analyses - Pattern analysis: Understand missingness mechanisms - Regulatory guidance: Follow ICH E9(R1) principles","code":"# Create data with missing values missing_data <- clinical_trial missing_data$time_to_event[sample(1:300, 30)] <- NA missing_data$treatment_arm[sample(1:300, 10)] <- NA  # Analysis with missing data missing_analysis <- jvisr(   data = missing_data,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"large-dataset-optimization","dir":"Articles","previous_headings":"Advanced Techniques","what":"Large Dataset Optimization","title":"Clinical Research Visualization with jvisr","text":"function automatically optimizes performance large datasets: Performance features: - Intelligent caching: Automatic caching prepared data plots - Change detection: Cache invalidation data options change - Memory efficiency: Optimized data preparation processing - Parallel processing: Efficient handling stratified analyses","code":"# Create large dataset large_data <- do.call(rbind, replicate(5, clinical_trial, simplify = FALSE)) large_data$patient_id <- paste0(\"LG_\", sprintf(\"%04d\", 1:nrow(large_data)))  # Performance timing system.time({   large_analysis <- jvisr(     data = large_data,     analysis_type = \"kaplan_meier\",     time_var = \"time_to_event\",     event_var = \"event_indicator\",     strata_var = \"treatment_arm\"   ) })  # Second run should be faster due to caching system.time({   large_analysis2 <- jvisr(     data = large_data,     analysis_type = \"kaplan_meier\",     time_var = \"time_to_event\",     event_var = \"event_indicator\",     strata_var = \"treatment_arm\"   ) })"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"summary-and-interpretation-control","dir":"Articles","previous_headings":"Advanced Techniques","what":"Summary and Interpretation Control","title":"Clinical Research Visualization with jvisr","text":"Control outputs displayed:","code":"# Summary only (no interpretation) summary_only <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   show_summary = TRUE,   show_interpretation = FALSE )  # Interpretation only (no summary table) interpretation_only <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   show_summary = FALSE,   show_interpretation = TRUE )  # Plot only (minimal output) plot_only <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   show_summary = FALSE,   show_interpretation = FALSE )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"study-design-considerations","dir":"Articles","previous_headings":"Best Practices for Clinical Research","what":"Study Design Considerations","title":"Clinical Research Visualization with jvisr","text":"Use appropriate visualizations based study design:","code":"# Create study design guide study_guide <- data.frame(   Study_Type = c(     \"Phase I dose escalation\",     \"Phase II single arm\",      \"Phase III randomized\",     \"Real-world evidence\",     \"Biomarker study\",     \"Competing risks\"   ),   Recommended_Analysis = c(     \"Safety run-in with dose-response curves\",     \"Single-arm Kaplan-Meier with historical control\",     \"Stratified Kaplan-Meier with treatment comparison\",     \"Propensity-matched survival analysis\",     \"Biomarker-stratified subgroup analysis\",     \"Cumulative incidence with competing events\"   ),   Key_Options = c(     \"Show individual patient data, dose escalation\",     \"Include confidence intervals, median survival\",     \"P-values, risk tables, stratification factors\",     \"Adjusted analysis, multiple confounders\",     \"Subgroup analysis, interaction tests\",     \"Competing events, cause-specific hazards\"   ) )  knitr::kable(study_guide, caption = \"Clinical Study Design Guidelines\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"survival-curve-interpretation","dir":"Articles","previous_headings":"Best Practices for Clinical Research > Statistical Interpretation","what":"Survival Curve Interpretation","title":"Clinical Research Visualization with jvisr","text":"","code":"# Create interpretation guide interpretation_guide <- data.frame(   Element = c(\"Curve shape\", \"Confidence intervals\", \"Median survival\", \"Log-rank p-value\", \"Risk table\", \"Hazard ratio\"),   Clinical_Meaning = c(     \"Constant vs. changing hazard over time\",     \"Precision of survival estimates at each timepoint\",      \"Time when 50% of patients experience event\",     \"Statistical significance of treatment difference\",     \"Number of patients contributing to estimate\",     \"Relative treatment effect (not shown in KM plot)\"   ),   Regulatory_Importance = c(     \"Proportional hazards assumption validation\",     \"Required for regulatory submissions\",     \"Primary endpoint for many oncology trials\",     \"Determines statistical significance claim\",     \"Transparency of data underlying curves\",     \"Effect size for sample size calculations\"   ) )  knitr::kable(interpretation_guide, caption = \"Clinical Interpretation Guide\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"data-quality-checks","dir":"Articles","previous_headings":"Best Practices for Clinical Research > Quality Control Guidelines","what":"Data Quality Checks","title":"Clinical Research Visualization with jvisr","text":"","code":"# Data quality checks for clinical analysis qc_checks <- function(data, time_var, event_var) {   checks <- list()      # Check for missing data   checks$missing_time <- sum(is.na(data[[time_var]]))   checks$missing_event <- sum(is.na(data[[event_var]]))      # Check data ranges   checks$negative_times <- sum(data[[time_var]] <= 0, na.rm = TRUE)   checks$event_range <- range(data[[event_var]], na.rm = TRUE)      # Check follow-up   checks$median_followup <- median(data[[time_var]], na.rm = TRUE)   checks$max_followup <- max(data[[time_var]], na.rm = TRUE)      # Check event rates   checks$overall_event_rate <- mean(data[[event_var]], na.rm = TRUE)      return(checks) }  # Run quality control qc_results <- qc_checks(clinical_trial, \"time_to_event\", \"event_indicator\") print(qc_results)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"publication-requirements","dir":"Articles","previous_headings":"Best Practices for Clinical Research > Quality Control Guidelines","what":"Publication Requirements","title":"Clinical Research Visualization with jvisr","text":"Publication considerations: - High resolution: Ensure plots 300+ DPI print - Color accessibility: Use colorblind-friendly palettes - Font sizes: Readable publication scale - Statistical rigor: Include required statistical elements - CONSORT compliance: Follow reporting guidelines","code":"# Publication-ready analysis publication_km <- jvisr(   data = clinical_trial,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\",   title = \"Overall Survival by Treatment Arm\",   time_label = \"Time from Randomization\",   time_units = \"months\",   survival_label = \"Overall Survival Probability\",   confidence_interval = TRUE,   risk_table = TRUE,   p_value = TRUE,   quantiles = TRUE,   theme_style = \"classic\",   color_palette = \"Set1\" )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"data-validation","dir":"Articles","previous_headings":"Error Handling and Troubleshooting > Common Issues","what":"Data Validation","title":"Clinical Research Visualization with jvisr","text":"","code":"# Check data requirements validate_clinical_data <- function(data, time_var, event_var) {   errors <- c()      if (!is.numeric(data[[time_var]])) {     errors <- c(errors, \"Time variable must be numeric\")   }      if (!all(data[[event_var]] %in% c(0, 1, NA))) {     errors <- c(errors, \"Event variable must be 0/1 coded\")   }      if (any(data[[time_var]] <= 0, na.rm = TRUE)) {     errors <- c(errors, \"Time variable must be positive\")   }      if (length(unique(data[[event_var]])) < 2) {     errors <- c(errors, \"Need both events and censored observations\")   }      return(errors) }  # Validate our data validation_errors <- validate_clinical_data(clinical_trial, \"time_to_event\", \"event_indicator\") if (length(validation_errors) > 0) {   cat(\"Data validation errors:\\\\n\")   for (error in validation_errors) {     cat(\"-\", error, \"\\\\n\")   } } else {   cat(\"Data validation passed\\\\n\") }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"edge-cases","dir":"Articles","previous_headings":"Error Handling and Troubleshooting > Common Issues","what":"Edge Cases","title":"Clinical Research Visualization with jvisr","text":"","code":"# Small sample size small_data <- clinical_trial[1:20, ]  small_analysis <- jvisr(   data = small_data,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\" )  # Single group single_group_data <- clinical_trial[clinical_trial$treatment_arm == \"Placebo\", ]  single_group_analysis <- jvisr(   data = single_group_data,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\" )  # All events censored all_censored_data <- clinical_trial all_censored_data$event_indicator <- 0  censored_analysis <- jvisr(   data = all_censored_data,   analysis_type = \"kaplan_meier\",   time_var = \"time_to_event\",   event_var = \"event_indicator\",   strata_var = \"treatment_arm\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"performance-optimization","dir":"Articles","previous_headings":"Error Handling and Troubleshooting > Common Issues","what":"Performance Optimization","title":"Clinical Research Visualization with jvisr","text":"","code":"# Performance optimization tips performance_tips <- data.frame(   Scenario = c(     \"Large dataset (>1000 patients)\",     \"Many strata (>5 groups)\",     \"Frequent re-analysis\",     \"Regulatory submission\"   ),   Recommendation = c(     \"Use caching, avoid unnecessary re-computation\",     \"Consider grouping categories, focus on key comparisons\",     \"Cache results, minimize data changes\",     \"Use CDISC format, validate data thoroughly\"   ),   Alternative = c(     \"Sample for exploration, full analysis for final\",     \"Hierarchical analysis, primary vs secondary\",     \"Batch processing, automated workflows\",     \"Pre-specified analysis plan, locked datasets\"   ) )  knitr::kable(performance_tips, caption = \"Performance Optimization Guide\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"reproducible-clinical-analysis","dir":"Articles","previous_headings":"Integration with Clinical Workflows","what":"Reproducible Clinical Analysis","title":"Clinical Research Visualization with jvisr","text":"","code":"# Set clinical analysis parameters clinical_params <- list(   primary_endpoint = \"time_to_event\",   event_indicator = \"event_indicator\",    treatment_var = \"treatment_arm\",   stratification_factors = c(\"baseline_severity\", \"biomarker_positive\"),   alpha_level = 0.05,   analysis_populations = c(\"ITT\", \"PP\", \"Safety\"),   theme = \"classic\" )  # Systematic clinical analysis function run_clinical_analysis <- function(data, params) {   results <- list()      # Primary efficacy analysis   results$primary <- jvisr(     data = data,     analysis_type = \"kaplan_meier\",     time_var = params$primary_endpoint,     event_var = params$event_indicator,     strata_var = params$treatment_var,     confidence_interval = TRUE,     risk_table = TRUE,     p_value = TRUE,     theme_style = params$theme   )      # Subgroup analyses   for (factor in params$stratification_factors[1:2]) {  # Limit for example     results[[paste0(\"subgroup_\", factor)]] <- jvisr(       data = data,       analysis_type = \"kaplan_meier\",       time_var = params$primary_endpoint,       event_var = params$event_indicator,       strata_var = factor,       confidence_interval = TRUE,       theme_style = params$theme     )   }      return(results) }  # Run systematic analysis clinical_results <- run_clinical_analysis(clinical_trial, clinical_params)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"clinical-study-report-integration","dir":"Articles","previous_headings":"Integration with Clinical Workflows","what":"Clinical Study Report Integration","title":"Clinical Research Visualization with jvisr","text":"","code":"# Generate summary statistics for CSR generate_csr_summary <- function(data, time_var, event_var, strata_var) {   summary_stats <- data %>%     group_by(.data[[strata_var]]) %>%     summarise(       N = n(),       Events = sum(.data[[event_var]], na.rm = TRUE),       Event_Rate = round(mean(.data[[event_var]], na.rm = TRUE), 3),       Median_Followup = round(median(.data[[time_var]], na.rm = TRUE), 1),       Max_Followup = round(max(.data[[time_var]], na.rm = TRUE), 1),       .groups = \"drop\"     )      return(summary_stats) }  # Generate CSR summary csr_summary <- generate_csr_summary(clinical_trial, \"time_to_event\", \"event_indicator\", \"treatment_arm\") knitr::kable(csr_summary, caption = \"Clinical Study Report Summary Statistics\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Clinical Research Visualization with jvisr","text":"jvisr function provides comprehensive solution clinical research visualization. Key advantages include:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"core-clinical-capabilities","dir":"Articles","previous_headings":"Summary","what":"Core Clinical Capabilities","title":"Clinical Research Visualization with jvisr","text":"Multiple Analysis Types: Kaplan-Meier curves, cumulative incidence, Table One summaries, attrition charts, risk tables CDISC Integration: Native support regulatory-standard data formats Statistical Rigor: Proper handling censoring, confidence intervals, hypothesis testing Professional Output: Publication regulatory-ready visualizations","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"performance-and-reliability","dir":"Articles","previous_headings":"Summary","what":"Performance and Reliability","title":"Clinical Research Visualization with jvisr","text":"Intelligent Caching: Automatic optimization repeated analyses large clinical datasets Data Validation: Built-checks clinical data quality completeness Error Handling: Graceful handling edge cases missing data Scalability: Efficient processing small pilot studies large registration trials","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"clinical-research-applications","dir":"Articles","previous_headings":"Summary","what":"Clinical Research Applications","title":"Clinical Research Visualization with jvisr","text":"Clinical Trials: Phase -III studies proper statistical methodology Real-World Evidence: Observational studies complex treatment patterns Biomarker Research: Precision medicine patient stratification Regulatory Submissions: CDISC-compliant analyses regulatory review","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"integration-benefits","dir":"Articles","previous_headings":"Summary","what":"Integration Benefits","title":"Clinical Research Visualization with jvisr","text":"Workflow Integration: Seamless integration clinical data management systems Reproducible Research: Standardized approaches consistent reporting Quality Control: Built-validation error checking Documentation: Comprehensive output clinical interpretation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/35-jvisr-comprehensive.html","id":"next-steps","dir":"Articles","previous_headings":"Summary","what":"Next Steps","title":"Clinical Research Visualization with jvisr","text":"Explore different analysis types specific clinical research needs Experiment CDISC format regulatory compliance Try performance optimization features clinical datasets Consider jvisr standardizing clinical visualization across organization","code":"sessionInfo()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Professional Waffle Charts with jwaffle","text":"jwaffle function provides professional waffle chart visualizations proportional data display. Waffle charts (also known square pie charts) use grid squares represent data proportions, making particularly effective displaying percentages, survey responses, categorical distributions.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"what-are-waffle-charts","dir":"Articles","previous_headings":"Introduction","what":"What are Waffle Charts?","title":"Professional Waffle Charts with jwaffle","text":"Waffle charts powerful alternative traditional pie charts offer several advantages: Easy read: Grid-based layout intuitive pie slices Precise comparison: Individual squares make exact proportions clear Flexible scaling: Can represent different scales (square = 1%, 10 cases, etc.) Professional appearance: Clean, modern aesthetic suitable presentations Accessible design: Color patterns easier distinguish pie segments","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"key-features-of-jwaffle","dir":"Articles","previous_headings":"Introduction","what":"Key Features of jwaffle","title":"Professional Waffle Charts with jwaffle","text":"Flexible Data Input: Works counts, frequencies, case-level data Advanced Customization: Multiple color palettes, themes, styling options Faceting Support: Create multi-panel charts complex data comparison Performance Optimized: Intelligent caching large datasets repeated analyses Professional Styling: Publication-ready output customizable themes","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"installation-and-setup","dir":"Articles","previous_headings":"Introduction","what":"Installation and Setup","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Load required libraries library(jjstatsplot) library(dplyr) library(ggplot2)   # Check if required packages are available if (!requireNamespace(\"waffle\", quietly = TRUE)) {   message(\"Note: waffle package required for waffle chart creation\") }  if (!requireNamespace(\"scales\", quietly = TRUE)) {   message(\"Note: scales package recommended for enhanced formatting\") }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"Professional Waffle Charts with jwaffle","text":"Let’s create diverse datasets demonstrate different waffle chart applications:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"market-research-data","dir":"Articles","previous_headings":"Data Preparation","what":"Market Research Data","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Create market research dataset set.seed(123) market_data <- data.frame(   # Core product preferences   preferred_brand = factor(sample(c(\"Brand_A\", \"Brand_B\", \"Brand_C\", \"Brand_D\", \"Brand_E\"),                                   500, replace = TRUE, prob = c(0.35, 0.25, 0.20, 0.15, 0.05))),      purchase_frequency = sample(1:12, 500, replace = TRUE,                               prob = c(0.3, 0.2, 0.15, 0.1, 0.08, 0.07, rep(0.02, 6))),      # Demographic segmentation   age_group = factor(sample(c(\"18-25\", \"26-35\", \"36-45\", \"46-55\", \"55+\"),                             500, replace = TRUE, prob = c(0.15, 0.25, 0.25, 0.20, 0.15))),      region = factor(sample(c(\"North\", \"South\", \"East\", \"West\"),                          500, replace = TRUE)),      income_level = factor(sample(c(\"Low\", \"Middle\", \"High\"),                                500, replace = TRUE, prob = c(0.25, 0.50, 0.25))),      # Customer behavior   loyalty_program = factor(sample(c(\"Member\", \"Non_Member\"),                                   500, replace = TRUE, prob = c(0.4, 0.6))),      purchase_channel = factor(sample(c(\"Online\", \"In_Store\", \"Mobile\", \"Phone\"),                                    500, replace = TRUE, prob = c(0.45, 0.35, 0.15, 0.05))) )  # Display structure str(market_data) head(market_data)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"survey-response-data","dir":"Articles","previous_headings":"Data Preparation","what":"Survey Response Data","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Create employee satisfaction survey data survey_data <- data.frame(   # Satisfaction ratings (Likert scale)   job_satisfaction = factor(sample(c(\"Very_Satisfied\", \"Satisfied\", \"Neutral\", \"Dissatisfied\", \"Very_Dissatisfied\"),                                    400, replace = TRUE, prob = c(0.20, 0.35, 0.25, 0.15, 0.05)),                            levels = c(\"Very_Dissatisfied\", \"Dissatisfied\", \"Neutral\", \"Satisfied\", \"Very_Satisfied\")),      work_life_balance = factor(sample(c(\"Excellent\", \"Good\", \"Fair\", \"Poor\"),                                     400, replace = TRUE, prob = c(0.15, 0.45, 0.30, 0.10)),                             levels = c(\"Poor\", \"Fair\", \"Good\", \"Excellent\")),      # Employee demographics   department = factor(sample(c(\"Engineering\", \"Sales\", \"Marketing\", \"HR\", \"Finance\", \"Operations\"),                              400, replace = TRUE, prob = c(0.25, 0.20, 0.15, 0.10, 0.15, 0.15))),      tenure_years = factor(sample(c(\"Less_than_1\", \"1-2\", \"3-5\", \"5-10\", \"More_than_10\"),                                400, replace = TRUE, prob = c(0.15, 0.25, 0.30, 0.20, 0.10))),      employment_type = factor(sample(c(\"Full_Time\", \"Part_Time\", \"Contract\"),                                   400, replace = TRUE, prob = c(0.80, 0.15, 0.05))),      remote_work = factor(sample(c(\"Fully_Remote\", \"Hybrid\", \"On_Site\"),                               400, replace = TRUE, prob = c(0.30, 0.45, 0.25))) )  str(survey_data)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"healthcare-data","dir":"Articles","previous_headings":"Data Preparation","what":"Healthcare Data","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Create healthcare outcome data healthcare_data <- data.frame(   # Treatment outcomes   treatment_response = factor(sample(c(\"Complete_Response\", \"Partial_Response\", \"Stable_Disease\", \"Progressive_Disease\"),                                      300, replace = TRUE, prob = c(0.25, 0.35, 0.25, 0.15))),      # Patient characteristics   age_category = factor(sample(c(\"Under_40\", \"40-60\", \"60-75\", \"Over_75\"),                                300, replace = TRUE, prob = c(0.15, 0.35, 0.35, 0.15))),      disease_stage = factor(sample(c(\"Early\", \"Intermediate\", \"Advanced\"),                                 300, replace = TRUE, prob = c(0.30, 0.45, 0.25))),      treatment_type = factor(sample(c(\"Surgery\", \"Chemotherapy\", \"Radiation\", \"Immunotherapy\", \"Combination\"),                                  300, replace = TRUE, prob = c(0.20, 0.25, 0.20, 0.15, 0.20))),      hospital_type = factor(sample(c(\"Academic\", \"Community\", \"Cancer_Center\"),                                 300, replace = TRUE, prob = c(0.35, 0.40, 0.25))),      insurance_type = factor(sample(c(\"Private\", \"Medicare\", \"Medicaid\"),                                  300, replace = TRUE, prob = c(0.60, 0.30, 0.10))) )  str(healthcare_data)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"simple-waffle-chart","dir":"Articles","previous_headings":"Basic Usage","what":"Simple Waffle Chart","title":"Professional Waffle Charts with jwaffle","text":"basic waffle chart shows distribution categorical variable: creates 10x10 grid (100 squares) square represents approximately 1% data.","code":"# Basic waffle chart basic_chart <- jwaffle(   data = market_data,   groups = \"preferred_brand\" )  # Display the result print(\"Basic waffle chart created successfully\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"understanding-waffle-chart-components","dir":"Articles","previous_headings":"Basic Usage","what":"Understanding Waffle Chart Components","title":"Professional Waffle Charts with jwaffle","text":"waffle chart consists : Squares: Individual units make grid Colors: Different colors represent different categories Legend: Explains color represents Caption: Shows square represents (e.g., “square represents 5 cases”)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"customizing-rows-and-layout","dir":"Articles","previous_headings":"Basic Usage","what":"Customizing Rows and Layout","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Different grid sizes waffle_5x20 <- jwaffle(   data = market_data,   groups = \"preferred_brand\",   rows = 5  # Creates 5x20 grid (still 100 squares) )  waffle_8x12 <- jwaffle(   data = market_data,   groups = \"preferred_brand\",    rows = 8  # Creates 8x12 grid (approximately 100 squares) )  # Flipped orientation waffle_flipped <- jwaffle(   data = market_data,   groups = \"preferred_brand\",   rows = 10,   flip = TRUE )  print(\"Custom layout waffle charts created\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"using-count-variables","dir":"Articles","previous_headings":"Basic Usage","what":"Using Count Variables","title":"Professional Waffle Charts with jwaffle","text":"aggregated data counts:","code":"# Aggregate data first brand_summary <- market_data %>%   group_by(preferred_brand) %>%   summarise(customer_count = n(), .groups = \"drop\")  print(brand_summary)  # Create waffle chart with counts count_waffle <- jwaffle(   data = brand_summary,   groups = \"preferred_brand\",   counts = \"customer_count\" )  print(\"Count-based waffle chart created\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"faceting-for-multi-panel-charts","dir":"Articles","previous_headings":"Advanced Features","what":"Faceting for Multi-Panel Charts","title":"Professional Waffle Charts with jwaffle","text":"Create separate waffle charts different subgroups: Faceting particularly useful : - Comparing patterns across different groups - Showing changes time periods - Analyzing subpopulations separately","code":"# Faceted waffle chart faceted_chart <- jwaffle(   data = survey_data,   groups = \"job_satisfaction\",   facet = \"department\" )  print(\"Faceted waffle chart created\")  # Faceting with geographic data regional_chart <- jwaffle(   data = market_data,   groups = \"preferred_brand\",   facet = \"region\" )  print(\"Regional comparison waffle chart created\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"color-palettes-for-professional-presentation","dir":"Articles","previous_headings":"Advanced Features","what":"Color Palettes for Professional Presentation","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Default palette default_palette <- jwaffle(   data = healthcare_data,   groups = \"treatment_response\",   color_palette = \"default\" )  # Colorblind-friendly palette colorblind_palette <- jwaffle(   data = healthcare_data,   groups = \"treatment_response\",   color_palette = \"colorblind\" )  # Professional business palette professional_palette <- jwaffle(   data = healthcare_data,   groups = \"treatment_response\",   color_palette = \"professional\" )  # Presentation palette (high contrast) presentation_palette <- jwaffle(   data = healthcare_data,   groups = \"treatment_response\",   color_palette = \"presentation\" )  # Journal publication palette journal_palette <- jwaffle(   data = healthcare_data,   groups = \"treatment_response\",   color_palette = \"journal\" )  # Pastel colors pastel_palette <- jwaffle(   data = healthcare_data,   groups = \"treatment_response\",   color_palette = \"pastel\" )  # Dark theme colors dark_palette <- jwaffle(   data = healthcare_data,   groups = \"treatment_response\",   color_palette = \"dark\" )  print(\"Multiple color palette waffle charts created\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"color-palette-guidelines","dir":"Articles","previous_headings":"Advanced Features > Color Palettes for Professional Presentation","what":"Color Palette Guidelines","title":"Professional Waffle Charts with jwaffle","text":"Default: General purpose, good balance visibility aesthetics Colorblind: Optimized accessibility, distinguishable users Professional: Business-appropriate colors corporate presentations Presentation: High contrast colors projector displays Journal: Grayscale-friendly academic publications Pastel: Soft colors informal creative presentations Dark: Bold colors work well dark backgrounds","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"titles-and-labels","dir":"Articles","previous_headings":"Advanced Features","what":"Titles and Labels","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Comprehensive labeling labeled_chart <- jwaffle(   data = survey_data,   groups = \"work_life_balance\",   facet = \"employment_type\",   mytitle = \"Work-Life Balance by Employment Type\",   legendtitle = \"Balance Rating\",   color_palette = \"professional\",   show_legend = TRUE )  print(\"Labeled waffle chart created\")  # Minimal labeling (no legend) minimal_chart <- jwaffle(   data = market_data,   groups = \"purchase_channel\",   mytitle = \"Customer Purchase Channel Preferences\",    show_legend = FALSE,   color_palette = \"presentation\" )  print(\"Minimal waffle chart created\")"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"brand-preference-study","dir":"Articles","previous_headings":"Real-World Applications > Market Research Analysis","what":"Brand Preference Study","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Overall brand preference brand_preference <- jwaffle(   data = market_data,   groups = \"preferred_brand\",   mytitle = \"Overall Brand Preference Distribution\",   legendtitle = \"Brand\",   color_palette = \"professional\",   show_legend = TRUE )  # Brand preference by age group age_brand_analysis <- jwaffle(   data = market_data,   groups = \"preferred_brand\",   facet = \"age_group\",   mytitle = \"Brand Preference by Age Group\",   legendtitle = \"Brand\",   color_palette = \"presentation\",   rows = 8 )  # Purchase channel analysis channel_analysis <- jwaffle(   data = market_data,   groups = \"purchase_channel\",   facet = \"income_level\",   mytitle = \"Purchase Channel Preference by Income Level\",   legendtitle = \"Channel\",   color_palette = \"colorblind\" )  print(\"Market research waffle charts created\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"customer-segmentation","dir":"Articles","previous_headings":"Real-World Applications > Market Research Analysis","what":"Customer Segmentation","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Loyalty program membership loyalty_chart <- jwaffle(   data = market_data,   groups = \"loyalty_program\",   facet = \"region\",   mytitle = \"Loyalty Program Membership by Region\",   legendtitle = \"Membership\",   color_palette = \"professional\",   rows = 6 )  print(\"Customer segmentation chart created\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"job-satisfaction-analysis","dir":"Articles","previous_headings":"Real-World Applications > Employee Satisfaction Survey","what":"Job Satisfaction Analysis","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Overall job satisfaction overall_satisfaction <- jwaffle(   data = survey_data,   groups = \"job_satisfaction\",   mytitle = \"Employee Job Satisfaction Distribution\",   legendtitle = \"Satisfaction Level\",   color_palette = \"journal\",   rows = 10 )  # Satisfaction by department dept_satisfaction <- jwaffle(   data = survey_data,   groups = \"job_satisfaction\",   facet = \"department\",   mytitle = \"Job Satisfaction by Department\",   legendtitle = \"Satisfaction\",   color_palette = \"professional\" )  # Work-life balance analysis balance_analysis <- jwaffle(   data = survey_data,   groups = \"work_life_balance\",   facet = \"remote_work\",   mytitle = \"Work-Life Balance by Work Arrangement\",   legendtitle = \"Balance Rating\",   color_palette = \"colorblind\",   rows = 8 )  print(\"Employee satisfaction charts created\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"tenure-and-employment-analysis","dir":"Articles","previous_headings":"Real-World Applications > Employee Satisfaction Survey","what":"Tenure and Employment Analysis","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Employment type distribution employment_dist <- jwaffle(   data = survey_data,   groups = \"employment_type\",   mytitle = \"Employment Type Distribution\",   legendtitle = \"Employment Type\",   color_palette = \"presentation\",   rows = 6 )  # Tenure analysis tenure_analysis <- jwaffle(   data = survey_data,   groups = \"tenure_years\",   facet = \"department\",   mytitle = \"Employee Tenure by Department\",   legendtitle = \"Tenure\",   color_palette = \"pastel\" )  print(\"Tenure analysis charts created\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"treatment-response-analysis","dir":"Articles","previous_headings":"Real-World Applications > Healthcare Outcomes Research","what":"Treatment Response Analysis","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Overall treatment response treatment_overall <- jwaffle(   data = healthcare_data,   groups = \"treatment_response\",   mytitle = \"Treatment Response Distribution\",   legendtitle = \"Response Type\",   color_palette = \"professional\",   rows = 10 )  # Response by treatment type response_by_treatment <- jwaffle(   data = healthcare_data,   groups = \"treatment_response\",   facet = \"treatment_type\",   mytitle = \"Treatment Response by Treatment Type\",    legendtitle = \"Response\",   color_palette = \"journal\" )  # Response by disease stage response_by_stage <- jwaffle(   data = healthcare_data,   groups = \"treatment_response\",   facet = \"disease_stage\",   mytitle = \"Treatment Response by Disease Stage\",   legendtitle = \"Response\",   color_palette = \"colorblind\",   rows = 8 )  print(\"Healthcare outcome charts created\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"healthcare-system-analysis","dir":"Articles","previous_headings":"Real-World Applications > Healthcare Outcomes Research","what":"Healthcare System Analysis","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Hospital type distribution hospital_dist <- jwaffle(   data = healthcare_data,   groups = \"hospital_type\",   mytitle = \"Patient Distribution by Hospital Type\",   legendtitle = \"Hospital Type\",   color_palette = \"presentation\" )  # Insurance analysis insurance_analysis <- jwaffle(   data = healthcare_data,   groups = \"insurance_type\",   facet = \"age_category\",   mytitle = \"Insurance Type by Age Category\",   legendtitle = \"Insurance\",   color_palette = \"professional\",   rows = 6 )  print(\"Healthcare system charts created\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"complex-multi-variable-analysis","dir":"Articles","previous_headings":"Advanced Customization","what":"Complex Multi-Variable Analysis","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Create complex segmented data complex_data <- market_data %>%   mutate(     customer_segment = case_when(       loyalty_program == \"Member\" & income_level == \"High\" ~ \"Premium_Customer\",       loyalty_program == \"Member\" & income_level == \"Middle\" ~ \"Standard_Member\",        loyalty_program == \"Member\" & income_level == \"Low\" ~ \"Budget_Member\",       loyalty_program == \"Non_Member\" & income_level == \"High\" ~ \"High_Value_Prospect\",       TRUE ~ \"Standard_Prospect\"     )   )  # Complex segmentation analysis segment_analysis <- jwaffle(   data = complex_data,   groups = \"customer_segment\",   facet = \"purchase_channel\",   mytitle = \"Customer Segmentation by Purchase Channel\",   legendtitle = \"Customer Segment\",   color_palette = \"professional\",   rows = 8 )  print(\"Complex segmentation analysis created\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"weighted-analysis-with-purchase-frequency","dir":"Articles","previous_headings":"Advanced Customization","what":"Weighted Analysis with Purchase Frequency","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Use purchase frequency as weights weighted_analysis <- jwaffle(   data = market_data,   groups = \"preferred_brand\",   counts = \"purchase_frequency\",   facet = \"region\",   mytitle = \"Brand Preference Weighted by Purchase Frequency\",   legendtitle = \"Brand\",   color_palette = \"presentation\" )  print(\"Weighted analysis chart created\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"time-based-analysis","dir":"Articles","previous_headings":"Advanced Customization","what":"Time-Based Analysis","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Create quarterly data quarterly_data <- data.frame(   quarter = rep(c(\"Q1\", \"Q2\", \"Q3\", \"Q4\"), each = 100),   satisfaction = factor(sample(c(\"Satisfied\", \"Neutral\", \"Dissatisfied\"),                                400, replace = TRUE, prob = c(0.6, 0.25, 0.15))),   product_line = factor(sample(c(\"Product_A\", \"Product_B\", \"Product_C\"),                                400, replace = TRUE)) )  # Quarterly satisfaction trends quarterly_satisfaction <- jwaffle(   data = quarterly_data,   groups = \"satisfaction\",   facet = \"quarter\",   mytitle = \"Customer Satisfaction Trends by Quarter\",   legendtitle = \"Satisfaction\",   color_palette = \"journal\",   rows = 10 )  print(\"Quarterly trend analysis created\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"large-dataset-handling","dir":"Articles","previous_headings":"Performance and Optimization","what":"Large Dataset Handling","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Create large dataset for performance testing large_data <- do.call(rbind, replicate(5, market_data, simplify = FALSE)) large_data$customer_id <- 1:nrow(large_data)  # Performance timing system.time({   large_chart1 <- jwaffle(     data = large_data,     groups = \"preferred_brand\",     color_palette = \"professional\"   ) })  # Second run should be faster due to caching system.time({   large_chart2 <- jwaffle(     data = large_data,     groups = \"preferred_brand\",      color_palette = \"professional\"   ) })  print(\"Large dataset analysis completed\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"caching-performance-benefits","dir":"Articles","previous_headings":"Performance and Optimization","what":"Caching Performance Benefits","title":"Professional Waffle Charts with jwaffle","text":"jwaffle function includes intelligent caching provides several performance benefits: Data Caching: Prepared data cached avoid reprocessing Plot Caching: Generated plots cached identical parameters Palette Caching: Color palettes cached based options group count Hash-Based Invalidation: Cache automatically invalidated data options change","code":"# Demonstrate caching with repeated calls for (i in 1:3) {   start_time <- Sys.time()      result <- jwaffle(     data = survey_data,     groups = \"job_satisfaction\",     color_palette = \"professional\"   )      end_time <- Sys.time()   cat(\"Run\", i, \"completed in\", round(as.numeric(end_time - start_time), 3), \"seconds\\n\") }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"when-to-use-waffle-charts","dir":"Articles","previous_headings":"Best Practices","what":"When to Use Waffle Charts","title":"Professional Waffle Charts with jwaffle","text":"Waffle charts ideal : Proportional data: showing percentages parts whole Survey responses: Likert scales categorical responses Market share: Brand preference competitive analysis Demographics: Population breakdowns characteristics Binary outcomes: Yes/, success/failure, member/non-member","code":"# Create best practices guide best_practices <- data.frame(   Scenario = c(     \"Survey Results\",     \"Market Share\",     \"Demographics\",      \"Binary Outcomes\",     \"Progress Tracking\",     \"Budget Allocation\"   ),   Waffle_Advantage = c(     \"Easy to see exact proportions\",     \"Clear competitive positioning\",     \"Intuitive population representation\",     \"Simple visual comparison\",     \"Progress visualization\",      \"Resource distribution clarity\"   ),   Key_Settings = c(     \"Use colorblind palette, show legend\",     \"Professional palette, custom title\",     \"Facet by subgroups, clean layout\",     \"High contrast colors, minimal legend\",     \"Sequential colors, progress labels\",     \"Professional theme, clear categories\"   ) )  knitr::kable(best_practices, caption = \"Waffle Chart Best Practices by Use Case\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"color-selection","dir":"Articles","previous_headings":"Best Practices > Design Guidelines","what":"Color Selection","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Create color guideline examples color_guide <- data.frame(   Palette = c(\"Default\", \"Colorblind\", \"Professional\", \"Presentation\", \"Journal\", \"Pastel\", \"Dark\"),   Best_For = c(     \"General purpose presentations\",     \"Accessible design, inclusive audiences\",      \"Business meetings, corporate reports\",     \"Projector displays, conference presentations\",     \"Academic papers, grayscale printing\",     \"Creative projects, informal presentations\",     \"Dark themes, modern designs\"   ),   Avoid_When = c(     \"Accessibility is critical\",     \"Creative expression is primary goal\",     \"Informal or creative contexts\",     \"Fine detail distinction needed\",     \"Color emphasis is important\",     \"Professional formality required\",     \"Light backgrounds are used\"   ) )  knitr::kable(color_guide, caption = \"Color Palette Selection Guide\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"layout-recommendations","dir":"Articles","previous_headings":"Best Practices > Design Guidelines","what":"Layout Recommendations","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Layout guidelines layout_guide <- data.frame(   Grid_Size = c(\"5 rows\", \"8 rows\", \"10 rows\", \"12+ rows\"),   Best_For = c(     \"Simple data (2-4 categories)\",     \"Moderate complexity (4-6 categories)\",     \"Standard presentations (any categories)\",     \"Detailed analysis (many categories)\"   ),   Considerations = c(     \"Large squares, easy to count\",     \"Good balance of detail and clarity\",     \"Standard 10x10 grid, familiar format\",     \"Smaller squares, harder to count individually\"   ) )  knitr::kable(layout_guide, caption = \"Grid Size Selection Guide\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"accessibility-considerations","dir":"Articles","previous_headings":"Best Practices","what":"Accessibility Considerations","title":"Professional Waffle Charts with jwaffle","text":"Accessibility best practices: - Use colorblind-friendly palettes - Include descriptive titles legends - Provide sample size information - Use standard grid sizes possible - Consider alternative text descriptions digital formats","code":"# Accessible waffle chart example accessible_chart <- jwaffle(   data = survey_data,   groups = \"job_satisfaction\",   color_palette = \"colorblind\",  # Colorblind-friendly   mytitle = \"Employee Job Satisfaction Survey Results (N=400)\",  # Descriptive title   legendtitle = \"Satisfaction Level\",  # Clear legend   show_legend = TRUE,  # Always show legend for accessibility   rows = 10  # Standard grid for easy counting )  print(\"Accessible waffle chart created\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"statistical-analysis-integration","dir":"Articles","previous_headings":"Integration with Research Workflows","what":"Statistical Analysis Integration","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Combine waffle charts with statistical tests library(dplyr)  # Chi-square test for independence if (requireNamespace(\"stats\", quietly = TRUE)) {   # Test brand preference vs age group   contingency_table <- table(market_data$preferred_brand, market_data$age_group)   chi_test <- chisq.test(contingency_table)      cat(\"Chi-square test results:\\n\")   cat(\"Chi-square =\", round(chi_test$statistic, 3), \"\\n\")   cat(\"p-value =\", round(chi_test$p.value, 4), \"\\n\")   cat(\"Significant association:\", ifelse(chi_test$p.value < 0.05, \"Yes\", \"No\"), \"\\n\") }  # Combine with waffle visualization statistical_chart <- jwaffle(   data = market_data,   groups = \"preferred_brand\",   facet = \"age_group\",   mytitle = paste(\"Brand Preference by Age Group\",                   ifelse(chi_test$p.value < 0.05, \"(p < 0.05)\", \"(n.s.)\")),   legendtitle = \"Brand\",   color_palette = \"journal\" )  print(\"Statistical analysis with waffle chart created\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"report-generation","dir":"Articles","previous_headings":"Integration with Research Workflows","what":"Report Generation","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Function to generate waffle chart reports generate_waffle_report <- function(data, group_var, facet_var = NULL, title_prefix = \"\") {      # Basic summary statistics   summary_stats <- data %>%     group_by(.data[[group_var]]) %>%     summarise(       count = n(),       percentage = round(n() / nrow(data) * 100, 1),       .groups = \"drop\"     )      # Create waffle chart   chart <- jwaffle(     data = data,     groups = group_var,     facet = facet_var,     mytitle = paste(title_prefix, \"Distribution of\", gsub(\"_\", \" \", group_var)),     legendtitle = gsub(\"_\", \" \", group_var),     color_palette = \"professional\"   )      # Return summary and chart   return(list(     summary = summary_stats,     chart = chart,     total_n = nrow(data)   )) }  # Generate reports brand_report <- generate_waffle_report(   data = market_data,   group_var = \"preferred_brand\",   title_prefix = \"Market Research:\" )  satisfaction_report <- generate_waffle_report(   data = survey_data,   group_var = \"job_satisfaction\",   facet_var = \"department\",   title_prefix = \"Employee Survey:\" )  # Display summaries cat(\"Brand Preference Summary:\\n\") print(brand_report$summary) cat(\"\\nTotal respondents:\", brand_report$total_n, \"\\n\")  cat(\"\\nJob Satisfaction Summary:\\n\") print(satisfaction_report$summary) cat(\"\\nTotal employees:\", satisfaction_report$total_n, \"\\n\")"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"data-validation","dir":"Articles","previous_headings":"Troubleshooting > Common Issues and Solutions","what":"Data Validation","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Function to validate waffle chart data validate_waffle_data <- function(data, groups, counts = NULL, facet = NULL) {   issues <- c()      # Check if data is not empty   if (nrow(data) == 0) {     issues <- c(issues, \"Data frame is empty\")   }      # Check if group variable exists   if (!groups %in% names(data)) {     issues <- c(issues, paste(\"Group variable\", groups, \"not found in data\"))   }      # Check if count variable exists (if specified)   if (!is.null(counts) && !counts %in% names(data)) {     issues <- c(issues, paste(\"Count variable\", counts, \"not found in data\"))   }      # Check if facet variable exists (if specified)   if (!is.null(facet) && !facet %in% names(data)) {     issues <- c(issues, paste(\"Facet variable\", facet, \"not found in data\"))   }      # Check for sufficient data in groups   if (groups %in% names(data)) {     group_counts <- table(data[[groups]])     if (any(group_counts == 0)) {       issues <- c(issues, \"Some groups have zero observations\")     }   }      # Check for missing values   if (groups %in% names(data)) {     missing_groups <- sum(is.na(data[[groups]]))     if (missing_groups > 0) {       issues <- c(issues, paste(missing_groups, \"missing values in group variable\"))     }   }      return(issues) }  # Test validation validation_result <- validate_waffle_data(   data = market_data,   groups = \"preferred_brand\",   facet = \"region\" )  if (length(validation_result) == 0) {   cat(\"✓ Data validation passed\\n\") } else {   cat(\"⚠ Data validation issues:\\n\")   for (issue in validation_result) {     cat(\"-\", issue, \"\\n\")   } }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"handling-missing-data","dir":"Articles","previous_headings":"Troubleshooting > Common Issues and Solutions","what":"Handling Missing Data","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Create data with missing values missing_data <- market_data missing_data$preferred_brand[sample(1:500, 25)] <- NA missing_data$region[sample(1:500, 15)] <- NA  # Check missing data impact cat(\"Original data:\", nrow(market_data), \"rows\\n\") cat(\"Data with missing values:\", nrow(missing_data), \"rows\\n\") cat(\"Complete cases:\", sum(complete.cases(missing_data)), \"rows\\n\")  # Create waffle chart (automatically handles missing data) missing_chart <- jwaffle(   data = missing_data,   groups = \"preferred_brand\",   facet = \"region\",   mytitle = \"Brand Preference with Missing Data Handling\",   legendtitle = \"Brand\",   color_palette = \"colorblind\" )  print(\"Missing data chart created (missing values automatically excluded)\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"performance-optimization-tips","dir":"Articles","previous_headings":"Troubleshooting > Common Issues and Solutions","what":"Performance Optimization Tips","title":"Professional Waffle Charts with jwaffle","text":"","code":"# Performance optimization guidelines perf_tips <- data.frame(   Scenario = c(     \"Large datasets (>1000 rows)\",     \"Many categories (>8 groups)\",     \"Frequent updates\",     \"Multiple facets\",     \"Presentation mode\"   ),   Recommendation = c(     \"Use caching, avoid unnecessary recalculation\",     \"Consider grouping rare categories\",     \"Minimize data changes between calls\",     \"Limit number of facet levels\",     \"Use high-contrast palettes\"   ),   Implementation = c(     \"Keep same data object, change options only\",     \"Create 'Other' category for small groups\",     \"Batch process multiple charts\",     \"Filter data to key comparisons\",     \"Use 'presentation' color palette\"   ) )  knitr::kable(perf_tips, caption = \"Performance Optimization Guide\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Professional Waffle Charts with jwaffle","text":"jwaffle function provides comprehensive solution creating professional waffle charts. Key advantages include:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"core-visualization-capabilities","dir":"Articles","previous_headings":"Summary","what":"Core Visualization Capabilities","title":"Professional Waffle Charts with jwaffle","text":"Intuitive Design: Grid-based layout ’s easier interpret pie charts Flexible Input: Works raw data, counts, aggregated summaries Professional Output: Publication presentation-ready visualizations Accessibility: Colorblind-friendly palettes clear visual hierarchy","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"advanced-features-1","dir":"Articles","previous_headings":"Summary","what":"Advanced Features","title":"Professional Waffle Charts with jwaffle","text":"Faceting Support: Multi-panel comparisons across subgroups Custom Styling: Multiple color palettes theme options Performance Optimization: Intelligent caching large datasets Error Handling: Graceful handling edge cases missing data","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"real-world-applications-1","dir":"Articles","previous_headings":"Summary","what":"Real-World Applications","title":"Professional Waffle Charts with jwaffle","text":"Market Research: Brand preference, customer segmentation, purchase behavior Survey Analysis: Employee satisfaction, customer feedback, opinion polls Healthcare Research: Treatment outcomes, patient demographics, quality metrics Business Intelligence: Resource allocation, performance metrics, KPI tracking","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"integration-benefits","dir":"Articles","previous_headings":"Summary","what":"Integration Benefits","title":"Professional Waffle Charts with jwaffle","text":"Statistical Workflow: Seamless integration statistical testing Report Generation: Automated chart creation regular reporting Data Validation: Built-checks data quality completeness Accessibility: Support inclusive design universal access","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/36-jwaffle-comprehensive.html","id":"next-steps","dir":"Articles","previous_headings":"Summary","what":"Next Steps","title":"Professional Waffle Charts with jwaffle","text":"Explore different applications specific data visualization needs Experiment color palettes styling organization’s brand Try performance optimization features datasets Consider jwaffle standardizing proportional data visualization","code":"sessionInfo()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/categorical-plots.html","id":"bar-charts-with-jjbarstats","dir":"Articles","previous_headings":"","what":"Bar charts with jjbarstats()","title":"Categorical Plot Functions","text":"jjbarstats() creates bar chart automatically performs chi-squared test compare distribution two categorical variables. example compares number cylinders (cyl) across transmission types ().","code":"jjbarstats(data = mtcars, dep = cyl, group = am, grvar = NULL) #>  #>  BAR CHARTS #>  #>  You have selected to use a barplot to compare a categorical variable #>  with another."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/categorical-plots.html","id":"pie-charts-with-jjpiestats","dir":"Articles","previous_headings":"","what":"Pie charts with jjpiestats()","title":"Categorical Plot Functions","text":"jjpiestats() similar jjbarstats() displays results pie chart.","code":"jjpiestats(data = mtcars, dep = cyl, group = am, grvar = NULL) #>  #>  PIE CHARTS #>  #>  You have selected to use Pie Charts."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/categorical-plots.html","id":"dot-charts-with-jjdotplotstats","dir":"Articles","previous_headings":"","what":"Dot charts with jjdotplotstats()","title":"Categorical Plot Functions","text":"jjdotplotstats() shows group means using dot plot. example plot horsepower (hp) engine configuration (vs).  function returns results object whose plot element contains ggplot2 visualisation.","code":"jjdotplotstats(data = mtcars, dep = hp, group = vs, grvar = NULL) #>  #>  DOT CHART #>  #>  You have selected to use a Dot Plot to compare continuous variables by #>  groups."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/continuous-comparisons.html","id":"bar-charts-with-jjbarstats","dir":"Articles","previous_headings":"","what":"Bar charts with jjbarstats()","title":"Categorical Plot Functions","text":"jjbarstats() function creates bar charts performs chi-squared tests compare categorical variables. wraps ggstatsplot::ggbarstats().","code":"# Underlying function that jjbarstats() wraps ggstatsplot::ggbarstats(   data = mtcars,   x = cyl,   y = am,   title = \"Cylinders by Transmission Type\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/continuous-comparisons.html","id":"pie-charts-with-jjpiestats","dir":"Articles","previous_headings":"","what":"Pie charts with jjpiestats()","title":"Categorical Plot Functions","text":"jjpiestats() function creates pie charts categorical data visualization. wraps ggstatsplot::ggpiestats().","code":"# Underlying function that jjpiestats() wraps ggstatsplot::ggpiestats(   data = mtcars,   x = cyl,   y = am,   title = \"Distribution of Cylinders by Transmission\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/continuous-comparisons.html","id":"dot-charts-with-jjdotplotstats","dir":"Articles","previous_headings":"","what":"Dot charts with jjdotplotstats()","title":"Categorical Plot Functions","text":"jjdotplotstats() function shows group comparisons using dot plots. wraps ggstatsplot::ggdotplotstats().","code":"# Underlying function that jjdotplotstats() wraps ggstatsplot::ggdotplotstats(   data = mtcars,   x = hp,   y = vs,   title = \"Horsepower by Engine Configuration\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/continuous-comparisons.html","id":"within-group-comparisons-with-jjwithinstats","dir":"Articles","previous_headings":"","what":"Within-group comparisons with jjwithinstats()","title":"Categorical Plot Functions","text":"jjwithinstats() function compares repeated measurements within groups. wraps ggstatsplot::ggwithinstats().","code":"# Create long format data for within-group comparison library(tidyr) mtcars_long <- mtcars %>%   select(mpg, hp, wt, qsec) %>%   mutate(id = row_number()) %>%   pivot_longer(cols = c(mpg, hp, wt, qsec),                 names_to = \"measure\",                 values_to = \"value\") %>%   # Standardize values for comparison   group_by(measure) %>%   mutate(value = scale(value)[,1]) %>%   ungroup()  # Underlying function that jjwithinstats() wraps ggstatsplot::ggwithinstats(   data = mtcars_long,   x = measure,   y = value,   paired = TRUE,   id = id,   title = \"Comparison of Standardized Car Measurements\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/continuous-comparisons.html","id":"usage-in-jamovi","dir":"Articles","previous_headings":"","what":"Usage in jamovi","title":"Categorical Plot Functions","text":"functions designed used jamovi graphical interface, provide: Interactive parameter selection Automatic data type handling Integrated results display Export capabilities use functions jamovi: Install jjstatsplot module Load data Navigate JJStatsPlot menu Select appropriate plot type Configure variables options interface jamovi interface handles parameter validation, data preprocessing, result presentation automatically.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/correlations-scatterplots.html","id":"correlation-matrices-with-jjcorrmat","dir":"Articles","previous_headings":"","what":"Correlation matrices with jjcorrmat()","title":"Correlations and Scatter Plots","text":"jjcorrmat() visualises pairwise correlations numeric variables reports associated tests. look relationships mpg, hp wt mtcars data.","code":"jjcorrmat(data = mtcars, dep = c(mpg, hp, wt), grvar = NULL) #>  #>  CORRELATION MATRIX #>  #>  You have selected to use a correlation matrix to compare continuous #>  variables."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/correlations-scatterplots.html","id":"scatter-plots-with-jjscatterstats","dir":"Articles","previous_headings":"","what":"Scatter plots with jjscatterstats()","title":"Correlations and Scatter Plots","text":"jjscatterstats() produces scatter plot regression line textual output describing correlation regression statistics.","code":"jjscatterstats(data = mtcars, dep = mpg, group = hp, grvar = NULL) #>  #>  SCATTER PLOT #>  #>  You have selected to use a scatter plot."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"vignette demonstrates jjstatsplot module’s visualization capabilities using oncology datasets OncoDataSets package. ’ll create publication-ready statistical plots combine beautiful visualizations rigorous statistical testing.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"loading-required-packages","dir":"Articles","previous_headings":"","what":"Loading Required Packages","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"library(jjstatsplot) #> Warning: replacing previous import 'dplyr::as_data_frame' by #> 'igraph::as_data_frame' when loading 'jjstatsplot' #> Warning: replacing previous import 'dplyr::groups' by 'igraph::groups' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'dplyr::union' by 'igraph::union' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'dplyr::select' by 'jmvcore::select' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'magrittr::set_names' by 'purrr::set_names' #> when loading 'jjstatsplot' #> Warning: replacing previous import 'igraph::simplify' by 'purrr::simplify' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'igraph::compose' by 'purrr::compose' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'purrr::%@%' by 'rlang::%@%' when loading #> 'jjstatsplot' #> Warning: replacing previous import 'purrr::flatten_lgl' by 'rlang::flatten_lgl' #> when loading 'jjstatsplot' #> Warning: replacing previous import 'purrr::splice' by 'rlang::splice' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'purrr::flatten_chr' by 'rlang::flatten_chr' #> when loading 'jjstatsplot' #> Warning: replacing previous import 'purrr::flatten_raw' by 'rlang::flatten_raw' #> when loading 'jjstatsplot' #> Warning: replacing previous import 'igraph::is_named' by 'rlang::is_named' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'purrr::flatten' by 'rlang::flatten' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'purrr::flatten_dbl' by 'rlang::flatten_dbl' #> when loading 'jjstatsplot' #> Warning: replacing previous import 'purrr::invoke' by 'rlang::invoke' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'purrr::flatten_int' by 'rlang::flatten_int' #> when loading 'jjstatsplot' #> Warning: replacing previous import 'purrr::discard' by 'scales::discard' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'igraph::crossing' by 'tidyr::crossing' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'magrittr::extract' by 'tidyr::extract' when #> loading 'jjstatsplot' #> Warning: replacing previous import 'jmvcore::select' by 'dplyr::select' when #> loading 'jjstatsplot' library(OncoDataSets) library(dplyr) library(ggplot2)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"example-1-melanoma---comparing-thickness-by-ulceration","dir":"Articles","previous_headings":"","what":"Example 1: Melanoma - Comparing Thickness by Ulceration","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"data(\"Melanoma_df\")  # Prepare data Melanoma_df$ulcer_status <- factor(Melanoma_df$ulcer,                                   levels = c(0, 1),                                   labels = c(\"No Ulceration\", \"Ulceration\"))  # Log transform thickness for better visualization Melanoma_df$log_thickness <- log(Melanoma_df$thickness + 0.1)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"box-violin-plot-with-statistics","dir":"Articles","previous_headings":"Example 1: Melanoma - Comparing Thickness by Ulceration","what":"Box-Violin Plot with Statistics","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# In jamovi: # 1. Select Analyses → jjstatsplot → Box-Violin Plot # 2. Set 'log_thickness' as dependent variable # 3. Set 'ulcer_status' as grouping variable # 4. Options: #    - Type: \"parametric\" (t-test) or \"nonparametric\" (Mann-Whitney) #    - Add mean point #    - Show sample sizes #    - Pairwise comparisons: Games-Howell #    - Effect size: Cohen's d # 5. Customization: #    - Title: \"Tumor Thickness by Ulceration Status\" #    - X-axis: \"Ulceration Status\" #    - Y-axis: \"Log Tumor Thickness (mm)\""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"grouped-analysis-by-sex","dir":"Articles","previous_headings":"Example 1: Melanoma - Comparing Thickness by Ulceration","what":"Grouped Analysis by Sex","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# In jamovi: # 1. Same as above but add 'sex' as grouping factor # 2. This creates separate panels for males and females # 3. Enable \"Grouped Analysis\" option # 4. Compare patterns across sexes"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"example-2-breast-cancer-wisconsin---multiple-group-comparisons","dir":"Articles","previous_headings":"","what":"Example 2: Breast Cancer Wisconsin - Multiple Group Comparisons","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"data(\"BreastCancerWI_df\")  # Create radius categories for visualization BreastCancerWI_df$diagnosis_label <- factor(BreastCancerWI_df$diagnosis,                                            levels = c(\"0\", \"1\"),                                            labels = c(\"Benign\", \"Malignant\"))  # Select key measurements bc_subset <- BreastCancerWI_df %>%   select(diagnosis_label, radius_mean, texture_mean, perimeter_mean, area_mean)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"correlation-matrix","dir":"Articles","previous_headings":"Example 2: Breast Cancer Wisconsin - Multiple Group Comparisons","what":"Correlation Matrix","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# In jamovi: # 1. Select Analyses → jjstatsplot → Correlation Matrix # 2. Add continuous variables: #    - radius_mean #    - texture_mean   #    - perimeter_mean #    - area_mean # 3. Options: #    - Correlation type: Pearson or Spearman #    - Show significance stars #    - Adjust p-values: Holm # 4. Split by diagnosis for separate matrices"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"scatter-plot-with-marginal-distributions","dir":"Articles","previous_headings":"Example 2: Breast Cancer Wisconsin - Multiple Group Comparisons","what":"Scatter Plot with Marginal Distributions","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# In jamovi: # 1. Select Analyses → jjstatsplot → Scatter Plot # 2. X-axis: radius_mean # 3. Y-axis: texture_mean # 4. Group by: diagnosis_label # 5. Options: #    - Add regression lines per group #    - Show confidence intervals #    - Marginal plots: density #    - Correlation coefficient per group"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"example-3-smoking-and-lung-cancer---categorical-analysis","dir":"Articles","previous_headings":"","what":"Example 3: Smoking and Lung Cancer - Categorical Analysis","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"data(\"SmokingLungCancer_df\")  # Examine structure str(SmokingLungCancer_df) #> 'data.frame':    63 obs. of  4 variables: #>  $ yrs_smk : Factor w/ 9 levels \"15-19\",\"20-24\",..: 1 2 3 4 5 6 7 8 9 1 ... #>  $ pys     : num  10366 8162 5969 4496 3512 ... #>  $ num_cigs: Factor w/ 7 levels \"0\",\"1-9\",\"10-14\",..: 1 1 1 1 1 1 1 1 1 2 ... #>  $ deaths  : num  1 0 0 0 0 0 0 0 2 0 ..."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"piedonut-chart-with-chi-square-test","dir":"Articles","previous_headings":"Example 3: Smoking and Lung Cancer - Categorical Analysis","what":"Pie/Donut Chart with Chi-square Test","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# In jamovi: # 1. Select Analyses → jjstatsplot → Pie Chart # 2. Main variable: cancer_status # 3. Grouping: smoking_status # 4. Options: #    - Display: \"donut\" (modern) or \"pie\" (classic) #    - Show percentages #    - Chi-square test results #    - Paired comparisons with adjusted p-values"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"contingency-table-visualization","dir":"Articles","previous_headings":"Example 3: Smoking and Lung Cancer - Categorical Analysis","what":"Contingency Table Visualization","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# In jamovi: # 1. Select Analyses → jjstatsplot → Contingency Table Plot # 2. Rows: smoking_status # 3. Columns: cancer_status # 4. Statistics: #    - Chi-square test #    - Cramer's V effect size #    - Standardized residuals # 5. Visual options: #    - Mosaic plot #    - Association plot #    - Pearson residuals shading"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"example-4-survival-data-visualization","dir":"Articles","previous_headings":"","what":"Example 4: Survival Data Visualization","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"data(\"LeukemiaSurvival_df\")  # Create categories for visualization LeukemiaSurvival_df$wbc_category <- cut(LeukemiaSurvival_df$logWBC,                                         breaks = quantile(LeukemiaSurvival_df$logWBC),                                         labels = c(\"Q1\", \"Q2\", \"Q3\", \"Q4\"))"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"dot-plot-with-summary-statistics","dir":"Articles","previous_headings":"Example 4: Survival Data Visualization","what":"Dot Plot with Summary Statistics","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# In jamovi: # 1. Select Analyses → jjstatsplot → Dot Plot # 2. Continuous: time (survival time) # 3. Grouping: wbc_category # 4. Options: #    - Central tendency: mean or median #    - Error bars: 95% CI or SE #    - Test: ANOVA or Kruskal-Wallis #    - Post-hoc: Tukey HSD"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"example-5-paired-data---beforeafter-treatment","dir":"Articles","previous_headings":"","what":"Example 5: Paired Data - Before/After Treatment","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# Simulate paired data (before/after treatment) set.seed(123) paired_data <- data.frame(   patient_id = 1:30,   before = rnorm(30, mean = 10, sd = 2),   after = rnorm(30, mean = 8, sd = 2) )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"paired-box-violin-plot","dir":"Articles","previous_headings":"Example 5: Paired Data - Before/After Treatment","what":"Paired Box-Violin Plot","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# In jamovi: # 1. Select Analyses → jjstatsplot → Paired Box-Violin # 2. Set data in long format with: #    - Measurement variable #    - Time variable (before/after) #    - ID variable (patient_id) # 3. Statistics: #    - Paired t-test or Wilcoxon #    - Effect size: Cohen's d #    - Individual change lines"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"histogram-matrix-by-groups","dir":"Articles","previous_headings":"Example 6: Multi-Panel Visualizations","what":"Histogram Matrix by Groups","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# Using Melanoma data: # 1. Select Analyses → jjstatsplot → Histogram # 2. Variable: age # 3. Grouping: status (survival outcome) # 4. Options: #    - Bin width: automatic or manual #    - Overlay: density curve #    - Test normality per group #    - Show group statistics"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"advanced-customization","dir":"Articles","previous_headings":"Example 6: Multi-Panel Visualizations","what":"Advanced Customization","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# All jjstatsplot visualizations support: # 1. Themes: #    - ggplot2 themes (minimal, classic, dark) #    - Custom color palettes #    - Font adjustments # 2. Annotations: #    - Custom titles and subtitles #    - Caption with statistical results #    - Sample size annotations # 3. Export options: #    - High-resolution PNG/PDF #    - Customizable dimensions #    - Publication-ready formatting"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"example-7-complex-relationships","dir":"Articles","previous_headings":"","what":"Example 7: Complex Relationships","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"data(\"BrainCancerCases_df\") str(BrainCancerCases_df) #> 'data.frame':    1175 obs. of  5 variables: #>  $ county  : Factor w/ 31 levels \"Bernalillo\",\"Catron\",..: 9 23 1 7 30 22 31 7 31 1 ... #>  $ cases   : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ year    : int  1977 1974 1977 1977 1977 1977 1977 1977 1977 1975 ... #>  $ agegroup: int  2 8 13 14 16 11 17 11 7 13 ... #>  $ sex     : int  2 2 1 2 2 1 1 2 2 1 ..."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"matrix-scatter-plot","dir":"Articles","previous_headings":"Example 7: Complex Relationships","what":"Matrix Scatter Plot","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# In jamovi: # 1. Select Analyses → jjstatsplot → Scatter Matrix # 2. Add multiple continuous variables # 3. Group by categorical variable # 4. Options: #    - Lower triangle: scatter plots #    - Diagonal: density plots #    - Upper triangle: correlation coefficients #    - Smooth lines with confidence bands"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"choose-appropriate-plot-types","dir":"Articles","previous_headings":"Best Practices for Statistical Visualization","what":"1. Choose Appropriate Plot Types","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"Continuous vs. Categorical: Box plots, violin plots Two Continuous: Scatter plots regression Multiple Groups: Faceted plots Correlations: Heatmaps significance","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"statistical-rigor","dir":"Articles","previous_headings":"Best Practices for Statistical Visualization","what":"2. Statistical Rigor","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"Always show confidence intervals Report exact p-values Include effect sizes Adjust multiple comparisons","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"visual-clarity","dir":"Articles","previous_headings":"Best Practices for Statistical Visualization","what":"3. Visual Clarity","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"Use color-blind friendly palettes Add clear labels titles Include sample sizes Highlight significant findings","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"reproducibility","dir":"Articles","previous_headings":"Best Practices for Statistical Visualization","what":"4. Reproducibility","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# Document your choices: # - Statistical test used # - Assumptions checked # - Data transformations # - Outlier handling"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"publication-pipeline","dir":"Articles","previous_headings":"Integration with Research Workflow","what":"Publication Pipeline","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# 1. Exploratory Analysis #    - Use jjstatsplot for initial visualization #    - Identify patterns and outliers #     # 2. Statistical Testing #    - Integrated tests in all plots #    - Effect sizes automatically calculated #     # 3. Publication Preparation #    - Export high-quality figures #    - Extract statistical results #    - Create supplementary materials # # 4. Presentation #    - Use consistent themes #    - Create plot series #    - Generate summary slides"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"combining-with-other-modules","dir":"Articles","previous_headings":"Integration with Research Workflow","what":"Combining with Other Modules","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# Workflow example: # 1. Data cleaning with ClinicoPathDescriptives # 2. Survival analysis with jsurvival # 3. Visualize results with jjstatsplot: #    - Kaplan-Meier curve comparisons #    - Hazard ratio forest plots #    - Time-dependent ROC curves"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"custom-statistical-tests","dir":"Articles","previous_headings":"Advanced Features","what":"Custom Statistical Tests","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# jjstatsplot supports: # 1. Parametric tests (t-test, ANOVA) # 2. Non-parametric alternatives # 3. Robust statistics # 4. Bayesian approaches # 5. Bootstrap confidence intervals"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"interactive-features","dir":"Articles","previous_headings":"Advanced Features","what":"Interactive Features","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"","code":"# When used in jamovi: # - Hover for exact values # - Click to highlight groups # - Zoom for detailed views # - Export selected regions"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"jjstatsplot module transforms statistical analysis publication-ready visualizations : Combining beautiful plots rigorous statistics Providing appropriate tests data type Including effect sizes confidence intervals Supporting complex multi-group comparisons Offering extensive customization options Used OncoDataSets, researchers can quickly create compelling visualizations effectively communicate findings maintaining statistical integrity.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/jjstatsplot-01-oncodatasets-examples.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"jjstatsplot: Statistical Visualization with Oncology Data","text":"OncoDataSets package: https://cran.r-project.org/package=OncoDataSets jjstatsplot documentation: https://www.serdarbalci.com/jjstatsplot/ ggstatsplot (underlying package): https://indrajeetpatil.github.io/ggstatsplot/","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/07-continuous-comparisons-legacy.html","id":"between-group-comparisons-with-jjbetweenstats","dir":"Articles > Legacy","previous_headings":"","what":"Between-group comparisons with jjbetweenstats()","title":"Continuous Variable Comparisons","text":"jjbetweenstats() function creates box-violin plots compare continuous variables independent groups. automatically performs appropriate statistical tests (parametric, non-parametric, robust, Bayesian) displays results.","code":"# Underlying function that jjbetweenstats() wraps ggstatsplot::ggbetweenstats(   data = mtcars,   x = cyl,   y = mpg,   type = \"parametric\",   pairwise.comparisons = TRUE,   pairwise.display = \"significant\",   centrality.plotting = TRUE,   title = \"Fuel Efficiency by Number of Cylinders\",   xlab = \"Number of Cylinders\",   ylab = \"Miles per Gallon\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/07-continuous-comparisons-legacy.html","id":"customizing-the-analysis-type","dir":"Articles > Legacy","previous_headings":"Between-group comparisons with jjbetweenstats()","what":"Customizing the analysis type","title":"Continuous Variable Comparisons","text":"can choose different types statistical analyses:","code":"# Non-parametric analysis with Kruskal-Wallis test ggstatsplot::ggbetweenstats(   data = mtcars,   x = gear,   y = hp,   type = \"nonparametric\",   centrality.plotting = TRUE,   centrality.type = \"nonparametric\",   title = \"Horsepower Distribution by Number of Gears (Non-parametric)\",   xlab = \"Number of Gears\",   ylab = \"Horsepower\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/07-continuous-comparisons-legacy.html","id":"histograms-with-jjhistostats","dir":"Articles > Legacy","previous_headings":"","what":"Histograms with jjhistostats()","title":"Continuous Variable Comparisons","text":"jjhistostats() function creates histograms overlaid density curves statistical test results specified test value.","code":"# Underlying function that jjhistostats() wraps ggstatsplot::gghistostats(   data = mtcars,   x = mpg,   type = \"parametric\",   normal.curve = TRUE,   binwidth = 2,   title = \"Distribution of Fuel Efficiency\",   xlab = \"Miles per Gallon\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/07-continuous-comparisons-legacy.html","id":"grouped-histograms","dir":"Articles > Legacy","previous_headings":"Histograms with jjhistostats()","what":"Grouped histograms","title":"Continuous Variable Comparisons","text":"can also create histograms split grouping variable:","code":"# Grouped histogram ggstatsplot::grouped_gghistostats(   data = mtcars,   x = mpg,   grouping.var = am,   binwidth = 3,   title.prefix = \"Transmission Type\",   normal.curve = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/07-continuous-comparisons-legacy.html","id":"within-group-comparisons-with-jjwithinstats","dir":"Articles > Legacy","previous_headings":"","what":"Within-group comparisons with jjwithinstats()","title":"Continuous Variable Comparisons","text":"jjwithinstats() function designed repeated measures paired comparisons. shows individual trajectories performs appropriate paired tests.","code":"# Create paired data for demonstration library(tidyr) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  # Simulate paired measurements (e.g., before and after treatment) paired_data <- data.frame(   id = rep(1:16, 2),   condition = rep(c(\"Before\", \"After\"), each = 16),   value = c(mtcars$mpg[1:16], mtcars$mpg[1:16] + rnorm(16, mean = 2, sd = 1)) )  # Underlying function that jjwithinstats() wraps ggstatsplot::ggwithinstats(   data = paired_data,   x = condition,   y = value,   paired = TRUE,   id = id,   type = \"parametric\",   pairwise.comparisons = TRUE,   title = \"Paired Comparison of Fuel Efficiency\",   xlab = \"Measurement Time\",   ylab = \"Miles per Gallon\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/07-continuous-comparisons-legacy.html","id":"dot-plots-with-jjdotplotstats","dir":"Articles > Legacy","previous_headings":"","what":"Dot plots with jjdotplotstats()","title":"Continuous Variable Comparisons","text":"jjdotplotstats() function creates Cleveland dot plots showing group means medians confidence intervals. particularly useful comparing multiple groups want emphasize central tendency uncertainty.","code":"# Underlying function that jjdotplotstats() wraps ggstatsplot::ggdotplotstats(   data = mtcars,   x = hp,   y = cyl,   type = \"parametric\",   centrality.plotting = TRUE,   title = \"Mean Horsepower by Number of Cylinders\",   xlab = \"Horsepower\",   ylab = \"Number of Cylinders\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/07-continuous-comparisons-legacy.html","id":"statistical-details","dir":"Articles > Legacy","previous_headings":"","what":"Statistical details","title":"Continuous Variable Comparisons","text":"functions provide: Parametric: t-test, ANOVA, paired t-test Non-parametric: Mann-Whitney U, Kruskal-Wallis, Wilcoxon signed-rank Robust: Yuen’s trimmed means test, heteroscedastic ANOVA Bayesian: Bayes Factor analysis Cohen’s d, Hedge’s g (t-tests) Eta-squared, omega-squared (ANOVA) r (non-parametric tests) Pairwise comparisons: comparing multiple groups, post-hoc pairwise comparisons available p-value adjustment methods.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/07-continuous-comparisons-legacy.html","id":"usage-in-jamovi","dir":"Articles > Legacy","previous_headings":"","what":"Usage in jamovi","title":"Continuous Variable Comparisons","text":"functions integrated jamovi interface provide: Point--click variable selection Interactive options customizing plots Automatic handling missing data Export options plots results use jamovi: Install jjstatsplot module jamovi library Load dataset Navigate JJStatsPlot → Continuous menu Select appropriate analysis Configure options user-friendly interface","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/07-continuous-comparisons-legacy.html","id":"advanced-customization","dir":"Articles > Legacy","previous_headings":"","what":"Advanced customization","title":"Continuous Variable Comparisons","text":"jamovi interface provides common options, R users can access additional customization underlying ggstatsplot functions:","code":"# Example with extensive customization ggstatsplot::ggbetweenstats(   data = mtcars,   x = am,   y = mpg,   type = \"parametric\",   # Visual customization   violin.args = list(width = 0.5, alpha = 0.2),   boxplot.args = list(width = 0.2, alpha = 0.5),   point.args = list(alpha = 0.5, size = 3, position = position_jitter(width = 0.1)),   # Statistical options   conf.level = 0.99,   effsize.type = \"unbiased\",   # Theming   ggtheme = ggplot2::theme_minimal(),   # Labels   title = \"Fuel Efficiency: Manual vs Automatic Transmission\",   subtitle = \"99% confidence intervals shown\",   xlab = \"Transmission Type\",   ylab = \"Miles per Gallon\",   caption = \"Data: Motor Trend Car Road Tests\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/07-continuous-comparisons-legacy.html","id":"summary","dir":"Articles > Legacy","previous_headings":"","what":"Summary","title":"Continuous Variable Comparisons","text":"continuous comparison functions jjstatsplot provide: Comprehensive statistical analyses minimal code Publication-ready visualizations Automatic selection appropriate statistical tests Integration jamovi’s graphical interface Flexibility advanced R users tools make easy perform rigorous statistical comparisons creating informative visualizations suitable exploration presentation.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/08-categorical-plots-legacy.html","id":"bar-charts-with-jjbarstats","dir":"Articles > Legacy","previous_headings":"","what":"Bar charts with jjbarstats()","title":"Categorical Plot Functions","text":"jjbarstats() creates bar chart automatically performs chi-squared test compare distribution two categorical variables. example compares number cylinders (cyl) across transmission types ().","code":"jjbarstats(data = mtcars, dep = cyl, group = am, grvar = NULL) #>  #>  BAR CHARTS #>  #>  <div style='padding: 15px; background-color: #f8f9fa; border-left: 4px #>  solid #007bff; margin: 10px 0;'><h4 style='color: #007bff; margin-top: #>  0;'>📊 About Bar Chart Analysis #>  #>  Purpose: Compare the distribution of categorical variables across #>  groups using statistical testing. #>  #>  When to Use: #>  #>  Diagnostic Tests: Compare test results (positive/negative) across #>  patient groupsTreatment Response: Analyze response rates across #>  different treatmentsBiomarker Expression: Compare expression levels #>  (low/medium/high) by clinical factorsRisk Factor Analysis: Examine how #>  risk factors relate to outcomes #>  #>  Output Includes: #>  #>  Visual bar chart with statistical annotationsChi-square or appropriate #>  statistical test resultsEffect size measures and confidence #>  intervalsPost-hoc pairwise comparisons (when >2 groups) #>  #> character(0) #>  #> character(0) #>  #> character(0) #>  #> character(0) #>  #>  Bar chart analysis comparing cyl by am. #>  #>  Data prepared: 32 observations (missing values will be handled by #>  statistical functions) (cached). #> Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0. #> ℹ Please use the `linewidth` argument instead. #> ℹ The deprecated feature was likely used in the jmvcore package. #>   Please report the issue at <https://github.com/jamovi/jmvcore/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/08-categorical-plots-legacy.html","id":"pie-charts-with-jjpiestats","dir":"Articles > Legacy","previous_headings":"","what":"Pie charts with jjpiestats()","title":"Categorical Plot Functions","text":"jjpiestats() similar jjbarstats() displays results pie chart.","code":"jjpiestats(data = mtcars, dep = cyl, group = am, grvar = NULL) #> Warning in value[[3L]](cond): Clinical preset application failed: {error}. #> Using custom settings. argument is missing, with no default #> Warning in chisq.test(contingency_table): Chi-squared approximation may be #> incorrect #>  #>  PIE CHARTS #>  #>  Pie Chart Analysis #>  #>  What this analysis does: Generates pie charts with statistical #>  analysis to compare categorical variables across groups. Performs #>  chi-square tests, Fisher's exact tests, or other appropriate #>  statistical tests based on your data. #>  #>  When to use: Use when you want to visualize proportions of categorical #>  outcomes and test for significant differences between groups. Ideal #>  for diagnostic test results, treatment responses, or biomarker #>  categories. #>  #>  Current configuration: This analysis uses custom settings for pie #>  chart generation with statistical testing. #>  #>  What you'll get: Interactive pie charts with statistical test results, #>  confidence intervals, and effect sizes. Optional grouped analysis for #>  complex study designs. #>  #>  Analysis Configuration #>  #>  • Analyzing variable: cyl #>  #>  • Comparing across groups: am #>  #>  • Statistical method: Parametric #>  #>  • Sample size: 32 observations #>  #>  Statistical Assumptions & Warnings #>  #>  #>  #>  General Requirements #>  #>  #>  ✓ Data should be categorical (factors or characters) #>  ✓ Observations should be independent #>  ✓ For statistical tests: adequate sample size in each category #>  #>  #>  #>  Warnings #>  #>  ⚠️ Expected cell counts < 5 detected. Consider using Fisher's exact #>  test (nonparametric option) for more reliable results. #>  #>  #>  #>  How to Interpret Your Results #>  #>  Statistical Method: Chi-square test results show whether group #>  differences are statistically significant. Look for p-values < 0.05 #>  for significant associations. #>  #>  Clinical Context: Interpret results in the context of your specific #>  research question and clinical setting. #>  #>  General Guidance: Pie charts show proportions visually - larger slices #>  represent higher frequencies. Statistical tests determine if observed #>  differences are likely due to chance or represent true group #>  differences. #>  #>  Copy-Ready Report Template #>  #>  <div style='background-color: #f8f9fa; padding: 15px; border: 1px #>  solid #dee2e6; border-radius: 5px;'> #>  #>  Methods: #>  #>  We compared {outcome} distributions across {groups} using {method}. #>  cyl am chi-square test Statistical significance was set at p < 0.05. #>  All analyses were performed using jamovi statistical software. #>  #>  Results: #>  #>  [Results will be automatically filled when analysis is complete] #>  #>  Copy the text above and modify as needed for your manuscript or #>  report. #>  #>  Pie chart analysis ready Variable: cyl, grouped by am. #>  #>  Data prepared: 32 observations (cached). #>  #>  Statistical method: Parametric analysis."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/08-categorical-plots-legacy.html","id":"dot-charts-with-jjdotplotstats","dir":"Articles > Legacy","previous_headings":"","what":"Dot charts with jjdotplotstats()","title":"Categorical Plot Functions","text":"jjdotplotstats() shows group means using dot plot. example plot horsepower (hp) engine configuration (vs).  function returns results object whose plot element contains ggplot2 visualisation.","code":"jjdotplotstats(data = mtcars, dep = hp, group = vs, grvar = NULL) #>  #>  DOT CHART #>  #>  Processing data for dot plot analysis... #>  #>  ℹ️ 1 potential outlier(s) detected in hp #>  #>  📊 Analysis summary: 2 groups, 32 total observations #>  #>  <div style='background-color: #f8f9fa; padding: 15px; border-left: 4px #>  solid #007bff; margin: 10px 0;'><h4 style='color: #007bff; margin-top: #>  0;'>📊 Clinical Interpretation #>  #>  Analysis: This dot plot shows the distribution of hp across different #>  vs categories using a t-test for comparing means. #>  #>  Sample: Group '0' (n=18), Group '1' (n=14) #>  #>  Results: Group '0' shows a mean of 189.72 vs Group '1' with a mean of #>  91.36. #>  #>  *💡 Tip: The statistical significance and effect size will be #>  displayed in the plot subtitle when the analysis completes.* #>  #>  <div style='background-color: #fff3cd; padding: 15px; border-left: 4px #>  solid #ffc107; margin: 10px 0;'><h4 style='color: #856404; margin-top: #>  0;'>🔍 Data Assessment & Recommendations #>  #>  ℹ️ Moderate sample sizes (n < 30). Non-parametric tests may be more #>  appropriate. #>  #>  ✓ Approximately normal distribution suitable for parametric tests. #>  #>  ✓ Parametric test is appropriate for your data. #>  #>  <hr style='border-color: #ffeaa7;'> #>  #>  Sample sizes by group: #>  0 : n = 18 #>  1 : n = 14 #>  #>  <div style='background-color: #e7f3ff; padding: 15px; border-left: 4px #>  solid #0066cc; margin: 10px 0;'><h4 style='color: #0066cc; margin-top: #>  0;'>📝 Copy-Ready Report Sentence #>  #>  <div style='background-color: white; padding: 10px; border: 1px dashed #>  #0066cc; font-family: \"Times New Roman\", serif;'> #>  #>  A independent samples t-test was performed to compare *hp* between #>  *vs* groups. The dot plot visualization shows the distribution and #>  central tendencies across groups, with statistical results displayed #>  in the plot subtitle including effect size and significance testing. #>  #>  *💡 Click to select the text above and copy to your report. #>  Statistical values will be automatically filled when the analysis #>  completes.* #>  #> character(0) #>  #> character(0)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/09-continuous-comparisons-legacy.html","id":"bar-charts-with-jjbarstats","dir":"Articles > Legacy","previous_headings":"","what":"Bar charts with jjbarstats()","title":"Categorical Plot Functions","text":"jjbarstats() function creates bar charts performs chi-squared tests compare categorical variables. wraps ggstatsplot::ggbarstats().","code":"# Underlying function that jjbarstats() wraps ggstatsplot::ggbarstats(   data = mtcars,   x = cyl,   y = am,   title = \"Cylinders by Transmission Type\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/09-continuous-comparisons-legacy.html","id":"pie-charts-with-jjpiestats","dir":"Articles > Legacy","previous_headings":"","what":"Pie charts with jjpiestats()","title":"Categorical Plot Functions","text":"jjpiestats() function creates pie charts categorical data visualization. wraps ggstatsplot::ggpiestats().","code":"# Underlying function that jjpiestats() wraps ggstatsplot::ggpiestats(   data = mtcars,   x = cyl,   y = am,   title = \"Distribution of Cylinders by Transmission\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/09-continuous-comparisons-legacy.html","id":"dot-charts-with-jjdotplotstats","dir":"Articles > Legacy","previous_headings":"","what":"Dot charts with jjdotplotstats()","title":"Categorical Plot Functions","text":"jjdotplotstats() function shows group comparisons using dot plots. wraps ggstatsplot::ggdotplotstats().","code":"# Underlying function that jjdotplotstats() wraps ggstatsplot::ggdotplotstats(   data = mtcars,   x = hp,   y = vs,   title = \"Horsepower by Engine Configuration\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/09-continuous-comparisons-legacy.html","id":"within-group-comparisons-with-jjwithinstats","dir":"Articles > Legacy","previous_headings":"","what":"Within-group comparisons with jjwithinstats()","title":"Categorical Plot Functions","text":"jjwithinstats() function compares repeated measurements within groups. wraps ggstatsplot::ggwithinstats().","code":"# Create long format data for within-group comparison library(tidyr) mtcars_long <- mtcars %>%   select(mpg, hp, wt, qsec) %>%   mutate(id = row_number()) %>%   pivot_longer(cols = c(mpg, hp, wt, qsec),                 names_to = \"measure\",                 values_to = \"value\") %>%   # Standardize values for comparison   group_by(measure) %>%   mutate(value = scale(value)[,1]) %>%   ungroup()  # Underlying function that jjwithinstats() wraps ggstatsplot::ggwithinstats(   data = mtcars_long,   x = measure,   y = value,   paired = TRUE,   id = id,   title = \"Comparison of Standardized Car Measurements\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/09-continuous-comparisons-legacy.html","id":"usage-in-jamovi","dir":"Articles > Legacy","previous_headings":"","what":"Usage in jamovi","title":"Categorical Plot Functions","text":"functions designed used jamovi graphical interface, provide: Interactive parameter selection Automatic data type handling Integrated results display Export capabilities use functions jamovi: Install jjstatsplot module Load data Navigate JJStatsPlot menu Select appropriate plot type Configure variables options interface jamovi interface handles parameter validation, data preprocessing, result presentation automatically.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/10-correlations-scatterplots-legacy.html","id":"correlation-matrices-with-jjcorrmat","dir":"Articles > Legacy","previous_headings":"","what":"Correlation matrices with jjcorrmat()","title":"Correlations and Scatter Plots","text":"jjcorrmat() visualises pairwise correlations numeric variables reports associated tests. look relationships mpg, hp wt mtcars data.","code":"jjcorrmat(data = mtcars, dep = c(mpg, hp, wt), grvar = NULL) #>  #>  CORRELATION MATRIX #>  #>  Preparing correlation analysis options... #>  #> character(0) #> Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0. #> ℹ Please use the `linewidth` argument instead. #> ℹ The deprecated feature was likely used in the jmvcore package. #>   Please report the issue at <https://github.com/jamovi/jmvcore/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/10-correlations-scatterplots-legacy.html","id":"scatter-plots-with-jjscatterstats","dir":"Articles > Legacy","previous_headings":"","what":"Scatter plots with jjscatterstats()","title":"Correlations and Scatter Plots","text":"jjscatterstats() produces scatter plot regression line textual output describing correlation regression statistics.","code":"jjscatterstats(data = mtcars, dep = mpg, group = hp, grvar = NULL) #>  #>  SCATTER PLOT #>  #>  You have selected to use a scatter plot with correlation analysis."},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"introduction","dir":"Articles > Legacy","previous_headings":"","what":"Introduction","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"jjstatsplot provides comprehensive statistical visualization tools specifically designed clinical research pathology studies. Built powerful ggstatsplot package, offers publication-ready plots integrated statistical testing, making complex data analysis accessible clinical researchers. Learning Objectives: Master statistical visualization clinical data analysis Learn publication-ready plot creation integrated statistics Apply appropriate statistical tests different data types Understand clinical interpretation statistical visualizations Implement quality control reproducible reporting workflows","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"module-overview","dir":"Articles > Legacy","previous_headings":"Introduction","what":"Module Overview","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"jjstatsplot encompasses four main areas statistical visualization:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"categorical-data-analysis","dir":"Articles > Legacy","previous_headings":"Introduction > Module Overview","what":"1. Categorical Data Analysis","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Bar Charts: Group comparisons chi-square testing Pie Charts: Proportion visualization categorical outcomes Dot Plots: Summary statistics confidence intervals Mosaic Plots: Multi-dimensional categorical relationships","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"continuous-data-analysis","dir":"Articles > Legacy","previous_headings":"Introduction > Module Overview","what":"2. Continuous Data Analysis","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Box-Violin Plots: Distribution comparisons groups Histograms: Distribution analysis normality testing Density Plots: Smooth distribution visualization Within-Subject Comparisons: Paired data analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"correlation-and-association","dir":"Articles > Legacy","previous_headings":"Introduction > Module Overview","what":"3. Correlation and Association","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Scatter Plots: Relationship visualization regression Correlation Matrices: Multi-variable association analysis Heatmaps: Pattern recognition large datasets Network Plots: Complex relationship visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"advanced-visualizations","dir":"Articles > Legacy","previous_headings":"Introduction > Module Overview","what":"4. Advanced Visualizations","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Ridge Plots: Multiple distribution comparisons Raincloud Plots: Combined distribution individual points Forest Plots: Meta-analysis effect size visualization Sankey Diagrams: Flow pathway analysis","code":"library(jjstatsplot) library(dplyr) library(ggplot2)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"clinical-data-examples","dir":"Articles > Legacy","previous_headings":"Getting Started","what":"Clinical Data Examples","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"’ll demonstrate jjstatsplot functions using clinical pathology datasets represent real-world scenarios.","code":"# Load clinical pathology datasets data(histopathology) data(breast_cancer_data) data(ihc_molecular_comprehensive)  # Prepare clinical variables for analysis clinical_data <- histopathology %>%   mutate(     # Convert variables to appropriate types     Grade = factor(Grade, levels = 1:3, labels = c(\"Grade 1\", \"Grade 2\", \"Grade 3\")),     TStage = factor(TStage),     Group = factor(Group),     LVI = factor(LVI, levels = c(\"FALSE\", \"TRUE\"), labels = c(\"Absent\", \"Present\")),     Age_Group = factor(ifelse(Age >= 65, \"≥65 years\", \"<65 years\")),          # Create clinical outcome variables     High_Risk = factor(ifelse(Grade == \"Grade 3\" | TStage %in% c(\"T3\", \"T4\"),                               \"High Risk\", \"Low Risk\")),     Recurrence_Risk = factor(case_when(       Grade == \"Grade 1\" & TStage %in% c(\"T1\", \"T2\") ~ \"Low\",       Grade == \"Grade 2\" ~ \"Intermediate\",        Grade == \"Grade 3\" | TStage %in% c(\"T3\", \"T4\") ~ \"High\",       TRUE ~ \"Intermediate\"     ), levels = c(\"Low\", \"Intermediate\", \"High\"))   )  cat(\"Clinical Dataset Overview:\\n\") cat(\"Patients:\", nrow(clinical_data), \"\\n\") cat(\"Variables:\", ncol(clinical_data), \"\\n\")  # Variable summary clinical_summary <- clinical_data %>%   summarise(     median_age = median(Age, na.rm = TRUE),     grade3_pct = round(mean(Grade == \"Grade 3\", na.rm = TRUE) * 100, 1),     lvi_present_pct = round(mean(LVI == \"Present\", na.rm = TRUE) * 100, 1),     high_risk_pct = round(mean(High_Risk == \"High Risk\", na.rm = TRUE) * 100, 1)   )  print(\"Clinical Characteristics:\") print(clinical_summary)"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"bar-charts-for-group-comparisons","dir":"Articles > Legacy","previous_headings":"Core Visualization Functions > 1. Categorical Data Visualization","what":"Bar Charts for Group Comparisons","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Essential comparing categorical outcomes treatment groups.","code":"# Bar Chart Example - Tumor Grade by Treatment Group # In jamovi: JJStatsPlot > Categorical > Bar Charts  cat(\"Bar Chart Analysis - Tumor Grade by Treatment Group\\n\") cat(\"==================================================\\n\\n\")  # Basic bar chart with statistical testing grade_by_group <- jjbarstats(   data = clinical_data,   dep = \"Grade\",              # Dependent variable (outcome)   group = \"Group\",            # Grouping variable (treatment)   title = \"Tumor Grade Distribution by Treatment Group\",   subtitle = \"Chi-square test for independence\",   xlab = \"Treatment Group\",   ylab = \"Count\" )  # Results interpretation cat(\"Statistical Test: Chi-square test of independence\\n\") cat(\"Null Hypothesis: Grade distribution is independent of treatment group\\n\") cat(\"Alternative: Grade distribution differs between treatment groups\\n\\n\")  # Clinical interpretation guidelines cat(\"Clinical Interpretation Guidelines:\\n\") cat(\"- Low-grade tumors (Grade 1-2): Better prognosis, less aggressive\\n\") cat(\"- High-grade tumors (Grade 3): Poorer prognosis, more aggressive\\n\") cat(\"- Treatment group differences may indicate selection bias or treatment effect\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"pie-charts-for-proportion-visualization","dir":"Articles > Legacy","previous_headings":"Core Visualization Functions > 1. Categorical Data Visualization","what":"Pie Charts for Proportion Visualization","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Useful showing composition categorical variables.","code":"# Pie Chart Example - Recurrence Risk Distribution # In jamovi: JJStatsPlot > Categorical > Pie Charts  cat(\"Pie Chart Analysis - Recurrence Risk Distribution\\n\") cat(\"================================================\\n\\n\")  recurrence_pie <- jjpiestats(   data = clinical_data,   dep = \"Recurrence_Risk\",   title = \"Patient Distribution by Recurrence Risk\",   subtitle = \"Low, Intermediate, and High Risk Categories\" )  # Risk stratification summary risk_distribution <- table(clinical_data$Recurrence_Risk) risk_percentages <- round(prop.table(risk_distribution) * 100, 1)  cat(\"Recurrence Risk Distribution:\\n\") for(i in 1:length(risk_distribution)) {   cat(paste0(names(risk_distribution)[i], \": \", risk_distribution[i],              \" patients (\", risk_percentages[i], \"%)\\n\")) }  cat(\"\\nClinical Utility:\\n\") cat(\"- Risk stratification guides treatment intensity\\n\") cat(\"- High-risk patients may benefit from adjuvant therapy\\n\") cat(\"- Low-risk patients may be candidates for de-escalation\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"box-violin-plots-for-group-comparisons","dir":"Articles > Legacy","previous_headings":"Core Visualization Functions > 2. Continuous Data Visualization","what":"Box-Violin Plots for Group Comparisons","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Standard approach comparing continuous variables groups.","code":"# Box-Violin Plot Example - Age by Risk Group # In jamovi: JJStatsPlot > Continuous > Between Groups  cat(\"Box-Violin Plot Analysis - Age by Risk Group\\n\") cat(\"============================================\\n\\n\")  age_by_risk <- jjbetweenstats(   data = clinical_data,   dep = \"Age\",                    # Continuous outcome variable   group = \"High_Risk\",            # Grouping variable   type = \"parametric\",            # Statistical test type   pairwise.comparisons = TRUE,    # Post-hoc comparisons   title = \"Age Distribution by Risk Category\",   subtitle = \"Two-sample t-test with effect size\",   xlab = \"Risk Category\",   ylab = \"Age (years)\" )  # Effect size interpretation cat(\"Statistical Analysis:\\n\") cat(\"Test: Two-sample t-test (parametric)\\n\") cat(\"Effect size: Cohen's d\\n\") cat(\"Assumptions: Normality, equal variances\\n\\n\")  cat(\"Effect Size Interpretation (Cohen's d):\\n\") cat(\"- Small effect: d = 0.2\\n\") cat(\"- Medium effect: d = 0.5\\n\") cat(\"- Large effect: d = 0.8\\n\\n\")  cat(\"Clinical Relevance:\\n\") cat(\"- Age may be a confounding factor in risk assessment\\n\") cat(\"- Older patients may have different treatment tolerability\\n\") cat(\"- Age-adjusted analysis may be necessary\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"histograms-with-statistical-testing","dir":"Articles > Legacy","previous_headings":"Core Visualization Functions > 2. Continuous Data Visualization","what":"Histograms with Statistical Testing","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Evaluate distribution characteristics test theoretical distributions.","code":"# Histogram Example - Age Distribution Analysis # In jamovi: JJStatsPlot > Continuous > Histograms  cat(\"Histogram Analysis - Age Distribution\\n\") cat(\"====================================\\n\\n\")  age_histogram <- jjhistostats(   data = clinical_data,   dep = \"Age\",   test.value = 65,               # Test against clinically relevant age   type = \"parametric\",   normal.curve = TRUE,           # Overlay normal distribution   title = \"Patient Age Distribution\",   subtitle = \"One-sample t-test against age 65\",   xlab = \"Age (years)\",   binwidth = 5 )  # Distribution characteristics age_stats <- clinical_data %>%   summarise(     n = sum(!is.na(Age)),     mean_age = round(mean(Age, na.rm = TRUE), 1),     median_age = median(Age, na.rm = TRUE),     sd_age = round(sd(Age, na.rm = TRUE), 1),     min_age = min(Age, na.rm = TRUE),     max_age = max(Age, na.rm = TRUE),     elderly_pct = round(mean(Age >= 65, na.rm = TRUE) * 100, 1)   )  cat(\"Age Distribution Summary:\\n\") cat(\"Sample size:\", age_stats$n, \"\\n\") cat(\"Mean age:\", age_stats$mean_age, \"years\\n\") cat(\"Median age:\", age_stats$median_age, \"years\\n\") cat(\"Standard deviation:\", age_stats$sd_age, \"years\\n\") cat(\"Age range:\", age_stats$min_age, \"-\", age_stats$max_age, \"years\\n\") cat(\"Elderly patients (≥65):\", age_stats$elderly_pct, \"%\\n\\n\")  cat(\"Clinical Implications:\\n\") cat(\"- Patient age distribution affects generalizability\\n\") cat(\"- Elderly patients may require modified treatment protocols\\n\") cat(\"- Age-related comorbidities impact treatment selection\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"scatter-plots-with-regression-analysis","dir":"Articles > Legacy","previous_headings":"Core Visualization Functions > 3. Correlation and Association Analysis","what":"Scatter Plots with Regression Analysis","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Examine relationships continuous variables.","code":"# Scatter Plot Example - Biomarker Correlation # In jamovi: JJStatsPlot > Correlation > Scatter Plots  cat(\"Scatter Plot Analysis - Biomarker Correlation\\n\") cat(\"=============================================\\n\\n\")  # Using measurement variables from histopathology data biomarker_scatter <- jjscatterstats(   data = clinical_data,   x = \"MeasurementA\",           # First biomarker   y = \"MeasurementB\",           # Second biomarker   type = \"parametric\",   conf.level = 0.95,   title = \"Biomarker A vs Biomarker B Correlation\",   subtitle = \"Pearson correlation with 95% confidence interval\",   xlab = \"Biomarker A Expression\",   ylab = \"Biomarker B Expression\" )  # Correlation strength interpretation cat(\"Correlation Strength Interpretation:\\n\") cat(\"- Negligible: |r| < 0.1\\n\") cat(\"- Weak: 0.1 ≤ |r| < 0.3\\n\") cat(\"- Moderate: 0.3 ≤ |r| < 0.5\\n\") cat(\"- Strong: 0.5 ≤ |r| < 0.7\\n\") cat(\"- Very strong: |r| ≥ 0.7\\n\\n\")  cat(\"Clinical Applications:\\n\") cat(\"- Biomarker co-expression patterns\\n\") cat(\"- Pathway analysis and validation\\n\") cat(\"- Quality control for technical replicates\\n\") cat(\"- Surrogate endpoint validation\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"correlation-matrix-for-multiple-variables","dir":"Articles > Legacy","previous_headings":"Core Visualization Functions > 3. Correlation and Association Analysis","what":"Correlation Matrix for Multiple Variables","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Comprehensive analysis relationships multiple variables.","code":"# Correlation Matrix Example - Clinical Variables # In jamovi: JJStatsPlot > Correlation > Correlation Matrix  cat(\"Correlation Matrix Analysis - Clinical Variables\\n\") cat(\"===============================================\\n\\n\")  # Select continuous clinical variables continuous_vars <- clinical_data %>%   select(Age, MeasurementA, MeasurementB, OverallTime) %>%   na.omit()  if(nrow(continuous_vars) > 10) {   correlation_matrix <- jjcorrmat(     data = continuous_vars,     type = \"parametric\",     title = \"Clinical Variables Correlation Matrix\",     subtitle = \"Pearson correlations with significance testing\"   )      cat(\"Matrix Interpretation:\\n\")   cat(\"- Diagonal elements are always 1.0 (self-correlation)\\n\")   cat(\"- Upper triangle shows correlation coefficients\\n\")   cat(\"- Lower triangle may show significance levels\\n\")   cat(\"- Color intensity indicates correlation strength\\n\\n\")      cat(\"Clinical Value:\\n\")   cat(\"- Identify multicollinearity in regression models\\n\")   cat(\"- Discover unexpected relationships between variables\\n\")   cat(\"- Guide feature selection for predictive models\\n\")   cat(\"- Quality assurance for related measurements\\n\") }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"paired-data-analysis","dir":"Articles > Legacy","previous_headings":"Advanced Clinical Applications","what":"Paired Data Analysis","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Essential -comparisons matched samples.","code":"# Paired Analysis Example - Pre/Post Treatment Comparison # In jamovi: JJStatsPlot > Continuous > Within Subject  cat(\"Paired Data Analysis - Treatment Response\\n\") cat(\"========================================\\n\\n\")  # Create synthetic paired data for demonstration set.seed(123) paired_data <- clinical_data %>%   slice_head(n = 50) %>%   mutate(     Pre_Treatment = MeasurementA,     Post_Treatment = MeasurementA + rnorm(50, mean = -2, sd = 1.5),     Patient_ID = paste0(\"PT\", sprintf(\"%03d\", 1:50))   ) %>%   select(Patient_ID, Pre_Treatment, Post_Treatment) %>%   tidyr::pivot_longer(cols = c(Pre_Treatment, Post_Treatment),                      names_to = \"Timepoint\",                       values_to = \"Biomarker_Level\")  if(nrow(paired_data) > 0) {   paired_comparison <- jjwithinstats(     data = paired_data,     x = \"Timepoint\",     y = \"Biomarker_Level\",     id = \"Patient_ID\",     paired = TRUE,     type = \"parametric\",     title = \"Pre vs Post-Treatment Biomarker Levels\",     subtitle = \"Paired t-test with individual trajectories\",     xlab = \"Treatment Timepoint\",     ylab = \"Biomarker Level\"   )      cat(\"Paired Analysis Advantages:\\n\")   cat(\"- Controls for individual patient baseline differences\\n\")   cat(\"- Higher statistical power than independent samples\\n\")   cat(\"- Shows individual patient trajectories\\n\")   cat(\"- Appropriate for longitudinal studies\\n\\n\")      cat(\"Clinical Applications:\\n\")   cat(\"- Treatment response monitoring\\n\")   cat(\"- Before-after intervention studies\\n\")   cat(\"- Matched case-control designs\\n\")   cat(\"- Quality of life assessments\\n\") }"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"subgroup-analysis","dir":"Articles > Legacy","previous_headings":"Advanced Clinical Applications","what":"Subgroup Analysis","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Evaluate treatment effects across different patient populations.","code":"cat(\"Subgroup Analysis - Treatment Effect by Grade\\n\") cat(\"=============================================\\n\\n\")  # Subgroup analysis by tumor grade subgroup_results <- list()  for(grade_level in c(\"Grade 1\", \"Grade 2\", \"Grade 3\")) {   subgroup_data <- clinical_data %>%     filter(Grade == grade_level & !is.na(MeasurementA))      if(nrow(subgroup_data) >= 10) {     cat(paste0(\"Analysis for \", grade_level, \":\\n\"))     cat(paste0(\"Sample size: \", nrow(subgroup_data), \"\\n\"))          # Age comparison by group within grade     age_summary <- subgroup_data %>%       group_by(Group) %>%       summarise(         n = n(),         mean_age = round(mean(Age, na.rm = TRUE), 1),         sd_age = round(sd(Age, na.rm = TRUE), 1),         .groups = 'drop'       )          print(age_summary)     cat(\"\\n\")   } }  cat(\"Subgroup Analysis Considerations:\\n\") cat(\"- Reduced sample sizes may limit statistical power\\n\") cat(\"- Multiple comparisons increase Type I error risk\\n\") cat(\"- Pre-planned vs post-hoc analyses have different interpretations\\n\") cat(\"- Clinical significance may differ from statistical significance\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"quality-control-applications","dir":"Articles > Legacy","previous_headings":"Integration with Clinical Workflows","what":"Quality Control Applications","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Statistical visualization laboratory clinical QC.","code":"cat(\"Quality Control Applications\\n\") cat(\"===========================\\n\\n\")  # QC metrics analysis qc_data <- clinical_data %>%   mutate(     # Simulate QC metrics     Processing_Batch = sample(1:5, n(), replace = TRUE),     Staining_Quality = sample(c(\"Excellent\", \"Good\", \"Acceptable\", \"Poor\"),                               n(), replace = TRUE, prob = c(0.4, 0.3, 0.2, 0.1)),     Measurement_CV = abs(rnorm(n(), mean = 5, sd = 2))  # Coefficient of variation   ) %>%   filter(!is.na(MeasurementA))  # Batch effect analysis if(nrow(qc_data) > 20) {   cat(\"Batch Effect Analysis:\\n\")   batch_summary <- qc_data %>%     group_by(Processing_Batch) %>%     summarise(       n = n(),       mean_measurement = round(mean(MeasurementA, na.rm = TRUE), 2),       sd_measurement = round(sd(MeasurementA, na.rm = TRUE), 2),       cv_measurement = round(sd_measurement / mean_measurement * 100, 1),       .groups = 'drop'     )      print(batch_summary)      cat(\"\\nQuality Control Guidelines:\\n\")   cat(\"- CV <10%: Excellent reproducibility\\n\")   cat(\"- CV 10-15%: Good reproducibility\\n\")    cat(\"- CV 15-20%: Acceptable reproducibility\\n\")   cat(\"- CV >20%: Poor reproducibility, investigate\\n\\n\") }  cat(\"QC Visualization Applications:\\n\") cat(\"- Monitor analytical performance over time\\n\") cat(\"- Detect systematic errors and drift\\n\") cat(\"- Validate new analytical methods\\n\") cat(\"- Support accreditation requirements\\n\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"statistical-considerations","dir":"Articles > Legacy","previous_headings":"Best Practices for Clinical Research","what":"Statistical Considerations","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"","code":"cat(\"Statistical Best Practices for Clinical Visualization\\n\") cat(\"====================================================\\n\\n\")  cat(\"1. Choose Appropriate Statistical Tests:\\n\") cat(\"   - Parametric: Normal distribution, continuous data\\n\") cat(\"   - Non-parametric: Skewed data, ordinal scales\\n\") cat(\"   - Robust: Outliers present, mixed distributions\\n\") cat(\"   - Bayesian: Small samples, prior information available\\n\\n\")  cat(\"2. Effect Size Reporting:\\n\") cat(\"   - Always report effect sizes alongside p-values\\n\") cat(\"   - Consider clinical significance, not just statistical significance\\n\") cat(\"   - Use confidence intervals for uncertainty quantification\\n\\n\")  cat(\"3. Multiple Comparisons:\\n\") cat(\"   - Adjust p-values when testing multiple hypotheses\\n\") cat(\"   - Pre-specify primary and secondary endpoints\\n\") cat(\"   - Consider false discovery rate control\\n\\n\")  cat(\"4. Sample Size Considerations:\\n\") cat(\"   - Ensure adequate power for primary analyses\\n\") cat(\"   - Be cautious with subgroup analyses (small n)\\n\") cat(\"   - Report confidence intervals to show precision\\n\\n\")  cat(\"5. Missing Data:\\n\") cat(\"   - Report patterns and extent of missing data\\n\") cat(\"   - Use appropriate missing data methods\\n\") cat(\"   - Conduct sensitivity analyses\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"publication-guidelines","dir":"Articles > Legacy","previous_headings":"Best Practices for Clinical Research","what":"Publication Guidelines","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"","code":"cat(\"Publication-Ready Visualization Guidelines\\n\") cat(\"==========================================\\n\\n\")  cat(\"1. Figure Quality:\\n\") cat(\"   - High resolution (≥300 DPI) for print\\n\") cat(\"   - Clear, readable fonts (≥10 point)\\n\") cat(\"   - Appropriate color schemes (colorblind-friendly)\\n\") cat(\"   - Consistent styling across figures\\n\\n\")  cat(\"2. Statistical Reporting:\\n\") cat(\"   - Include sample sizes in figure legends\\n\") cat(\"   - Report exact p-values when possible\\n\") cat(\"   - Specify statistical tests used\\n\") cat(\"   - Include effect sizes and confidence intervals\\n\\n\")  cat(\"3. Clinical Context:\\n\") cat(\"   - Provide clinical interpretation of findings\\n\") cat(\"   - Discuss clinical significance vs statistical significance\\n\") cat(\"   - Include relevant reference ranges or cutpoints\\n\") cat(\"   - Consider real-world application\\n\\n\")  cat(\"4. Reproducibility:\\n\") cat(\"   - Document software versions\\n\") cat(\"   - Provide clear methods description\\n\") cat(\"   - Share analysis code when possible\\n\") cat(\"   - Include raw data summaries\\n\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"conclusion","dir":"Articles > Legacy","previous_headings":"","what":"Conclusion","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"jjstatsplot provides comprehensive statistical visualization tools essential modern clinical research pathology studies. integration statistical testing publication-ready graphics makes complex data analysis accessible clinical researchers maintaining scientific rigor.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"key-advantages","dir":"Articles > Legacy","previous_headings":"Conclusion","what":"Key Advantages","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"Integrated Statistics: Automatic statistical testing visualization Clinical Focus: Designed healthcare research applications Publication Ready: High-quality graphics suitable journals User Friendly: Accessible jamovi interface Comprehensive: Covers major visualization needs","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/11-introduction-legacy.html","id":"next-steps","dir":"Articles > Legacy","previous_headings":"Conclusion","what":"Next Steps","title":"jjstatsplot: Statistical Visualization for Clinical Research","text":"explore specific visualization techniques: Categorical Analysis: See detailed categorical plot vignettes Continuous Data: Explore advanced continuous data visualization Correlation Studies: Learn comprehensive correlation analysis Clinical Applications: Study real-world clinical research examples introduction provides foundation using jjstatsplot clinical research. Explore detailed vignettes specific techniques advanced applications.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"complete-jjstatsplot-analysis-gallery","dir":"Articles > Legacy","previous_headings":"","what":"Complete jjstatsplot Analysis Gallery","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"comprehensive guide demonstrates every analysis type available jjstatsplot practical examples, use cases, statistical interpretations.","code":"library(jjstatsplot) library(dplyr)  # Load datasets data(mtcars) data(iris)  # Prepare example datasets mtcars_clean <- mtcars %>%   mutate(     cyl = factor(cyl, labels = c(\"4-cyl\", \"6-cyl\", \"8-cyl\")),     am = factor(am, labels = c(\"Automatic\", \"Manual\")),     vs = factor(vs, labels = c(\"V-shaped\", \"Straight\"))   )  iris_clean <- iris %>%   mutate(Species = factor(Species))"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"purpose","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Explore distribution continuous variables automatic normality testing descriptive statistics.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"when-to-use","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Examine variable distributions analysis Check normality assumptions Identify outliers skewness Compare distributions across groups","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"basic-usage","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Single variable distribution hist_basic <- jjhistostats(   data = mtcars_clean,   dep = \"mpg\",   grvar = NULL  # No grouping variable )  hist_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"advanced-multiple-variables","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Advanced: Multiple Variables","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Multiple variables hist_multi <- jjhistostats(   data = iris,   dep = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\"),   grvar = NULL  # No grouping variable )  hist_multi$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"grouped-analysis","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Grouped Analysis","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Separate histograms by group hist_grouped <- jjhistostats(   data = mtcars_clean,   dep = \"mpg\",   grvar = \"cyl\" )  hist_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"statistical-output","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Shapiro-Wilk normality test Descriptive statistics (mean, median, SD) Sample size information","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"interpretation-tips","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 1. Histogram Analysis - jjhistostats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Normal distribution: p > 0.05 normality test Skewness: Asymmetric distribution patterns Outliers: Points far main distribution","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"purpose-1","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Examine relationships two continuous variables correlation analysis regression fitting.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"when-to-use-1","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Explore bivariate relationships Test correlation hypotheses Visualize regression relationships Identify influential points","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"basic-usage-1","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Basic scatter plot with correlation scatter_basic <- jjscatterstats(   data = mtcars_clean,   dep = \"mpg\",   group = \"hp\",   grvar = NULL  # No grouping variable )  scatter_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"grouped-analysis-1","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"Grouped Analysis","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Separate scatter plots by group scatter_grouped <- jjscatterstats(   data = mtcars_clean,   dep = \"mpg\",   group = \"hp\",    grvar = \"cyl\" )  scatter_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"statistical-output-1","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Pearson/Spearman correlation coefficient Confidence intervals Regression equation R-squared value","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"interpretation-tips-1","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 2. Scatter Plots - jjscatterstats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Strong correlation: |r| > 0.7 Moderate correlation: 0.3 < |r| < 0.7 Weak correlation: |r| < 0.3 Linear relationship: Points follow straight line pattern","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"purpose-2","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Compare continuous variables across independent groups appropriate statistical tests.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"when-to-use-2","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Compare means/medians groups Test group differences Visualize data distribution group Assess homogeneity variance","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"basic-usage-2","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Compare groups between_basic <- jjbetweenstats(   data = iris_clean,   dep = \"Sepal.Length\",   group = \"Species\" )  between_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"multiple-dependent-variables","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"Multiple Dependent Variables","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Multiple variables comparison between_multi <- jjbetweenstats(   data = iris_clean,   dep = c(\"Sepal.Length\", \"Petal.Length\"),   group = \"Species\" )  between_multi$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"statistical-output-2","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"ANOVA Kruskal-Wallis test Post-hoc pairwise comparisons Effect size measures (eta-squared, Cohen’s d) Homogeneity variance tests","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"interpretation-tips-2","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 3. Box-Violin Plots (Between Groups) - jjbetweenstats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Significant difference: p < 0.05 Large effect: η² > 0.14 d > 0.8 Medium effect: η² > 0.06 d > 0.5 Small effect: η² > 0.01 d > 0.2","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"purpose-3","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Visualize correlations among multiple continuous variables simultaneously.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"when-to-use-3","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Explore multivariate relationships Identify redundant variables Screen variables analysis Data reduction decisions","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"basic-usage-3","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Correlation matrix corrmat_basic <- jjcorrmat(   data = mtcars,   dep = c(\"mpg\", \"hp\", \"wt\", \"qsec\", \"disp\"),   grvar = NULL  # No grouping variable )  corrmat_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"grouped-analysis-2","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"Grouped Analysis","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Separate correlation matrices by group corrmat_grouped <- jjcorrmat(   data = iris,   dep = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\"),   grvar = \"Species\" )  corrmat_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"statistical-output-3","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Correlation coefficients matrix Significance testing correlation Confidence intervals","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"interpretation-tips-3","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 4. Correlation Matrix - jjcorrmat()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"High correlation: |r| > 0.8 (consider multicollinearity) Pattern recognition: Look clusters correlated variables Significance: Starred values indicate p < 0.05","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"purpose-4","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Display group means confidence intervals statistical comparisons.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"when-to-use-4","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Present group means clearly Show uncertainty (confidence intervals) Compare multiple groups Publication-ready group comparisons","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"basic-usage-4","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Dot chart with group means dot_basic <- jjdotplotstats(   data = mtcars_clean,   dep = \"mpg\",   group = \"cyl\",   grvar = NULL  # No grouping variable )  dot_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"multiple-variables","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"Multiple Variables","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Multiple dependent variables dot_multi <- jjdotplotstats(   data = iris_clean,   dep = c(\"Sepal.Length\"),   group = \"Species\",   grvar = NULL  # No grouping variable )  dot_multi$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"statistical-output-4","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Group means standard errors Confidence intervals Statistical test results Effect sizes","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"interpretation-tips-4","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 5. Dot Charts - jjdotplotstats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Non-overlapping CIs: Likely significant difference Large separation: Meaningful group differences Consistent patterns: Across multiple variables","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"purpose-5","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Analyze categorical variables associations frequency tests.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"when-to-use-5","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Display frequency distributions Test independence categorical variables Visualize contingency tables Report categorical data summaries","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"basic-usage-5","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Frequency bar chart bar_basic <- jjbarstats(   data = mtcars_clean,   dep = \"cyl\",   group = NULL,  # No grouping variable   grvar = NULL  # No grouping variable )  bar_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"two-way-analysis","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"Two-Way Analysis","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Two categorical variables bar_twoway <- jjbarstats(   data = mtcars_clean,   dep = \"cyl\",   group = \"am\",   grvar = NULL  # No additional grouping variable )  bar_twoway$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"statistical-output-5","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Chi-square test independence Cramér’s V (effect size) Expected vs observed frequencies Standardized residuals","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"interpretation-tips-5","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 6. Bar Charts - jjbarstats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Significant association: p < 0.05 chi-square test Strong association: Cramér’s V > 0.5 Moderate association: Cramér’s V > 0.3 Weak association: Cramér’s V > 0.1","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"purpose-6","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Display proportional data statistical testing categorical variables.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"when-to-use-6","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Show proportions categories Test goodness--fit Display survey results Present percentage distributions","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"basic-usage-6","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Basic pie chart pie_basic <- jjpiestats(   data = mtcars_clean,   dep = \"cyl\",   group = NULL,  # No grouping variable   grvar = NULL  # No grouping variable )  pie_basic$plot1"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"grouped-analysis-3","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"Grouped Analysis","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Separate pie charts by group pie_grouped <- jjpiestats(   data = mtcars_clean,   dep = \"cyl\",   group = NULL,  # No grouping variable   grvar = \"am\" )  pie_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"statistical-output-6","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Goodness--fit tests Frequency percentage tables Chi-square statistics","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"interpretation-tips-6","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 7. Pie Charts - jjpiestats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Equal proportions: Uniform distribution Dominant category: One slice much larger Balanced distribution: Similar slice sizes","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"purpose-7","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 8. Within-Subjects Analysis - jjwithinstats()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Compare repeated measures matched observations appropriate paired tests.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"when-to-use-7","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 8. Within-Subjects Analysis - jjwithinstats()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Pre-post comparisons Repeated measures designs Matched pairs analysis Longitudinal data","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"example-with-paired-data","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 8. Within-Subjects Analysis - jjwithinstats()","what":"Example with Paired Data","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Create example paired data paired_data <- data.frame(   Subject = rep(1:20, 2),   Time = rep(c(\"Pre\", \"Post\"), each = 20),   Score = c(rnorm(20, 50, 10), rnorm(20, 55, 10)),   Group = rep(c(\"Treatment\", \"Control\"), 20) )  # Reshape for within-subjects analysis paired_wide <- paired_data %>%   tidyr::pivot_wider(names_from = Time, values_from = Score)  within_basic <- jjwithinstats(   data = paired_wide,   dep1 = \"Pre\",   dep2 = \"Post\",   dep3 = NULL,  # No third dependent variable   dep4 = NULL,  # No fourth dependent variable   )  within_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"statistical-output-7","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 8. Within-Subjects Analysis - jjwithinstats()","what":"Statistical Output","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Paired t-test Wilcoxon signed-rank test Effect size (Cohen’s d paired data) Confidence intervals differences","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"interpretation-tips-7","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 8. Within-Subjects Analysis - jjwithinstats()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Significant change: p < 0.05 Practical significance: Consider effect size magnitude Direction change: Positive vs negative differences","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"purpose-8","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 9. Waffle Charts - jwaffle()","what":"Purpose","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Display proportional data using grid squares intuitive visualization.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"when-to-use-8","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 9. Waffle Charts - jwaffle()","what":"When to Use","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Show parts whole Display survey results Present demographic breakdowns Alternative pie charts","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"basic-usage-7","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 9. Waffle Charts - jwaffle()","what":"Basic Usage","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Waffle chart waffle_basic <- jwaffle(   data = mtcars_clean,   counts = \"hp\",   groups = \"cyl\",   facet = \"am\" )  waffle_basic$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"interpretation-tips-8","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > 9. Waffle Charts - jwaffle()","what":"Interpretation Tips","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Visual proportion: square represents equal units Easy comparison: Squares easier compare pie slices Pattern recognition: Spatial arrangement shows patterns","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"decision-tree","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > Choosing the Right Analysis","what":"Decision Tree","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"","code":"# Pseudocode decision tree if (data_type == \"one_continuous\") {   use_jjhistostats() } else if (data_type == \"two_continuous\") {   use_jjscatterstats() # or jjcorrmat() for multiple variables } else if (data_type == \"continuous_by_groups\") {   if (groups_independent) {     use_jjbetweenstats()   } else {     use_jjwithinstats()   } } else if (data_type == \"categorical\") {   if (display_preference == \"bars\") {     use_jjbarstats()   } else if (display_preference == \"pie\") {     use_jjpiestats()   } else if (display_preference == \"waffle\") {     use_waffle()   } } else if (data_type == \"group_means\") {   use_jjdotplotstats() }"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"statistical-considerations","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > Best Practices Summary","what":"Statistical Considerations","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Check assumptions interpreting results Report effect sizes alongside p-values Consider multiple comparisons many tests Validate findings appropriate diagnostics","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"visualization-guidelines","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > Best Practices Summary","what":"Visualization Guidelines","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Choose appropriate plot data type Use consistent color schemes across related plots Include informative titles labels Consider audience selecting plot complexity","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/18-analysis-gallery-legacy.html","id":"workflow-recommendations","dir":"Articles > Legacy","previous_headings":"Complete jjstatsplot Analysis Gallery > Best Practices Summary","what":"Workflow Recommendations","title":"Complete Analysis Gallery - All jjstatsplot Functions","text":"Start exploratory plots (histograms, scatter plots) Progress confirmatory analyses (-groups, correlations) Use grouped analyses explore interactions Combine multiple approaches comprehensive understanding gallery provides complete reference jjstatsplot analyses. function offers extensive customization options - explore jamovi interface function documentation additional parameters settings.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"getting-started-with-jjstatsplot-in-jamovi","dir":"Articles > Legacy","previous_headings":"","what":"Getting Started with jjstatsplot in jamovi","title":"Complete jamovi User Guide for jjstatsplot","text":"guide walks using jjstatsplot module jamovi create publication-ready statistical visualizations automatic statistical testing.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"installing-jjstatsplot-in-jamovi","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Installation","what":"Installing jjstatsplot in jamovi","title":"Complete jamovi User Guide for jjstatsplot","text":"Open jamovi Access Modules: Click “Modules” button (⊞) top menu Open jamovi library: Select “jamovi library” dropdown Search: Type “jjstatsplot” search box Install: Click “Install” button next jjstatsplot Restart: Close reopen jamovi activate module","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"verification","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Installation","what":"Verification","title":"Complete jamovi User Guide for jjstatsplot","text":"installation, see “JJStatsPlot” main menu bar submenus different analysis types.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"menu-organization","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Understanding the Interface","what":"Menu Organization","title":"Complete jamovi User Guide for jjstatsplot","text":"jjstatsplot analyses organized data type: Continuous: Histogram Continuous vs Continuous: Scatter Plot, Correlation Matrix Categorical vs Continuous: Box-Violin Plots, Dot Charts Categorical vs Categorical: Bar Charts, Pie Charts Distribution: Waffle Charts","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"common-interface-elements","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Understanding the Interface","what":"Common Interface Elements","title":"Complete jamovi User Guide for jjstatsplot","text":"jjstatsplot analyses share similar interface components:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"variables-panel","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Understanding the Interface > Common Interface Elements","what":"Variables Panel","title":"Complete jamovi User Guide for jjstatsplot","text":"Dependent Variable(s): main variable(s) want analyze Grouping Variable: Optional variable split analysis groups Grouping Variable Plots: Creates separate plots group level","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"options-panel","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Understanding the Interface > Common Interface Elements","what":"Options Panel","title":"Complete jamovi User Guide for jjstatsplot","text":"Statistical Options: Choose test types, confidence levels Plot Options: Customize appearance, themes, colors Advanced Options: Fine-tune statistical parameters","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"variable-types","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Data Types and Requirements","what":"Variable Types","title":"Complete jamovi User Guide for jjstatsplot","text":"jjstatsplot automatically detects variable types, understanding helps: Continuous: Numeric variables (age, height, score) Nominal: Categories without order (gender, color, treatment) Ordinal: Categories order (education level, satisfaction rating)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"data-format-requirements","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Data Types and Requirements","what":"Data Format Requirements","title":"Complete jamovi User Guide for jjstatsplot","text":"Long format: row represents one observation Complete cases: Missing values handled automatically Appropriate sample sizes: Minimum recommendations vary analysis","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"histogram-analysis","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Analysis Walkthrough","what":"1. Histogram Analysis","title":"Complete jamovi User Guide for jjstatsplot","text":"Use case: Explore distribution continuous variable Steps: 1. Navigate JJStatsPlot → Continuous → Histogram 2. Move continuous variable Dependent Variable 3. Optional: Add Grouping Variable separate histograms 4. Customize Options: - Statistical: Choose normality test type - Plot: Adjust bins, colors, theme - Labels: Add title, axis labels Example Output: - Histogram density curve - Normality test results - Descriptive statistics overlay","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"scatter-plot-analysis","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Analysis Walkthrough","what":"2. Scatter Plot Analysis","title":"Complete jamovi User Guide for jjstatsplot","text":"Use case: Examine relationship two continuous variables Steps: 1. Go JJStatsPlot → Continuous vs Continuous → Scatter Plot 2. Set Dependent Variable (Y-axis) 3. Set Grouping Variable (X-axis) 4. Optional: Add Grouping Variable Plots separate panels 5. Configure Options: - Statistical: Correlation test, regression line - Plot: Point style, smoothing method - Marginal plots: Add distribution plots margins Example Output: - Scatter plot regression line - Correlation coefficient significance - Confidence intervals - Marginal distribution plots (optional)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"box-violin-plots-between-groups","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Analysis Walkthrough","what":"3. Box-Violin Plots (Between Groups)","title":"Complete jamovi User Guide for jjstatsplot","text":"Use case: Compare continuous variable across different groups Steps: 1. Select JJStatsPlot → Categorical vs Continuous → Box-Violin Plots (Groups) 2. Add continuous variable Dependent Variable 3. Add grouping variable Grouping Variable 4. Adjust Options: - Statistical: Choose comparison test (t-test, ANOVA, non-parametric) - Plot: Combine box violin plots - Pairwise: Enable post-hoc comparisons Example Output: - Combined box violin plots - Statistical test results - Effect size measures - Pairwise comparison results","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"correlation-matrix","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Analysis Walkthrough","what":"4. Correlation Matrix","title":"Complete jamovi User Guide for jjstatsplot","text":"Use case: Explore relationships among multiple continuous variables Steps: 1. Navigate JJStatsPlot → Continuous vs Continuous → Correlation Matrix 2. Select multiple variables Dependent Variables 3. Optional: Add Grouping Variable Plots 4. Customize Options: - Statistical: Correlation method (Pearson, Spearman) - Plot: Color scheme, significance marking - Matrix type: Full, upper, lower triangle Example Output: - Color-coded correlation matrix - Significance indicators - Correlation coefficients","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"bar-charts","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Analysis Walkthrough","what":"5. Bar Charts","title":"Complete jamovi User Guide for jjstatsplot","text":"Use case: Visualize frequency proportions categorical variables Steps: 1. Go JJStatsPlot → Categorical vs Categorical → Bar Charts 2. Set Dependent Variable (categories count) 3. Optional: Set Grouping Variable grouped bars 4. Configure Options: - Statistical: Chi-square test, effect size - Plot: Bar orientation, colors - Labels: Show counts, percentages Example Output: - Bar chart counts/proportions - Chi-square test results - Effect size (Cramér’s V)","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"grouped-analysis","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Advanced Features","what":"Grouped Analysis","title":"Complete jamovi User Guide for jjstatsplot","text":"analyses support grouped analysis: Multiple Dependent Variables: Creates subplot variable Grouping Variable Plots: Creates separate plot group level Combination: Multiple variables × multiple groups = grid plots","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"theme-options","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Advanced Features","what":"Theme Options","title":"Complete jamovi User Guide for jjstatsplot","text":"Choose : - jamovi theme: Clean, publication-ready appearance - ggstatsplot theme: Rich statistical annotations colors","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"export-options","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Advanced Features","what":"Export Options","title":"Complete jamovi User Guide for jjstatsplot","text":"Copy Plot: Right-click plot → Copy Save: File → Export → choose format (PNG, PDF, SVG) Results: Copy statistical output results panel","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"no-data-to-plot-error","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Troubleshooting Common Issues","what":"“No data to plot” Error","title":"Complete jamovi User Guide for jjstatsplot","text":"Check: Ensure variables selected correctly Missing data: Variables missing values can’t plotted Variable type: Ensure variable types match analysis requirements","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"statistical-test-failures","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Troubleshooting Common Issues","what":"Statistical Test Failures","title":"Complete jamovi User Guide for jjstatsplot","text":"Sample size: tests require minimum sample sizes Assumptions: Check data meets test assumptions Alternative tests: Try non-parametric alternatives","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"plot-display-issues","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Troubleshooting Common Issues","what":"Plot Display Issues","title":"Complete jamovi User Guide for jjstatsplot","text":"Refresh: Try refreshing analysis Simplify: Remove grouping variables temporarily Update: Ensure jamovi module date","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"variable-selection","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Tips for Better Visualizations","what":"1. Variable Selection","title":"Complete jamovi User Guide for jjstatsplot","text":"Meaningful groupings: Choose grouping variables 2-8 levels Sufficient data: Ensure adequate observations per group Relevant comparisons: Select variables make theoretical sense","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"customization","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Tips for Better Visualizations","what":"2. Customization","title":"Complete jamovi User Guide for jjstatsplot","text":"Titles: Add descriptive titles axis labels Colors: Use color schemes appropriate audience Theme: Choose theme based publication requirements","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"statistical-interpretation","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Tips for Better Visualizations","what":"3. Statistical Interpretation","title":"Complete jamovi User Guide for jjstatsplot","text":"Effect sizes: Always interpret alongside p-values Assumptions: Check report assumption violations Multiple comparisons: Consider correction many tests","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"research-question-does-engine-type-affect-fuel-efficiency","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Example Workflow","what":"Research Question: “Does engine type affect fuel efficiency?”","title":"Complete jamovi User Guide for jjstatsplot","text":"Data: Load dataset mpg (continuous) vs (engine type, categorical) Exploratory Analysis: Histogram: Examine mpg distribution Box-Violin Plot: Compare mpg vs groups Detailed Analysis: Use Box-Violin Plots (Groups) Set mpg Dependent Variable Set vs Grouping Variable Enable statistical tests effect sizes Interpretation: Examine group differences plots Report statistical test results Include effect size measures","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"statistical-reporting","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Best Practices","what":"Statistical Reporting","title":"Complete jamovi User Guide for jjstatsplot","text":"Always report effect sizes alongside p-values Check report assumption violations Use appropriate tests data type distribution","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"visualization-guidelines","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Best Practices","what":"Visualization Guidelines","title":"Complete jamovi User Guide for jjstatsplot","text":"Keep plots simple interpretable Use consistent color schemes across related analyses Include appropriate titles labels Consider audience (academic, clinical, general public)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"reproducibility","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Best Practices","what":"Reproducibility","title":"Complete jamovi User Guide for jjstatsplot","text":"Document analysis choices Save jamovi files descriptive names Export high-quality images publications","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"resources","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Getting Help","what":"Resources","title":"Complete jamovi User Guide for jjstatsplot","text":"ggstatsplot documentation: indrajeetpatil.github.io/ggstatsplot jamovi community: forum.jamovi.org GitHub issues: github.com/sbalci/ClinicoPathJamoviModule/issues","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/24-jamovi-user-guide-legacy.html","id":"support","dir":"Articles > Legacy","previous_headings":"Getting Started with jjstatsplot in jamovi > Getting Help","what":"Support","title":"Complete jamovi User Guide for jjstatsplot","text":"Check jamovi forum similar questions Report bugs via GitHub issues Include sample data screenshots asking help guide provides foundation using jjstatsplot effectively jamovi. analysis type offers extensive customization options - experiment different settings find works best research needs.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"jjstatsplot-quick-reference","dir":"Articles > Legacy","previous_headings":"","what":"jjstatsplot Quick Reference","title":"Quick Reference Guide for jjstatsplot","text":"quick reference provides essential information using jjstatsplot efficiently jamovi R.","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"jamovi-workflow","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Quick Start Templates","what":"jamovi Workflow","title":"Quick Reference Guide for jjstatsplot","text":"","code":"1. Data → Open file 2. JJStatsPlot → [Category] → [Analysis] 3. Drag variables to appropriate boxes 4. Adjust options as needed 5. Export → Copy/Save plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"r-workflow","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Quick Start Templates","what":"R Workflow","title":"Quick Reference Guide for jjstatsplot","text":"","code":"library(jjstatsplot)  # Basic pattern result <- jj[function](data = your_data, dep = \"variable\") result$plot  # Main plot  # With grouping result <- jj[function](data = your_data, dep = \"variable\", grvar = \"group\") result$plot2  # Grouped plots"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"data-preparation","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Essential R Code Snippets","what":"Data Preparation","title":"Quick Reference Guide for jjstatsplot","text":"","code":"# Load and check data library(jjstatsplot) data(mtcars) str(mtcars)  # Convert to factors mtcars$cyl <- factor(mtcars$cyl) mtcars$am <- factor(mtcars$am, labels = c(\"Auto\", \"Manual\"))  # Check missing data summary(mtcars)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"single-variable-analysis","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Essential R Code Snippets","what":"Single Variable Analysis","title":"Quick Reference Guide for jjstatsplot","text":"","code":"# Histogram hist_result <- jjhistostats(data = mtcars, dep = \"mpg\") hist_result$plot  # Multiple variables multi_hist <- jjhistostats(data = mtcars, dep = c(\"mpg\", \"hp\", \"wt\")) multi_hist$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"bivariate-analysis","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Essential R Code Snippets","what":"Bivariate Analysis","title":"Quick Reference Guide for jjstatsplot","text":"","code":"# Scatter plot scatter_result <- jjscatterstats(data = mtcars, dep = \"mpg\", group = \"hp\") scatter_result$plot  # Correlation matrix corr_result <- jjcorrmat(data = mtcars, dep = c(\"mpg\", \"hp\", \"wt\")) corr_result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"group-comparisons","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Essential R Code Snippets","what":"Group Comparisons","title":"Quick Reference Guide for jjstatsplot","text":"","code":"# Between groups between_result <- jjbetweenstats(data = mtcars, dep = \"mpg\", group = \"cyl\") between_result$plot  # Dot chart dot_result <- jjdotplotstats(data = mtcars, dep = \"mpg\", group = \"cyl\") dot_result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"categorical-analysis","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Essential R Code Snippets","what":"Categorical Analysis","title":"Quick Reference Guide for jjstatsplot","text":"","code":"# Bar chart bar_result <- jjbarstats(data = mtcars, dep = \"cyl\", group = \"am\") bar_result$plot  # Pie chart pie_result <- jjpiestats(data = mtcars, dep = \"cyl\") pie_result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"grouped-analysis","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Essential R Code Snippets","what":"Grouped Analysis","title":"Quick Reference Guide for jjstatsplot","text":"","code":"# Any function with grvar parameter grouped_result <- jjhistostats(   data = mtcars,    dep = \"mpg\",    grvar = \"cyl\" ) grouped_result$plot2  # Note: plot2 for grouped plots"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"jamovi-interface-elements","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Common Options and Customizations","what":"jamovi Interface Elements","title":"Quick Reference Guide for jjstatsplot","text":"Dependent Variable(s): Main variables analyze Grouping Variable: Split data categories Grouping Variable Plots: Create separate plots Statistical Options: Test types, confidence levels Plot Options: Themes, colors, labels","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"r-function-parameters","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Common Options and Customizations","what":"R Function Parameters","title":"Quick Reference Guide for jjstatsplot","text":"","code":"# Common parameters across functions jj[function](   data = your_data,           # Data frame   dep = \"variable\",           # Dependent variable(s)   group = \"grouping_var\",     # Grouping variable   grvar = \"plot_grouping\",    # Separate plots by group   # Function-specific options vary )"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"before-analysis","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Troubleshooting Checklist","what":"Before Analysis","title":"Quick Reference Guide for jjstatsplot","text":"Check variable types (str(data)) Verify sufficient sample sizes (table(group_var)) Handle missing values (summary(data)) Ensure appropriate data format","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"common-errors","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Troubleshooting Checklist","what":"Common Errors","title":"Quick Reference Guide for jjstatsplot","text":"“data plot”: Check variable selection missing values “Object found”: Verify variable names (case-sensitive) Blank plots: Use result$plot2 grouped analyses Statistical test failures: Check assumptions sample sizes","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"performance-issues","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Troubleshooting Checklist","what":"Performance Issues","title":"Quick Reference Guide for jjstatsplot","text":"Large datasets: Sample subset data Complex grouping: Reduce number groups Memory problems: Clean workspace rm() gc()","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"jamovi-export","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Export and Reporting","what":"jamovi Export","title":"Quick Reference Guide for jjstatsplot","text":"","code":"Right-click plot → Copy File → Export → [Format] Results panel → Copy statistical output"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"r-export","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Export and Reporting","what":"R Export","title":"Quick Reference Guide for jjstatsplot","text":"","code":"# Save plot result <- jjhistostats(data = mtcars, dep = \"mpg\") ggsave(\"histogram.png\", result$plot, width = 8, height = 6, dpi = 300)  # Extract for further modification my_plot <- result$plot +    ggplot2::labs(title = \"Custom Title\") +   ggplot2::theme_minimal()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"statistical-reporting-template","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference","what":"Statistical Reporting Template","title":"Quick Reference Guide for jjstatsplot","text":"reporting results, include: Sample size: n = X Test type: “Welch’s ANOVA conducted…” Test statistic: F(df1, df2) = X.XX p-value: p < .001 exact value Effect size: η² = .XX Cohen’s d = X.XX Confidence intervals: 95% CI [X.XX, X.XX] Example: “Welch’s ANOVA revealed significant difference fuel efficiency across cylinder groups, F(2, 18.03) = 39.70, p < .001, η² = .70, suggesting large effect.”","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"documentation-links","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference","what":"Documentation Links","title":"Quick Reference Guide for jjstatsplot","text":"Complete jamovi Guide: vignette(\"jamovi-user-guide\", package = \"jjstatsplot\") R Programming Guide: vignette(\"r-programming-guide\", package = \"jjstatsplot\") Analysis Gallery: vignette(\"analysis-gallery\", package = \"jjstatsplot\") Troubleshooting: vignette(\"troubleshooting-faq\", package = \"jjstatsplot\") ggstatsplot Documentation: indrajeetpatil.github.io/ggstatsplot","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"quick-checks","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Getting Help","what":"Quick Checks","title":"Quick Reference Guide for jjstatsplot","text":"Try built-data (e.g., mtcars, iris) Simplify analysis (remove grouping variables) Check recent updates Restart jamovi/R session","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/29-quick-reference-legacy.html","id":"report-issues","dir":"Articles > Legacy","previous_headings":"jjstatsplot Quick Reference > Getting Help","what":"Report Issues","title":"Quick Reference Guide for jjstatsplot","text":"Include data example, error message, steps GitHub: sbalci/ClinicoPathJamoviModule/issues Email: serdarbalci@serdarbalci.com quick reference covers essentials efficient jjstatsplot usage. detailed examples advanced usage, consult comprehensive vignettes listed .","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"using-jjstatsplot-functions-in-r","dir":"Articles > Legacy","previous_headings":"","what":"Using jjstatsplot Functions in R","title":"R Programming Guide for jjstatsplot","text":"guide demonstrates use jjstatsplot functions directly R programmatic statistical visualization. functions designed jamovi integration, can powerful tools R workflows.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"installation-and-setup","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R","what":"Installation and Setup","title":"R Programming Guide for jjstatsplot","text":"","code":"# Install from GitHub if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"sbalci/jjstatsplot\")  # Install dependencies if needed install.packages(c(\"ggplot2\", \"ggstatsplot\", \"dplyr\", \"jmvcore\")) library(jjstatsplot) library(ggplot2) library(dplyr)  # Load example data data(mtcars) data(iris)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"return-objects","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Understanding jjstatsplot Function Structure","what":"Return Objects","title":"R Programming Guide for jjstatsplot","text":"jjstatsplot functions return jamovi results objects : - $plot - main ggplot2 object - $plot2 - Secondary plot (grouping variables used) - Statistical results metadata","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"basic-pattern","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Understanding jjstatsplot Function Structure","what":"Basic Pattern","title":"R Programming Guide for jjstatsplot","text":"","code":"# General function signature result <- jj[function_name](   data = your_data,   dep = dependent_variable(s),   group = grouping_variable,   grvar = grouping_for_separate_plots,   # Additional options... )  # Extract the plot plot <- result$plot print(plot)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"histogram-analysis---jjhistostats","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"1. Histogram Analysis - jjhistostats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Basic histogram hist_result <- jjhistostats(   data = mtcars,   dep = \"mpg\",   grvar = NULL )  # Extract and display plot hist_result$plot # Histogram with grouping hist_grouped <- jjhistostats(   data = mtcars,   dep = \"mpg\",   grvar = \"cyl\" )  # Multiple plots created hist_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"scatter-plots---jjscatterstats","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"2. Scatter Plots - jjscatterstats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Basic scatter plot scatter_result <- jjscatterstats(   data = mtcars,   dep = \"mpg\",   group = \"hp\",   grvar = NULL )  scatter_result$plot # Scatter plot with grouping variable scatter_grouped <- jjscatterstats(   data = mtcars,   dep = \"mpg\",    group = \"hp\",   grvar = \"cyl\" )  scatter_grouped$plot2"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"box-violin-plots---jjbetweenstats","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"3. Box-Violin Plots - jjbetweenstats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Between-groups comparison between_result <- jjbetweenstats(   data = iris,   dep = \"Sepal.Length\",   group = \"Species\",   grvar = NULL )  between_result$plot # Multiple dependent variables between_multi <- jjbetweenstats(   data = iris,   dep = c(\"Sepal.Length\", \"Petal.Length\"),   group = \"Species\",   grvar = NULL )  between_multi$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"correlation-matrix---jjcorrmat","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"4. Correlation Matrix - jjcorrmat()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Correlation matrix corr_result <- jjcorrmat(   data = mtcars,   dep = c(\"mpg\", \"hp\", \"wt\", \"qsec\"),   grvar = NULL )  corr_result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"dot-plots---jjdotplotstats","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"5. Dot Plots - jjdotplotstats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Dot plot for group comparisons dot_result <- jjdotplotstats(   data = mtcars,   dep = \"mpg\",   group = \"cyl\",   grvar = NULL )  dot_result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"bar-charts---jjbarstats","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"6. Bar Charts - jjbarstats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Bar chart for categorical data bar_result <- jjbarstats(   data = mtcars,   dep = \"cyl\",   group = \"am\",   grvar = NULL )  bar_result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"pie-charts---jjpiestats","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"7. Pie Charts - jjpiestats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# Pie chart pie_result <- jjpiestats(   data = mtcars,   dep = \"cyl\",   group = NULL,   grvar = NULL )  # Check structure and try different plot access # pie_result$plot str(pie_result) # Try alternative plot access if needed"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"within-subjects-analysis---jjwithinstats","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Function-by-Function Guide","what":"8. Within-Subjects Analysis - jjwithinstats()","title":"R Programming Guide for jjstatsplot","text":"","code":"# For repeated measures data # Note: This requires appropriate data structure # Creating example with iris data (not true repeated measures) within_result <- jjwithinstats(   data = iris,   dep1 = \"Sepal.Length\",   dep2 = \"Sepal.Width\",   dep3 = \"Petal.Length\",   dep4 = \"Petal.Width\" )  within_result$plot"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"working-with-multiple-variables","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Advanced Usage Patterns","what":"Working with Multiple Variables","title":"R Programming Guide for jjstatsplot","text":"","code":"# Analyze multiple dependent variables simultaneously multi_hist <- jjhistostats(   data = iris,   dep = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\"),   grvar = NULL )  # This creates a combined plot multi_hist$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"combining-with-dplyr-workflows","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Advanced Usage Patterns","what":"Combining with dplyr Workflows","title":"R Programming Guide for jjstatsplot","text":"","code":"# Preprocessing with dplyr, then plotting mtcars_processed <- mtcars %>%   mutate(     cyl_factor = factor(cyl, labels = c(\"4-cyl\", \"6-cyl\", \"8-cyl\")),     am_factor = factor(am, labels = c(\"Automatic\", \"Manual\"))   ) %>%   filter(hp > 100)  # Use processed data result <- jjbetweenstats(   data = mtcars_processed,   dep = \"mpg\",   group = \"cyl_factor\",   grvar = NULL )  result$plot"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"extracting-statistical-information","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Advanced Usage Patterns","what":"Extracting Statistical Information","title":"R Programming Guide for jjstatsplot","text":"","code":"# jjstatsplot functions return rich statistical information corr_analysis <- jjcorrmat(   data = mtcars[, c(\"mpg\", \"hp\", \"wt\")],   dep = c(\"mpg\", \"hp\", \"wt\"),   grvar = NULL )  # The plot contains statistical annotations print(corr_analysis$plot)  # Access underlying data if needed (structure varies by function) str(corr_analysis, max.level = 2)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"plot-modifications","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Customization and Theming","what":"Plot Modifications","title":"R Programming Guide for jjstatsplot","text":"","code":"# Basic scatter plot scatter_result <- jjscatterstats(   data = mtcars,   dep = \"mpg\",   group = \"hp\",   grvar = NULL )  # Display the plot scatter_result$plot  # Note: For plot customization, extract the ggplot object first # then use standard ggplot2 syntax for modifications"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"chunk-options-for-optimal-display","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Integration with R Markdown","what":"Chunk Options for Optimal Display","title":"R Programming Guide for jjstatsplot","text":"","code":"# Recommended chunk options for jjstatsplot in R Markdown:  # ```{r plot-name, fig.width=8, fig.height=6, dpi=300} # result <- jjhistostats(data = mydata, dep = \"variable\") # result$plot # ```"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"creating-function-wrappers","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Integration with R Markdown","what":"Creating Function Wrappers","title":"R Programming Guide for jjstatsplot","text":"","code":"# Create convenience wrappers for common analyses quick_histogram <- function(data, variable, group_by = NULL) {   result <- jjhistostats(     data = data,     dep = variable,     grvar = group_by   )      if (is.null(group_by)) {     return(result$plot)   } else {     return(result$plot2)   } }  # Usage example # quick_histogram(mtcars, \"mpg\", \"cyl\") print(\"Function wrapper created successfully\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"batch-analysis-functions","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Integration with R Markdown","what":"Batch Analysis Functions","title":"R Programming Guide for jjstatsplot","text":"","code":"# Function to create multiple plots analyze_variables <- function(data, variables, group_var = NULL) {   plots <- list()      for (var in variables) {     result <- jjhistostats(       data = data,       dep = var,       grvar = group_var     )          plots[[var]] <- if (is.null(group_var)) result$plot else result$plot2   }      return(plots) }  # Create multiple histograms numeric_vars <- c(\"mpg\", \"hp\", \"wt\") # plot_list <- analyze_variables(mtcars, numeric_vars, \"cyl\")  # Display first plot # print(plot_list$mpg) print(\"Batch analysis function created successfully\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"common-issues-and-solutions","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Error Handling and Debugging","what":"Common Issues and Solutions","title":"R Programming Guide for jjstatsplot","text":"","code":"# Safe function wrapper with error handling safe_jjhistostats <- function(data, dep, ...) {   tryCatch({     result <- jjhistostats(data = data, dep = dep, ...)     return(result$plot)   }, error = function(e) {     message(\"Error creating histogram: \", e$message)     return(NULL)   }) }  # Usage with potential problematic data plot_result <- safe_jjhistostats(mtcars, \"nonexistent_variable\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"data-validation","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Error Handling and Debugging","what":"Data Validation","title":"R Programming Guide for jjstatsplot","text":"","code":"# Function to check data before analysis validate_data <- function(data, variables) {   issues <- list()      # Check if variables exist   missing_vars <- variables[!variables %in% names(data)]   if (length(missing_vars) > 0) {     issues$missing_variables <- missing_vars   }      # Check for sufficient data   for (var in variables) {     if (var %in% names(data)) {       non_missing <- sum(!is.na(data[[var]]))       if (non_missing < 10) {         issues$insufficient_data <- c(issues$insufficient_data, var)       }     }   }      return(issues) }  # Example usage issues <- validate_data(mtcars, c(\"mpg\", \"hp\", \"nonexistent\")) print(issues)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"large-datasets","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Performance Considerations","what":"Large Datasets","title":"R Programming Guide for jjstatsplot","text":"","code":"# For large datasets, consider sampling large_data_plot <- function(data, dep, sample_size = 1000) {   if (nrow(data) > sample_size) {     sampled_data <- data[sample(nrow(data), sample_size), ]     message(\"Sampling \", sample_size, \" rows from \", nrow(data), \" total rows\")     data <- sampled_data   }      jjhistostats(data = data, dep = dep, grvar = NULL)$plot }"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"function-usage","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Best Practices Summary","what":"1. Function Usage","title":"R Programming Guide for jjstatsplot","text":"Always check return structure: $plot vs $plot2 Handle missing data appropriately Validate variable names analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"data-preparation","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Best Practices Summary","what":"2. Data Preparation","title":"R Programming Guide for jjstatsplot","text":"Use meaningful variable names factor labels Ensure appropriate data types (numeric, factor) Consider data transformations needed","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"workflow-integration","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Best Practices Summary","what":"3. Workflow Integration","title":"R Programming Guide for jjstatsplot","text":"Combine dplyr data preprocessing Create wrapper functions repeated analyses Use error handling robust scripts","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"output-management","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Best Practices Summary","what":"4. Output Management","title":"R Programming Guide for jjstatsplot","text":"Extract plots result$plot Modify plots using standard ggplot2 syntax Save plots appropriate dimensions resolution","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/30-r-programming-guide-legacy.html","id":"documentation","dir":"Articles > Legacy","previous_headings":"Using jjstatsplot Functions in R > Best Practices Summary","what":"5. Documentation","title":"R Programming Guide for jjstatsplot","text":"Document analysis choices Include variable descriptions Report statistical assumptions violations guide provides foundation using jjstatsplot functions programmatically R. functions offer convenient way create publication-ready statistical visualizations minimal code maintaining access underlying ggplot2 objects customization.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"troubleshooting-guide-and-faq","dir":"Articles > Legacy","previous_headings":"","what":"Troubleshooting Guide and FAQ","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"comprehensive guide addresses common issues, error messages, frequently asked questions using jjstatsplot jamovi R.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-jjstatsplot-doesnt-appear-in-jamovis-module-list","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Installation Issues","what":"Q: jjstatsplot doesn’t appear in jamovi’s module list","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Solutions: 1. Check jamovi version: Requires jamovi ≥ 1.2.19 Help → jamovi (check version number) Close jamovi completely Restart jamovi Try searching jamovi library Download .jmo file GitHub releases jamovi → Modules → Install file Internet connection: Ensure stable internet library access","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-module-failed-to-install-error","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Installation Issues","what":"Q: “Module failed to install” error","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Solutions: 1. Clear module cache: - Close jamovi - Delete jamovi modules folder (varies OS) - Restart jamovi reinstall Permission issues: Run jamovi administrator (Windows) check write permissions Dependency conflicts: Uninstall conflicting modules temporarily","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-r-installation-fails-with-dependency-errors","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Installation Issues","what":"Q: R installation fails with dependency errors","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"","code":"# Common dependency installation issues:  # Issue: Package compilation fails # Solution: Install binary packages install.packages(\"jjstatsplot\", type = \"binary\")  # Issue: ggstatsplot not found # Solution: Install dependencies first install.packages(c(\"ggstatsplot\", \"jmvcore\", \"R6\")) devtools::install_github(\"sbalci/jjstatsplot\")  # Issue: devtools not available # Solution: Install devtools first install.packages(\"devtools\")"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-no-data-to-plot-error","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Data-Related Issues","what":"Q: “No data to plot” error","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Common Causes & Solutions: Missing variable selection: jamovi: Ensure variables dragged appropriate boxes R: Check variable names correct exist data missing values: Incorrect variable types:","code":"# Check for missing data summary(your_data)  # Remove rows with missing values for specific variables clean_data <- your_data[complete.cases(your_data[c(\"var1\", \"var2\")]), ] # Check variable types str(your_data)  # Convert variable types if needed your_data$categorical_var <- factor(your_data$categorical_var) your_data$numeric_var <- as.numeric(your_data$numeric_var)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-insufficient-data-for-analysis-message","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Data-Related Issues","what":"Q: “Insufficient data for analysis” message","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Solutions: 1. Check sample sizes: - Minimum 10 observations analyses - least 5 observations per group group comparisons - Correlation analyses need least 10 complete pairs Group-specific issues:","code":"# Check group sizes table(your_data$grouping_variable)  # Remove small groups if necessary group_counts <- table(your_data$grouping_variable) large_groups <- names(group_counts[group_counts >= 5]) filtered_data <- your_data[your_data$grouping_variable %in% large_groups, ]"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-variables-show-as-character-instead-of-factor","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Data-Related Issues","what":"Q: Variables show as “character” instead of “factor”","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Solution:","code":"# In R: Convert character to factor your_data$category <- factor(your_data$category)  # In jamovi:  # 1. Double-click variable name in data view # 2. Change \"Data Type\" from \"Text\" to \"Nominal\" or \"Ordinal\" # 3. Set appropriate factor levels if needed"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-statistical-test-failed-or-assumptions-violated-warnings","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Statistical Test Issues","what":"Q: “Statistical test failed” or “Assumptions violated” warnings","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Common Issues & Solutions: Normality violations: Homogeneity variance violations: Small sample sizes specific tests: Fisher’s exact test small contingency tables Bootstrap methods small samples Non-parametric alternatives","code":"# Check normality shapiro.test(your_data$variable)  # Solutions: # 1. Use non-parametric alternatives (usually automatic in jjstatsplot) # 2. Transform data log_transformed <- log(your_data$positive_variable) sqrt_transformed <- sqrt(your_data$variable)  # 3. Use robust statistical methods (available in options) # Check variance homogeneity bartlett.test(variable ~ group, data = your_data)  # Solutions: # 1. Use Welch's t-test (often default) # 2. Use non-parametric tests # 3. Transform data to stabilize variance"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-correlation-analysis-produces-nan-or-infinite-values","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Statistical Test Issues","what":"Q: Correlation analysis produces NaN or infinite values","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Solutions:","code":"# Check for issues summary(your_data[, numeric_variables])  # Remove constant variables non_constant <- sapply(your_data[numeric_variables], function(x) length(unique(x)) > 1) valid_variables <- numeric_variables[non_constant]  # Check for extreme outliers outlier_check <- function(x) {   Q1 <- quantile(x, 0.25, na.rm = TRUE)   Q3 <- quantile(x, 0.75, na.rm = TRUE)   IQR <- Q3 - Q1   extreme_outliers <- x < (Q1 - 3 * IQR) | x > (Q3 + 3 * IQR)   return(sum(extreme_outliers, na.rm = TRUE)) }  sapply(your_data[valid_variables], outlier_check)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-plots-appear-blank-or-dont-display","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Plot Display Issues","what":"Q: Plots appear blank or don’t display","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Solutions: jamovi-specific: Refresh analysis (click away back) Resize plot area Check plot “plot2” section grouped analyses R-specific: Graphics device issues:","code":"# Check if plot object exists result <- jjhistostats(data = mtcars, dep = \"mpg\")  # For single plots if (exists(\"result\") && !is.null(result$plot)) {   print(result$plot) }  # For grouped plots if (exists(\"result\") && !is.null(result$plot2)) {   print(result$plot2) } # Reset graphics device dev.off()  # For RStudio users # Go to Plots pane → Export → Copy to Clipboard"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-plot-text-is-too-small-or-overlapping","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Plot Display Issues","what":"Q: Plot text is too small or overlapping","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Solutions: jamovi: Increase plot size results panel Export plot higher resolution R:","code":"# Adjust plot size result <- jjhistostats(data = mtcars, dep = \"mpg\")  # Modify plot theme improved_plot <- result$plot +    ggplot2::theme(     text = ggplot2::element_text(size = 12),     axis.text = ggplot2::element_text(size = 10),     plot.title = ggplot2::element_text(size = 14)   )  print(improved_plot)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-statistical-annotations-are-cut-off-or-overlapping","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Plot Display Issues","what":"Q: Statistical annotations are cut off or overlapping","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Solutions:","code":"# Adjust plot margins library(ggplot2)  result <- jjscatterstats(data = mtcars, dep = \"mpg\", group = \"hp\")  # Increase plot margins fixed_plot <- result$plot +    theme(     plot.margin = margin(t = 20, r = 20, b = 20, l = 20, unit = \"pt\")   )  # For very long annotations, consider: # 1. Shorter variable names # 2. Custom subtitle/caption # 3. Separate statistical table"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"q-analysis-takes-very-long-time-or-jamovi-freezes","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Performance Issues","what":"Q: Analysis takes very long time or jamovi freezes","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Solutions: Large datasets: Complex grouping: Reduce number groups Combine similar categories Use simpler analyses exploration Memory issues:","code":"# Sample large datasets if (nrow(your_data) > 10000) {   sampled_data <- your_data[sample(nrow(your_data), 5000), ] }  # Or focus on specific subsets subset_data <- your_data[your_data$important_condition == \"focus_group\", ] # Check memory usage object.size(your_data)  # Clean workspace rm(list = ls()[!ls() %in% c(\"essential_objects\")]) gc()  # Garbage collection"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"error-in-evalexpr-envir-enclos-object-variable_name-not-found","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Common Error Messages","what":"“Error in eval(expr, envir, enclos): object ‘variable_name’ not found”","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Cause: Variable name mismatch typo Solutions:","code":"# Check available variables names(your_data)  # Check for exact spelling \"variable_name\" %in% names(your_data)  # Common issues: # - Case sensitivity: \"Variable\" vs \"variable\" # - Spaces: \"Variable Name\" vs \"Variable_Name\" # - Special characters: accents, symbols"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"error-aesthetics-must-be-either-length-1-or-the-same-as-the-data","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Common Error Messages","what":"“Error: Aesthetics must be either length 1 or the same as the data”","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Cause: Data length mismatch, often grouping issues Solutions:","code":"# Check data consistency table(your_data$grouping_variable, useNA = \"always\")  # Remove missing values in grouping variable clean_data <- your_data[!is.na(your_data$grouping_variable), ]  # Ensure balanced groups if needed balanced_data <- your_data %>%   group_by(grouping_variable) %>%   filter(n() >= 5) %>%   ungroup()"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"warning-computation-failed-in-stat_-non-numeric-variable","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Common Error Messages","what":"“Warning: Computation failed in stat_*(): Non-numeric variable”","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Cause: Numeric variable treated categorical vice versa Solutions:","code":"# Check variable type class(your_data$problematic_variable)  # Convert to appropriate type your_data$numeric_var <- as.numeric(as.character(your_data$numeric_var)) your_data$factor_var <- factor(your_data$factor_var)  # Handle factor levels that look numeric your_data$category <- factor(your_data$category,                              levels = c(\"Low\", \"Medium\", \"High\"))"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"data-preparation","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Best Practices to Avoid Issues","what":"Data Preparation","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"","code":"# 1. Always check data structure first str(your_data) summary(your_data)  # 2. Handle missing values explicitly your_data_clean <- your_data %>%   filter(!is.na(dependent_variable) & !is.na(grouping_variable))  # 3. Set appropriate variable types your_data$categorical <- factor(your_data$categorical) your_data$ordered_cat <- ordered(your_data$ordered_cat,                                  levels = c(\"Low\", \"Med\", \"High\"))  # 4. Check for outliers boxplot(your_data$continuous_variable)  # 5. Verify sufficient sample sizes table(your_data$grouping_variable)"},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"analysis-workflow","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Best Practices to Avoid Issues","what":"Analysis Workflow","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Start simple: Begin basic plots adding grouping Check assumptions: Use diagnostic plots tests Validate results: Compare alternative methods Document choices: Keep track data transformations exclusions","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"reporting-guidelines","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Best Practices to Avoid Issues","what":"Reporting Guidelines","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Report sample sizes: Always include n group Describe missing data: missing values handled? State assumptions: statistical assumptions met? Include effect sizes: Don’t rely p-values Show uncertainty: Include confidence intervals available","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"jamovi-community-resources","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Getting Additional Help","what":"jamovi Community Resources","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"jamovi Forum: forum.jamovi.org jamovi Documentation: docs.jamovi.org Video Tutorials: Search “jamovi tutorials” YouTube","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"ggstatsplot-resources","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Getting Additional Help","what":"ggstatsplot Resources","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Package Website: indrajeetpatil.github.io/ggstatsplot GitHub Issues: ggstatsplot-specific problems Vignettes: Comprehensive function documentation","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"jjstatsplot-specific","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Getting Additional Help","what":"jjstatsplot Specific","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"GitHub Issues: github.com/sbalci/ClinicoPathJamoviModule/issues Email Support: serdarbalci@serdarbalci.com Package Documentation: Use ?function_name R","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"when-reporting-issues","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Getting Additional Help","what":"When Reporting Issues","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"Include following information: 1. jamovi version (Help → ) 2. jjstatsplot version 3. Operating system 4. Sample data (possible) 5. Exact error message 6. Steps reproduce 7. Screenshots (jamovi issues)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/articles/legacy/31-troubleshooting-faq-legacy.html","id":"creating-minimal-reproducible-examples","dir":"Articles > Legacy","previous_headings":"Troubleshooting Guide and FAQ > Getting Additional Help","what":"Creating Minimal Reproducible Examples","title":"Troubleshooting Guide and FAQ for jjstatsplot","text":"troubleshooting guide covers common issues encountered jjstatsplot. complex statistical questions, consider consulting statistician posting detailed questions statistical forums like Cross Validated (stats.stackexchange.com).","code":"# For R issues, create minimal example: library(jjstatsplot)  # Use built-in data data(mtcars)  # Minimal code that reproduces the problem result <- jjhistostats(data = mtcars, dep = \"mpg\") result$plot  # If this fails, report it"},{"path":"https://www.serdarbalci.com/jjstatsplot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Serdar Balci. Author, maintainer.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balci S (2025). jjstatsplot: Wrapper ggstatsplot. R package version 0.0.32.01, https://github.com/sbalci/jjstatsplot.","code":"@Manual{,   title = {jjstatsplot: Wrapper for ggstatsplot},   author = {Serdar Balci},   year = {2025},   note = {R package version 0.0.32.01},   url = {https://github.com/sbalci/jjstatsplot}, }"},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"statistical-visualization-made-simple","dir":"","previous_headings":"","what":"Statistical Visualization Made Simple","title":"Wrapper for ggstatsplot","text":"jjstatsplot brings power ggstatsplot jamovi, making publication-ready statistical visualizations accessible intuitive point--click interface. R package bridges gap sophisticated statistical plotting user-friendly data analysis, enabling researchers create informative plots enriched statistical details without writing code. 18 analysis types, jjstatsplot covers everything basic distributions advanced cluster visualizations.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"dart-why-jjstatsplot","dir":"","previous_headings":"Statistical Visualization Made Simple","what":"🎯 Why jjstatsplot?","title":"Wrapper for ggstatsplot","text":"Traditional statistical software often separates visualization analysis, requiring users manually annotate plots statistical results. jjstatsplot integrates steps, automatically adding appropriate statistical tests, effect sizes, sample sizes visualizations. Whether ’re exploring data distributions, comparing groups, examining correlations, analyzing categorical relationships, jjstatsplot provides right visualization right statistics—jamovi’s familiar interface.","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"rocket-advanced-capabilities","dir":"","previous_headings":"✨ Key Features","what":"🚀 Advanced Capabilities","title":"Wrapper for ggstatsplot","text":"Dual-Mode Operation: Analyze single variables multiple variables simultaneously Grouped Analysis: Automatic faceting grouping variables Statistical Flexibility: Choose parametric, non-parametric, robust, Bayesian approaches Customization Options: Control plot aesthetics, statistical details, output formatting Theme Support: Use jamovi’s consistent styling ggstatsplot’s original themes Dynamic Sizing: Plots automatically adjust accommodate data","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"for-jamovi-users","dir":"","previous_headings":"📦 Installation","what":"For jamovi Users","title":"Wrapper for ggstatsplot","text":"Open jamovi Go Modules → jamovi library Search “jjstatsplot” Click Install","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"for-r-users","dir":"","previous_headings":"📦 Installation","what":"For R Users","title":"Wrapper for ggstatsplot","text":"","code":"# Install from GitHub (latest development version) if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"sbalci/jjstatsplot\")  # Load the package library(jjstatsplot)"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"in-jamovi","dir":"","previous_headings":"🏃 Quick Start","what":"In jamovi","title":"Wrapper for ggstatsplot","text":"Open dataset jamovi Navigate Analyses tab Find jjstatsplot analysis menu Select desired analysis type Drag drop variables appropriate fields Customize options needed","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"in-r","dir":"","previous_headings":"🏃 Quick Start","what":"In R","title":"Wrapper for ggstatsplot","text":"","code":"# Example: Create a histogram with statistical annotations jjhistostats(   data = iris,   dep = \"Sepal.Length\",   xlab = \"Sepal Length (cm)\",   results.subtitle = TRUE )  # Example: Compare groups with box-violin plots jjbetweenstats(   data = mtcars,   dep = \"mpg\",   group = \"cyl\",   type = \"nonparametric\" )"},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"requirements","dir":"","previous_headings":"🔧 Development","what":"Requirements","title":"Wrapper for ggstatsplot","text":"R (≥ 4.0.0) jamovi (≥ 1.2.19) Core dependencies: jmvcore, R6, ggstatsplot","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"building-from-source","dir":"","previous_headings":"🔧 Development","what":"Building from Source","title":"Wrapper for ggstatsplot","text":"","code":"# Clone the repository git clone https://github.com/sbalci/jjstatsplot.git  # Install development dependencies devtools::install_deps()  # Check package devtools::check()  # Build jamovi module jmvtools::install()"},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"books-documentation","dir":"","previous_headings":"","what":"📚 Documentation","title":"Wrapper for ggstatsplot","text":"Package Documentation: sbalci.github.io/jjstatsplot ggstatsplot Guide: indrajeetpatil.github.io/ggstatsplot jamovi Resources: jamovi.org","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"handshake-contributing","dir":"","previous_headings":"","what":"🤝 Contributing","title":"Wrapper for ggstatsplot","text":"Contributions welcome! Please feel free submit Pull Request. major changes, please open issue first discuss like change.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"reporting-issues","dir":"","previous_headings":"🤝 Contributing","what":"Reporting Issues","title":"Wrapper for ggstatsplot","text":"Bug Reports: GitHub Issues Feature Requests: GitHub Discussions General Questions: serdarbalci@serdarbalci.com","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"page_facing_up-citation","dir":"","previous_headings":"","what":"📄 Citation","title":"Wrapper for ggstatsplot","text":"use jjstatsplot research, please cite main ClinicoPath project: Please also cite underlying packages: ggstatsplot: Patil, . (2021). Visualizations statistical details: ‘ggstatsplot’ approach. Journal Open Source Software, 6(61), 3167. jamovi: jamovi project (2024). jamovi (Version 2.5) [Computer Software]. Retrieved https://www.jamovi.org","code":"Serdar Balci (2025). ClinicoPath jamovi Module. doi:10.5281/zenodo.3997188 [R package]. Retrieved from https://github.com/sbalci/ClinicoPathJamoviModule"},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"pencil-license","dir":"","previous_headings":"","what":"📝 License","title":"Wrapper for ggstatsplot","text":"project licensed GPL (≥ 2) License - see LICENSE file details.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/index.html","id":"pray-acknowledgments","dir":"","previous_headings":"","what":"🙏 Acknowledgments","title":"Wrapper for ggstatsplot","text":"Indrajeet Patil creating ggstatsplot jamovi team excellent statistical platform contributors users helped improve package Made ❤️ jamovi community","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Advanced Raincloud Plot — advancedraincloud","title":"Advanced Raincloud Plot — advancedraincloud","text":"Creates advanced raincloud plots longitudinal connections using ggrain package. module complements existing Raincloud Plot module providing advanced features including longitudinal data connections, Likert scale support, flexible raincloud positioning. Perfect repeated measures data, survey analysis, complex distribution visualization clinical research. Uses ggrain package enhanced customization connectivity features.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Advanced Raincloud Plot — advancedraincloud","text":"","code":"advancedraincloud(   data,   y_var,   x_var,   fill_var = NULL,   id_var = NULL,   cov_var = NULL,   rain_side = \"l\",   likert_mode = FALSE,   show_longitudinal = FALSE,   point_size = 1.5,   point_alpha = 0.7,   violin_alpha = 0.7,   boxplot_width = 0.1,   jitter_seed = 42,   color_palette = \"clinical\",   plot_title = \"Advanced Raincloud Plot\",   x_label = \"\",   y_label = \"\",   show_statistics = TRUE,   show_comparisons = FALSE,   show_interpretation = TRUE,   clinical_cutoff = 0,   reference_range_min = 0,   reference_range_max = 0,   show_mcid = FALSE,   mcid_value = 0,   show_effect_size = FALSE,   effect_size_type = \"cohens_d\",   show_change_scores = FALSE,   baseline_group = \"\",   responder_threshold = 20,   show_sample_size = TRUE,   show_missing_info = FALSE,   trial_arms = \"\",   time_labels = \"\",   population_type = \"itt\",   log_transform = FALSE,   outlier_method = \"none\",   show_cv_bands = FALSE,   cv_band_1 = 15,   cv_band_2 = 20,   p_value_position = \"above\",   journal_style = \"default\",   generate_report = FALSE,   include_methods = FALSE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Advanced Raincloud Plot — advancedraincloud","text":"data data data frame. y_var Continuous variable distribution visualization Y-axis. x_var Grouping variable X-axis categories. fill_var Optional variable color filling different groups. id_var Optional ID variable connecting longitudinal observations across groups. cov_var Optional variable remapping point colors based covariate values. rain_side Position raincloud relative data points. Options include left (l), right (r), flanking sides (f), 1x1 flanking (f1x1), 2x2 flanking (f2x2). likert_mode TRUE, adds Y-axis jittering Likert scale ordinal data. show_longitudinal TRUE, connects repeated observations using ID variable. point_size Size individual data points. point_alpha Transparency level data points. violin_alpha Transparency level violin plots. boxplot_width Width boxplot component. jitter_seed Random seed consistent point jittering across plot updates. color_palette Color palette different groups. plot_title Title raincloud plot. x_label Custom label X-axis. empty, uses variable name. y_label Custom label Y-axis. empty, uses variable name. show_statistics TRUE, displays summary statistics table. show_comparisons TRUE, performs statistical tests groups. show_interpretation TRUE, displays interpretation feature guide. clinical_cutoff Add horizontal line clinical threshold decision boundary. reference_range_min Lower bound normal reference range (shaded area). reference_range_max Upper bound normal reference range (shaded area). show_mcid Display Minimal Clinically Important Difference band. mcid_value Size Minimal Clinically Important Difference. show_effect_size Show effect size calculations groups. effect_size_type Method calculating effect size. show_change_scores Display change baseline analysis longitudinal data. baseline_group Name level baseline/reference group. responder_threshold Percentage change threshold responder classification. show_sample_size Show sample size (N) group plot. show_missing_info Display information missing data exclusions. trial_arms Custom labels treatment arms (comma-separated). time_labels Custom labels time points (comma-separated). population_type Type analysis population clinical trials. log_transform Apply log transformation Y-axis values. outlier_method Method handling outliers data. show_cv_bands Display coefficient variation bands assay variability. cv_band_1 First CV band percentage (typically 15\\ variability). cv_band_2 Second CV band percentage (typically 20\\ variability). p_value_position display p-values group comparisons. journal_style Apply journal-specific formatting guidelines. generate_report Generate comprehensive clinical analysis report. include_methods Include methods section text publications.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Advanced Raincloud Plot — advancedraincloud","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Advanced Raincloud Plot — advancedraincloud","text":"","code":"# \\donttest{ # Example: # 1. Select continuous variable for distribution analysis. # 2. Choose grouping variable for comparisons. # 3. Optionally add longitudinal ID variable for connections. # 4. Configure advanced raincloud features and positioning. # }"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloudClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Advanced Raincloud Plot with Longitudinal Support — advancedraincloudClass","title":"Advanced Raincloud Plot with Longitudinal Support — advancedraincloudClass","text":"Advanced Raincloud Plot Longitudinal Support Advanced Raincloud Plot Longitudinal Support","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloudClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Advanced Raincloud Plot with Longitudinal Support — advancedraincloudClass","text":"Advanced raincloud plots using ggrain package","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloudClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Advanced Raincloud Plot with Longitudinal Support — advancedraincloudClass","text":"jmvcore::Analysis -> jjstatsplot::advancedraincloudBase -> advancedraincloudClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloudClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Advanced Raincloud Plot with Longitudinal Support — advancedraincloudClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::advancedraincloudBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloudClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Advanced Raincloud Plot with Longitudinal Support — advancedraincloudClass","text":"advancedraincloudClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloudClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Advanced Raincloud Plot with Longitudinal Support — advancedraincloudClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloudClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Advanced Raincloud Plot with Longitudinal Support — advancedraincloudClass","text":"","code":"advancedraincloudClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/advancedraincloudClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Advanced Raincloud Plot with Longitudinal Support — advancedraincloudClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/bootstrapIDI.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap IDI calculation with confidence intervals — bootstrapIDI","title":"Bootstrap IDI calculation with confidence intervals — bootstrapIDI","text":"Calculates Integrated Discrimination Improvement bootstrap confidence intervals","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/bootstrapIDI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap IDI calculation with confidence intervals — bootstrapIDI","text":"","code":"bootstrapIDI(   new_values,   ref_values,   actual,   direction = \">=\",   n_boot = 1000,   conf_level = 0.95 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/bootstrapIDI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap IDI calculation with confidence intervals — bootstrapIDI","text":"new_values Test values new test ref_values Test values reference test actual Binary outcome vector (0/1) direction Classification direction (\">=\" \"<=\") n_boot Number bootstrap iterations conf_level Confidence level (default 0.95)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/bootstrapIDI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap IDI calculation with confidence intervals — bootstrapIDI","text":"List IDI, confidence intervals, p-value","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate AUC from sensitivity and specificity — calculate_auc","title":"Approximate AUC from sensitivity and specificity — calculate_auc","text":"Uses simplified formula approximate AUC sensitivity specificity","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate AUC from sensitivity and specificity — calculate_auc","text":"","code":"calculate_auc(sens, spec)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate AUC from sensitivity and specificity — calculate_auc","text":"sens Sensitivity test spec Specificity test","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate AUC from sensitivity and specificity — calculate_auc","text":"Numeric AUC value NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_nlr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate negative likelihood ratio — calculate_nlr","title":"Calculate negative likelihood ratio — calculate_nlr","text":"Calculates negative likelihood ratio sensitivity specificity","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_nlr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate negative likelihood ratio — calculate_nlr","text":"","code":"calculate_nlr(sens, spec)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_nlr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate negative likelihood ratio — calculate_nlr","text":"sens Sensitivity value spec Specificity value","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_nlr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate negative likelihood ratio — calculate_nlr","text":"Numeric negative likelihood ratio NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_npv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate negative predictive value (NPV) — calculate_npv","title":"Calculate negative predictive value (NPV) — calculate_npv","text":"Calculates NPV confusion matrix values","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_npv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate negative predictive value (NPV) — calculate_npv","text":"","code":"calculate_npv(tn, fn)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_npv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate negative predictive value (NPV) — calculate_npv","text":"tn Number true negatives fn Number false negatives","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_npv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate negative predictive value (NPV) — calculate_npv","text":"Numeric NPV value NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_plr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate positive likelihood ratio — calculate_plr","title":"Calculate positive likelihood ratio — calculate_plr","text":"Calculates positive likelihood ratio sensitivity specificity","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_plr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate positive likelihood ratio — calculate_plr","text":"","code":"calculate_plr(sens, spec)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_plr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate positive likelihood ratio — calculate_plr","text":"sens Sensitivity value spec Specificity value","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_plr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate positive likelihood ratio — calculate_plr","text":"Numeric positive likelihood ratio NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_ppv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate positive predictive value (PPV) — calculate_ppv","title":"Calculate positive predictive value (PPV) — calculate_ppv","text":"Calculates PPV confusion matrix values","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_ppv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate positive predictive value (PPV) — calculate_ppv","text":"","code":"calculate_ppv(tp, fp)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_ppv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate positive predictive value (PPV) — calculate_ppv","text":"tp Number true positives fp Number false positives","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_ppv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate positive predictive value (PPV) — calculate_ppv","text":"Numeric PPV value NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate test sensitivity — calculate_sensitivity","title":"Calculate test sensitivity — calculate_sensitivity","text":"Calculates sensitivity (true positive rate) confusion matrix values","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate test sensitivity — calculate_sensitivity","text":"","code":"calculate_sensitivity(tp, fn)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate test sensitivity — calculate_sensitivity","text":"tp Number true positives fn Number false negatives","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate test sensitivity — calculate_sensitivity","text":"Numeric sensitivity value NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_specificity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate test specificity — calculate_specificity","title":"Calculate test specificity — calculate_specificity","text":"Calculates specificity (true negative rate) confusion matrix values","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_specificity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate test specificity — calculate_specificity","text":"","code":"calculate_specificity(tn, fp)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_specificity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate test specificity — calculate_specificity","text":"tn Number true negatives fp Number false positives","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/calculate_specificity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate test specificity — calculate_specificity","text":"Numeric specificity value NA inputs valid","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/clinicopath_startup_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Package startup message — clinicopath_startup_message","title":"Package startup message — clinicopath_startup_message","text":"Displays information package author website","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/clinicopath_startup_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package startup message — clinicopath_startup_message","text":"","code":"clinicopath_startup_message()"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/clinicopath_startup_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package startup message — clinicopath_startup_message","text":"Invisible NULL (called side effects)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Hull Plot — hullplot","title":"Hull Plot — hullplot","text":"Creates Hull plots visualize clusters groups scatter plots using ggforce. Hull plots draw polygonal boundaries around data points grouped categorical variables, making easy identify customer segments, group membership, data clusters. Based geom_mark_hull() function ggforce package.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hull Plot — hullplot","text":"","code":"hullplot(   data,   x_var = NULL,   y_var = NULL,   group_var = NULL,   color_var = NULL,   size_var = NULL,   hull_concavity = 2,   hull_alpha = 0.3,   show_labels = TRUE,   point_size = 2,   point_alpha = 0.7,   color_palette = \"default\",   plot_theme = \"minimal\",   plot_title = \"Hull Plot - Group Visualization\",   x_label = \"\",   y_label = \"\",   hull_expand = 0.05,   show_statistics = FALSE,   outlier_detection = FALSE,   confidence_ellipses = FALSE,   show_summary = FALSE,   show_assumptions = FALSE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hull Plot — hullplot","text":"data data data frame. x_var Continuous variable X-axis scatter plot. y_var Continuous variable Y-axis scatter plot. group_var Categorical variable defines groups hull boundaries. group hull polygon. color_var Optional variable coloring points. specified, uses grouping variable. size_var Optional continuous variable sizing points based values. hull_concavity Controls concavity hull polygons. Lower values create concave hulls, higher values create convex hulls. Range: 0-2, default: 2. hull_alpha Transparency level hull polygons. 0 = completely transparent, 1 = opaque. show_labels TRUE, displays group labels inside hull regions. point_size Size scatter plot points. point_alpha Transparency level scatter plot points. color_palette Color palette hulls points. plot_theme Overall visual theme plot. plot_title Custom title hull plot. x_label Custom label X-axis. empty, uses variable name. y_label Custom label Y-axis. empty, uses variable name. hull_expand Amount expand hull boundaries beyond data points. Higher values create larger hulls. show_statistics TRUE, displays summary statistics group output. outlier_detection TRUE, identifies highlights potential outliers within groups. confidence_ellipses TRUE, adds confidence ellipses addition hull polygons. show_summary TRUE, displays plain-language summary results copy-ready text. show_assumptions TRUE, displays data requirements, assumptions, usage guidelines.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hull Plot — hullplot","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hull Plot — hullplot","text":"","code":"# \\donttest{ # Example: # 1. Load your data frame with continuous variables for x and y axes. # 2. Select x and y variables for the scatter plot. # 3. Choose a grouping variable to define hull boundaries. # 4. Customize hull appearance and plot aesthetics. # 5. Run the hull plot to visualize group clusters. # }"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplotClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Hull Plot for Group Visualization — hullplotClass","title":"Hull Plot for Group Visualization — hullplotClass","text":"Hull Plot Group Visualization Hull Plot Group Visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplotClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hull Plot for Group Visualization — hullplotClass","text":"Hull plot using ggforce cluster group visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplotClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Hull Plot for Group Visualization — hullplotClass","text":"jmvcore::Analysis -> jjstatsplot::hullplotBase -> hullplotClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplotClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Hull Plot for Group Visualization — hullplotClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::hullplotBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplotClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Hull Plot for Group Visualization — hullplotClass","text":"hullplotClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplotClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Hull Plot for Group Visualization — hullplotClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplotClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hull Plot for Group Visualization — hullplotClass","text":"","code":"hullplotClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/hullplotClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hull Plot for Group Visualization — hullplotClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/is_in_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if value is within valid range — is_in_range","title":"Check if value is within valid range — is_in_range","text":"Validates value within specified bounds","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/is_in_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if value is within valid range — is_in_range","text":"","code":"is_in_range(x, min_val, max_val, inclusive = TRUE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/is_in_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if value is within valid range — is_in_range","text":"x Value check min_val Minimum allowed value max_val Maximum allowed value inclusive Whether bounds inclusive","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/is_in_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if value is within valid range — is_in_range","text":"Logical indicating value within range","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagram.html","id":null,"dir":"Reference","previous_headings":"","what":"Arc Diagram — jjarcdiagram","title":"Arc Diagram — jjarcdiagram","text":"'Creates arc diagrams network visualization using arcdiagram package.'","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arc Diagram — jjarcdiagram","text":"","code":"jjarcdiagram(   data,   source,   target,   weight = NULL,   group = NULL,   analysisPreset = \"custom\",   showNodes = FALSE,   nodeSize = \"fixed\",   nodeSizeValue = 2,   sortNodes = \"none\",   sortDecreasing = FALSE,   horizontal = FALSE,   arcWidth = \"fixed\",   arcWidthValue = 1,   arcTransparency = 0.5,   directed = FALSE,   colorByGroup = FALSE,   showStats = FALSE,   showLegend = FALSE,   labelSize = 0.8,   plotTitle = \"\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arc Diagram — jjarcdiagram","text":"data data data frame. source Starting point relationship connection. Examples: Gene regulating Gene B,  Patient X similar Patient Y, Disease co-occurring Disease B. target Endpoint relationship connection. represents regulated,  influenced, connected source entity. weight Optional numeric measure connection strength. Examples: Correlation coefficient,  interaction score, similarity index, co-occurrence frequency. Higher values indicate  stronger relationships. group Optional grouping variable color-coding entities. Examples: Gene families,  patient subtypes, disease categories, functional classifications. analysisPreset Choose preset configuration optimized specific clinical research scenarios.  Gene networks focus regulatory relationships, patient networks similarity patterns,  pathway networks biological processes, comorbidity networks disease associations. showNodes Whether display node points along arc baseline. enabled, nodes shown circles sorted positions. nodeSize Method determining node sizes. 'Fixed' uses constant size, 'Degree' scales nodes proportionally connectivity (number connections). nodeSizeValue Size nodes using fixed sizing, base size multiplier using degree-based sizing. Range: 0.1 10. sortNodes Order nodes arranged along baseline. 'None' preserves original order, 'Name' sorts alphabetically, 'Group' clusters categories, 'Degree' orders connectivity. sortDecreasing sorting nodes, whether use descending order. applies Sort Nodes 'None'. horizontal Layout orientation arc diagram. TRUE, nodes arranged horizontally arcs . FALSE, nodes arranged vertically arcs side. arcWidth Method determining arc line widths. 'Fixed' uses constant width, 'Weight' scales arc thickness proportionally edge weights. arcWidthValue Width arcs using fixed sizing, base width using weight-based sizing. Range: 0.1 5. arcTransparency Transparency level arc lines. 0 = fully transparent (invisible), 1 = fully opaque. Lower values reduce visual clutter dense networks. directed Whether treat network directed (edges direction source target) undirected (edges represent bidirectional relationships). colorByGroup grouping variable specified, whether color-code nodes group membership. Requires group variable. showStats Whether display network statistics including number nodes, edges, density, centrality measures. showLegend Whether display color legend nodes colored groups. appears grouping variable specified color group enabled. labelSize Size node labels (text). 0.8 standard size, values 1.0 increase label size, 1.0 decrease . Range: 0.1 2.0. plotTitle Optional title display arc diagram. Leave empty title.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arc Diagram — jjarcdiagram","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arc Diagram — jjarcdiagram","text":"","code":"# \\donttest{ # Basic social network visualization data(jjarcdiagram_social_network, package = \"ClinicoPath\") #> Error in find.package(package, lib.loc, verbose = verbose): there is no package called ‘ClinicoPath’ jjarcdiagram(     data = social_network_data,     source = \"source\",     target = \"target\",     weight = \"weight\",     group = \"group\",     showNodes = TRUE,     nodeSize = \"degree\",     sortNodes = \"group\" ) #> Error: object 'social_network_data' not found  # Gene regulatory network data(jjarcdiagram_gene_network, package = \"ClinicoPath\") #> Error in find.package(package, lib.loc, verbose = verbose): there is no package called ‘ClinicoPath’ jjarcdiagram(     data = gene_network_data,     source = \"regulator\",     target = \"target\",     weight = \"regulation_score\",     group = \"pathway\",     nodeSize = \"degree\",     sortNodes = \"group\" ) #> Error: object 'gene_network_data' not found  # Academic collaboration network data(jjarcdiagram_academic_network, package = \"ClinicoPath\") #> Error in find.package(package, lib.loc, verbose = verbose): there is no package called ‘ClinicoPath’ jjarcdiagram(     data = academic_network_data,     source = \"author1\",     target = \"author2\",     weight = \"publications\",     group = \"department\",     showNodes = TRUE,     nodeSize = \"degree\" ) #> Error: object 'academic_network_data' not found  # Organizational hierarchy data(jjarcdiagram_org_hierarchy, package = \"ClinicoPath\") #> Error in find.package(package, lib.loc, verbose = verbose): there is no package called ‘ClinicoPath’ jjarcdiagram(     data = org_hierarchy_data,     source = \"employee\",     target = \"reports_to\",     weight = \"relationship_strength\",     group = \"department\",     nodeSize = \"fixed\",     nodeSizeValue = 3 ) #> Error: object 'org_hierarchy_data' not found  # Simple minimal network data(jjarcdiagram_minimal_network, package = \"ClinicoPath\") #> Error in find.package(package, lib.loc, verbose = verbose): there is no package called ‘ClinicoPath’ jjarcdiagram(     data = minimal_network_data,     source = \"from\",     target = \"to\",     weight = \"strength\" ) #> Error: object 'minimal_network_data' not found # }"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagramClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Arc Diagram — jjarcdiagramClass","title":"Arc Diagram — jjarcdiagramClass","text":"Arc Diagram Arc Diagram","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagramClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Arc Diagram — jjarcdiagramClass","text":"jmvcore::Analysis -> jjstatsplot::jjarcdiagramBase -> jjarcdiagramClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagramClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Arc Diagram — jjarcdiagramClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jjarcdiagramBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagramClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Arc Diagram — jjarcdiagramClass","text":"jjarcdiagramClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagramClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Arc Diagram — jjarcdiagramClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagramClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arc Diagram — jjarcdiagramClass","text":"","code":"jjarcdiagramClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjarcdiagramClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arc Diagram — jjarcdiagramClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar Charts — jjbarstats","title":"Bar Charts — jjbarstats","text":"'Wrapper Function ggstatsplot::ggbarstats ggstatsplot::grouped_ggbarstats generate Bar Charts.'","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar Charts — jjbarstats","text":"","code":"jjbarstats(   data,   dep,   group,   grvar = NULL,   counts = NULL,   excl = FALSE,   typestatistics = \"parametric\",   pairwisecomparisons = FALSE,   pairwisedisplay = \"significant\",   padjustmethod = \"holm\",   originaltheme = FALSE,   resultssubtitle = FALSE,   messages = FALSE,   paired = FALSE,   label = \"percentage\",   digits = 2,   digitsperc = 0,   proportiontest = FALSE,   bfmessage = FALSE,   conflevel = 0.95,   ratio = \"\",   clinicalpreset = \"custom\",   showexplanations = FALSE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar Charts — jjbarstats","text":"data data data frame. dep . group . grvar . counts variable data containing counts, NULL row represents single observation. excl . typestatistics . pairwisecomparisons . pairwisedisplay . padjustmethod . originaltheme . resultssubtitle Display statistical test results plot subtitle. Disabling improves performance significantly. messages Display statistical messages console.  Disabling improves performance. paired Logical indicating whether data came within-subjects repeated measures design study. TRUE, McNemar's test  used. FALSE, Pearson's chi-square test used. label information needs displayed label  bar segment. digits Number digits decimal point statistical results. digitsperc Number decimal places percentage labels. proportiontest Decides whether proportion test x variable  carried level y. bfmessage Display Bayes Factor favor null hypothesis. relevant parametric test. conflevel Confidence/credible interval level. ratio comma-separated list expected proportions proportion test  (sum 1). example: '0.5,0.5' two equal groups  '0.25,0.25,0.25,0.25' four equal groups. Leave empty equal  theoretical proportions. clinicalpreset Predefined configurations common clinical scenarios.  Automatically sets appropriate statistical methods parameters. showexplanations Display detailed explanations statistical methods, assumptions,  clinical interpretations guide analysis result interpretation.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bar Charts — jjbarstats","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bar Charts — jjbarstats","text":"","code":"# \\donttest{ # example will be added # }"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstatsClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar Charts — jjbarstatsClass","title":"Bar Charts — jjbarstatsClass","text":"Bar Charts Bar Charts","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstatsClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Bar Charts — jjbarstatsClass","text":"jmvcore::Analysis -> jjstatsplot::jjbarstatsBase -> jjbarstatsClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstatsClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Bar Charts — jjbarstatsClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jjbarstatsBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstatsClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Bar Charts — jjbarstatsClass","text":"jjbarstatsClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstatsClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Bar Charts — jjbarstatsClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstatsClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar Charts — jjbarstatsClass","text":"","code":"jjbarstatsClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbarstatsClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar Charts — jjbarstatsClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Box-Violin Plots to Compare Between Groups — jjbetweenstats","title":"Box-Violin Plots to Compare Between Groups — jjbetweenstats","text":"Wrapper Function ggstatsplot::ggbetweenstats ggstatsplot::grouped_ggbetweenstats generate Box-Violin Plots comparing continuous variables groups statistical annotations.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box-Violin Plots to Compare Between Groups — jjbetweenstats","text":"","code":"jjbetweenstats(   data,   dep,   group,   grvar = NULL,   centralityplotting = FALSE,   centralitytype = \"parametric\",   typestatistics = \"parametric\",   pairwisecomparisons = FALSE,   pairwisedisplay = \"significant\",   padjustmethod = \"holm\",   effsizetype = \"biased\",   mytitle = \"Within Group Comparison\",   xtitle = \"\",   ytitle = \"\",   originaltheme = FALSE,   resultssubtitle = FALSE,   bfmessage = FALSE,   k = 2,   conflevel = 0.95,   varequal = FALSE,   plotwidth = 650,   plotheight = 450,   colorblindSafe = FALSE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box-Violin Plots to Compare Between Groups — jjbetweenstats","text":"data data data frame. dep . group . grvar . centralityplotting . centralitytype . typestatistics . pairwisecomparisons . pairwisedisplay . padjustmethod . effsizetype . mytitle . xtitle . ytitle . originaltheme . resultssubtitle . bfmessage Whether display Bayes Factor subtitle using Bayesian analysis. k Number decimal places displaying statistics subtitle. conflevel Confidence level confidence intervals. varequal Whether assume equal variances across groups parametric tests. plotwidth Width plot pixels. Default 650. plotheight Height plot pixels. Default 450. colorblindSafe Whether use colorblind-safe color palette plot elements.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Box-Violin Plots to Compare Between Groups — jjbetweenstats","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Box-Violin Plots to Compare Between Groups — jjbetweenstats","text":"","code":"# Basic comparison between groups jjbetweenstats(     data = iris,     dep = \"Sepal.Length\",     group = \"Species\",     typestatistics = \"parametric\",     pairwisecomparisons = TRUE ) #>  #>  BOX-VIOLIN PLOTS TO COMPARE BETWEEN GROUPS #>  #>  Violin plot analysis comparing Sepal.Length by Species. #> Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0. #> ℹ Please use the `linewidth` argument instead. #> ℹ The deprecated feature was likely used in the jmvcore package. #>   Please report the issue at <https://github.com/jamovi/jmvcore/issues>.   # Multiple variables comparison jjbetweenstats(     data = mtcars,     dep = c(\"mpg\", \"hp\", \"wt\"),     group = \"cyl\",     typestatistics = \"nonparametric\",     pairwisecomparisons = TRUE,     pairwisedisplay = \"significant\",     padjustmethod = \"bonferroni\" ) #>  #>  BOX-VIOLIN PLOTS TO COMPARE BETWEEN GROUPS #>  #>  Violin plot analysis comparing mpg, hp, wt by cyl. #> Error in purrr::pmap(.l = list(y = dep2_symbols, messages = FALSE), .f = function(y,     messages) {    plot_args <- list(data = mydata, x = rlang::sym(group), y = !!y,         messages = messages, title = opts$mytitle, xlab = opts$xtitle,         ylab = opts$ytitle, type = opts$typestatistics, pairwise.comparisons = opts$pairwisecomparisons,         pairwise.display = opts$pairwisedisplay, p.adjust.method = opts$padjustmethod,         effsize.type = opts$effsizetype, bf.message = opts$bfmessage,         k = opts$k, conf.level = opts$conflevel, var.equal = opts$varequal,         point.args = opts$pointargs, results.subtitle = opts$resultssubtitle,         centrality.plotting = if (!is.null(opts$centrality.plotting)) opts$centrality.plotting else FALSE,         centrality.type = if (!is.null(opts$centrality.type)) opts$centrality.type else NULL)    if (!is.null(opts$violinargs)) {        plot_args$violin.args <- opts$violinargs    }    if (!is.null(opts$boxplotargs)) {        plot_args$boxplot.args <- opts$boxplotargs    }    do.call(ggstatsplot::ggbetweenstats, plot_args)}): ℹ In index: 1. #> Caused by error in `!y`: #> ! invalid argument type  # Grouped analysis with split variable jjbetweenstats(     data = mtcars,     dep = \"mpg\",     group = \"cyl\",     grvar = \"am\",     typestatistics = \"robust\",     centralityplotting = TRUE,     centralitytype = \"robust\", ) #>  #>  BOX-VIOLIN PLOTS TO COMPARE BETWEEN GROUPS #>  #>  Violin plot analysis comparing mpg by cyl, grouped by am.    # Bayesian analysis with custom aesthetics jjbetweenstats(     data = ToothGrowth,     dep = \"len\",     group = \"supp\",     grvar = \"dose\",     typestatistics = \"bayes\",     bfmessage = TRUE,     mytitle = \"Tooth Growth by Supplement Type\",     xtitle = \"Supplement\",     ytitle = \"Tooth Length\" ) #>  #>  BOX-VIOLIN PLOTS TO COMPARE BETWEEN GROUPS #>  #>  Violin plot analysis comparing len by supp, grouped by dose."},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstatsClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Violin Plots to Compare Between Groups — jjbetweenstatsClass","title":"Violin Plots to Compare Between Groups — jjbetweenstatsClass","text":"Violin Plots Compare Groups Violin Plots Compare Groups","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstatsClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Violin Plots to Compare Between Groups — jjbetweenstatsClass","text":"jmvcore::Analysis -> jjstatsplot::jjbetweenstatsBase -> jjbetweenstatsClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstatsClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Violin Plots to Compare Between Groups — jjbetweenstatsClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jjbetweenstatsBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstatsClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Violin Plots to Compare Between Groups — jjbetweenstatsClass","text":"jjbetweenstatsClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstatsClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Violin Plots to Compare Between Groups — jjbetweenstatsClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstatsClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Violin Plots to Compare Between Groups — jjbetweenstatsClass","text":"","code":"jjbetweenstatsClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjbetweenstatsClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Violin Plots to Compare Between Groups — jjbetweenstatsClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation Matrix — jjcorrmat","title":"Correlation Matrix — jjcorrmat","text":"Wrapper Function ggstatsplot::ggcorrmat ggstatsplot::grouped_ggcorrmat generate correlation matrix visualizations significance testing.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation Matrix — jjcorrmat","text":"","code":"jjcorrmat(   data,   dep,   grvar,   typestatistics = \"parametric\",   matrixtype = \"upper\",   matrixmethod = \"square\",   siglevel = 0.05,   conflevel = 0.95,   padjustmethod = \"holm\",   k = 2,   partial = FALSE,   clinicalpreset = \"custom\",   lowcolor = \"#E69F00\",   midcolor = \"white\",   highcolor = \"#009E73\",   title = \"\",   subtitle = \"\",   caption = \"\",   plotwidth = 600,   plotheight = 450 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation Matrix — jjcorrmat","text":"data data data frame. dep List continuous variables correlation matrix computed visualized. variables must numeric. grvar Optional grouping variable create separate correlation matrices level grouping variable. typestatistics Type correlation analysis perform. 'parametric' uses Pearson correlation, 'nonparametric' uses Spearman's rho, 'robust' uses percentage bend correlation, 'bayes' computes Bayes factors. matrixtype Display upper triangular, lower triangular full matrix. matrixmethod visualization method correlation matrix used. siglevel Significance level marking correlations insignificant. conflevel Confidence level confidence intervals. padjustmethod Adjustment method multiple comparisons. k Number decimal places displaying correlation coefficients. partial Compute partial correlations instead zero-order correlations. Partial correlations control variables analysis. clinicalpreset Pre-configured settings optimized common clinical correlation scenarios. Biomarker: Focus molecular correlations robust methods. Lab Values: Emphasize clinical laboratory parameter relationships. Imaging: Specialized radiological pathological imaging metrics. lowcolor Color low (negative) correlation values. midcolor Color mid (zero) correlation values. highcolor Color high (positive) correlation values. title Title correlation matrix plot. subtitle Subtitle correlation matrix plot. caption Caption correlation matrix plot. plotwidth Width correlation matrix plot pixels. Default 600. plotheight Height correlation matrix plot pixels. Default 450.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation Matrix — jjcorrmat","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation Matrix — jjcorrmat","text":"","code":"# \\donttest{ # Load test data data(\"mtcars\")  # Basic correlation matrix with defaults jjcorrmat(   data = mtcars,   dep = c(\"mpg\", \"hp\", \"wt\", \"qsec\"),   typestatistics = \"parametric\" ) #> Error in jjcorrmat(data = mtcars, dep = c(\"mpg\", \"hp\", \"wt\", \"qsec\"),     typestatistics = \"parametric\"): argument \"grvar\" is missing, with no default  # Customized correlation matrix jjcorrmat(   data = mtcars,   dep = c(\"mpg\", \"hp\", \"wt\", \"qsec\", \"disp\"),   typestatistics = \"nonparametric\",   matrixtype = \"lower\",   matrixmethod = \"circle\",   padjustmethod = \"bonferroni\",   k = 3,   lowcolor = \"blue\",   midcolor = \"white\",   highcolor = \"red\",   title = \"Motor Trend Car Correlations\" ) #> Error in jjcorrmat(data = mtcars, dep = c(\"mpg\", \"hp\", \"wt\", \"qsec\", \"disp\"),     typestatistics = \"nonparametric\", matrixtype = \"lower\", matrixmethod = \"circle\",     padjustmethod = \"bonferroni\", k = 3, lowcolor = \"blue\", midcolor = \"white\",     highcolor = \"red\", title = \"Motor Trend Car Correlations\"): argument \"grvar\" is missing, with no default  # Grouped correlation matrix by number of cylinders jjcorrmat(   data = mtcars,   dep = c(\"mpg\", \"hp\", \"wt\", \"qsec\"),   grvar = \"cyl\",   typestatistics = \"robust\",   siglevel = 0.01 ) #>  #>  CORRELATION MATRIX #>  #>  Preparing correlation analysis options... #>  #> character(0)   # }"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmatClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation Matrix — jjcorrmatClass","title":"Correlation Matrix — jjcorrmatClass","text":"Correlation Matrix Correlation Matrix","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmatClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Correlation Matrix — jjcorrmatClass","text":"jmvcore::Analysis -> jjstatsplot::jjcorrmatBase -> jjcorrmatClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmatClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Correlation Matrix — jjcorrmatClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jjcorrmatBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmatClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Correlation Matrix — jjcorrmatClass","text":"jjcorrmatClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmatClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Correlation Matrix — jjcorrmatClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmatClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation Matrix — jjcorrmatClass","text":"","code":"jjcorrmatClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjcorrmatClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation Matrix — jjcorrmatClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot Chart — jjdotplotstats","title":"Dot Chart — jjdotplotstats","text":"Wrapper Function ggstatsplot::ggdotplotstats ggstatsplot::grouped_ggdotplotstats generate dot plots comparing continuous variables groups statistical annotations significance testing.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot Chart — jjdotplotstats","text":"","code":"jjdotplotstats(   data,   dep,   group,   grvar,   typestatistics = \"parametric\",   effsizetype = \"biased\",   centralityplotting = FALSE,   centralitytype = \"parametric\",   mytitle = \"\",   xtitle = \"\",   ytitle = \"\",   originaltheme = FALSE,   resultssubtitle = FALSE,   testvalue = 0,   bfmessage = FALSE,   conflevel = 0.95,   k = 2,   testvalueline = FALSE,   centralityparameter = \"mean\",   centralityk = 2,   plotwidth = 650,   plotheight = 450,   guidedMode = FALSE,   clinicalPreset = \"basic\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot Chart — jjdotplotstats","text":"data data data frame. dep continuous numeric variable distribution displayed across different groups using dot plots. group categorical variable defines groups comparison. level displayed separate group dot plot. grvar Optional grouping variable create separate dot plots level variable (grouped analysis). typestatistics Choose appropriate statistical test: Parametric (t-test) assumes normal distribution equal variances; Nonparametric (Mann-Whitney U) makes distribution assumptions; Robust uses trimmed means handle outliers; Bayesian provides evidence strength via Bayes factors. effsizetype Effect size quantifies practical significance: Cohen's d shows standardized difference groups (small=0.2, medium=0.5, large=0.8); Hedge's g corrects small samples; Eta/Omega-squared show proportion variance explained (small=0.01, medium=0.06, large=0.14). centralityplotting Display lines showing central tendency (mean, median, trimmed mean) group. Helps visualize group differences glance. centralitytype Type central tendency display: Mean average sensitive outliers; Median middle value robust outliers; Trimmed mean excludes extreme values; Bayesian provides probabilistic estimate. mytitle Main title plot. Leave blank automatic title generation based variables. xtitle Label horizontal axis showing continuous variable values. Leave blank use variable name. ytitle Label vertical axis showing group categories. Leave blank use variable name. originaltheme Use original ggstatsplot theme instead jamovi's default theme. original theme may suitable publications. resultssubtitle Display statistical test results (p-value, effect size, confidence interval) subtitle plot. Recommended analyses. testvalue Reference value hypothesis testing (usually 0 group comparisons). Can changed test specific clinically meaningful value. bfmessage Display Bayes Factor interpretation (evidence strength) using Bayesian analysis. BF > 3 indicates moderate evidence, BF > 10 strong evidence. conflevel Confidence level intervals (0.95 = 95\\ interval). represents probability true population parameter lies within calculated interval. 95\\ analyses. k Number decimal places statistical results (p-values, effect sizes). decimal places show greater precision may clinically meaningful. testvalueline Display vertical reference line test value. Useful showing clinically significant thresholds normal reference ranges. centralityparameter central tendency measure show vertical line plot. Mean sensitive outliers; median robust skewed data. centralityk Decimal places central tendency values displayed plot. match precision meaningful measurement scale. plotwidth Width plot pixels. Larger values provide detail may fit well reports. Default: 650 pixels. plotheight Height plot pixels. Adjust based number groups ensure readability. Default: 450 pixels. guidedMode Enable step--step guidance clinical researchers. Provides recommendations test selection interpretation. clinicalPreset Pre-configured analysis settings optimized different use cases. Basic: Simple comparison key statistics; Publication: Journal-ready formatting; Clinical: Medical report optimization; Custom: Full control.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dot Chart — jjdotplotstats","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dot Chart — jjdotplotstats","text":"","code":"# Basic dot plot with iris dataset jjdotplotstats(     data = iris,     dep = \"Sepal.Length\",     group = \"Species\",     typestatistics = \"parametric\" ) #> Error in jjdotplotstats(data = iris, dep = \"Sepal.Length\", group = \"Species\",     typestatistics = \"parametric\"): argument \"grvar\" is missing, with no default  # Advanced dot plot with custom settings jjdotplotstats(     data = iris,     dep = \"Petal.Width\",     group = \"Species\",     typestatistics = \"nonparametric\",     centralityplotting = TRUE,     centralitytype = \"nonparametric\",     testvalueline = TRUE,     testvalue = 1.0,     mytitle = \"Petal Width by Species\",     xtitle = \"Petal Width (cm)\",     ytitle = \"Species\" ) #> Error in jjdotplotstats(data = iris, dep = \"Petal.Width\", group = \"Species\",     typestatistics = \"nonparametric\", centralityplotting = TRUE,     centralitytype = \"nonparametric\", testvalueline = TRUE, testvalue = 1,     mytitle = \"Petal Width by Species\", xtitle = \"Petal Width (cm)\",     ytitle = \"Species\"): argument \"grvar\" is missing, with no default  # Grouped analysis with mtcars dataset jjdotplotstats(     data = mtcars,     dep = \"mpg\",     group = \"cyl\",     grvar = \"am\",     typestatistics = \"robust\",     centralityplotting = TRUE,     centralitytype = \"robust\",     effsizetype = \"unbiased\",     conflevel = 0.99,     k = 3 ) #>  #>  DOT CHART #>  #>  Processing data for dot plot analysis... #>  #>  ℹ️ 1 potential outlier(s) detected in mpg #>  #>  📊 Analysis summary: 3 groups, 32 total observations #>  #>  <div style='background-color: #f8f9fa; padding: 15px; border-left: 4px #>  solid #007bff; margin: 10px 0;'><h4 style='color: #007bff; margin-top: #>  0;'>📊 Clinical Interpretation #>  #>  Analysis: This dot plot shows the distribution of mpg across different #>  cyl categories using a robust test using trimmed means. #>  #>  Sample: Group '4' (n=11), Group '6' (n=7) #>  #>  Results: Group '4' shows a central value of 26.66 vs Group '6' with a #>  central value of 19.74. #>  #>  *💡 Tip: The statistical significance and effect size will be #>  displayed in the plot subtitle when the analysis completes.* #>  #>  <div style='background-color: #fff3cd; padding: 15px; border-left: 4px #>  solid #ffc107; margin: 10px 0;'><h4 style='color: #856404; margin-top: #>  0;'>🔍 Data Assessment & Recommendations #>  #>  ⚠️ Small sample sizes (n < 10 in some groups). Consider descriptive #>  analysis only. #>  #>  ✓ Approximately normal distribution suitable for parametric tests. #>  #>  ✓ Robust test handles outliers and non-normal distributions well. #>  #>  <hr style='border-color: #ffeaa7;'> #>  #>  Sample sizes by group: #>  4 : n = 11 #>  6 : n = 7 #>  8 : n = 14 #>  #>  <div style='background-color: #e7f3ff; padding: 15px; border-left: 4px #>  solid #0066cc; margin: 10px 0;'><h4 style='color: #0066cc; margin-top: #>  0;'>📝 Copy-Ready Report Sentence #>  #>  <div style='background-color: white; padding: 10px; border: 1px dashed #>  #0066cc; font-family: \"Times New Roman\", serif;'> #>  #>  A robust comparison test was performed to compare *mpg* between *cyl* #>  groups. The dot plot visualization shows the distribution and central #>  tendencies across groups, with statistical results displayed in the #>  plot subtitle including effect size and significance testing. #>  #>  *💡 Click to select the text above and copy to your report. #>  Statistical values will be automatically filled when the analysis #>  completes.* #>  #> character(0) #>  #> character(0)    # Bayesian analysis with ToothGrowth dataset jjdotplotstats(     data = ToothGrowth,     dep = \"len\",     group = \"supp\",     typestatistics = \"bayes\",     bfmessage = TRUE,     centralityparameter = \"mean\",     mytitle = \"Tooth Growth by Supplement Type\" ) #> Error in jjdotplotstats(data = ToothGrowth, dep = \"len\", group = \"supp\",     typestatistics = \"bayes\", bfmessage = TRUE, centralityparameter = \"mean\",     mytitle = \"Tooth Growth by Supplement Type\"): argument \"grvar\" is missing, with no default"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstatsClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot Chart — jjdotplotstatsClass","title":"Dot Chart — jjdotplotstatsClass","text":"Dot Chart Dot Chart","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstatsClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Dot Chart — jjdotplotstatsClass","text":"jmvcore::Analysis -> jjstatsplot::jjdotplotstatsBase -> jjdotplotstatsClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstatsClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Dot Chart — jjdotplotstatsClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jjdotplotstatsBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstatsClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dot Chart — jjdotplotstatsClass","text":"jjdotplotstatsClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstatsClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Dot Chart — jjdotplotstatsClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstatsClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot Chart — jjdotplotstatsClass","text":"","code":"jjdotplotstatsClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjdotplotstatsClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot Chart — jjdotplotstatsClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostats.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram — jjhistostats","title":"Histogram — jjhistostats","text":"'Wrapper Function ggstatsplot::gghistostats ggstatsplot::grouped_gghistostats generate Histogram.'","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram — jjhistostats","text":"","code":"jjhistostats(   data,   dep,   grvar,   typestatistics = \"parametric\",   centralityline = FALSE,   changebinwidth = FALSE,   binwidth = 1.1,   resultssubtitle = FALSE,   showInterpretation = FALSE,   clinicalPreset = \"custom\",   test.value = 0,   conf.level = 0.95,   bf.message = FALSE,   digits = 2,   xlab = \"\",   title = \"\",   subtitle = \"\",   caption = \"\",   centralitytype = \"default\",   binfill = \"skyblue\",   bincolor = \"black\",   binalpha = 0.7,   centralitylinecolor = \"blue\",   centralitylinewidth = 1,   centralitylinetype = \"dashed\",   plotwidth = 600,   plotheight = 450 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram — jjhistostats","text":"data data data frame. dep One continuous numeric variables histograms created. Multiple variables displayed separate panels. grvar Optional grouping variable create separate histograms level variable (grouped analysis). typestatistics Type statistical test normality assessment. 'parametric' uses Shapiro-Wilk test, 'nonparametric' uses Anderson-Darling test, 'robust' uses robust normality tests, 'bayes' provides Bayesian analysis. centralityline Whether display vertical line indicating measure central tendency (mean parametric, median nonparametric). changebinwidth Whether manually specify bin width. FALSE, automatic bin width calculation used. binwidth Manual bin width histogram. used changebinwidth TRUE. Smaller values create bins, larger values create fewer bins. resultssubtitle Whether display statistical test results subtitle plot, including normality test results descriptive statistics. showInterpretation Generate clinical interpretation histogram results including distribution shape,  normality assessment, practical implications clinical data. clinicalPreset Predefined configurations optimized common clinical data types. Automatically sets appropriate statistical methods visualization options. test.value Value compare sample one-sample test. Default 0. conf.level Confidence level confidence intervals (0 1). bf.message Whether display Bayes Factor subtitle using Bayesian analysis. digits Number decimal places displaying statistics subtitle. xlab Custom label x-axis. empty, variable name used. title Title plot. subtitle Subtitle plot (overrides statistical results provided). caption Caption text display bottom plot. centralitytype Type central tendency measure display. 'Default' uses appropriate measure based statistical test type selected. binfill Fill color histogram bins. bincolor Border color histogram bins. binalpha Transparency level histogram bins (0 = fully transparent, 1 = opaque). centralitylinecolor Color vertical centrality line. centralitylinewidth Width vertical centrality line. centralitylinetype Line type vertical centrality line. plotwidth Width plot pixels. Default 600. plotheight Height plot pixels. Default 450.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram — jjhistostats","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram — jjhistostats","text":"","code":"# \\donttest{ # Load test data data(jjhistostats_test_data) #> Warning: data set ‘jjhistostats_test_data’ not found  # Basic histogram jjhistostats(   data = jjhistostats_test_data,   dep = \"age_years\",   typestatistics = \"parametric\" ) #> Error in jjhistostats(data = jjhistostats_test_data, dep = \"age_years\",     typestatistics = \"parametric\"): argument \"grvar\" is missing, with no default  # Multiple histograms jjhistostats(   data = jjhistostats_test_data,   dep = c(\"age_years\", \"tumor_size_mm\", \"bmi\"),   centralityline = TRUE,   resultssubtitle = TRUE ) #> Error in jjhistostats(data = jjhistostats_test_data, dep = c(\"age_years\",     \"tumor_size_mm\", \"bmi\"), centralityline = TRUE, resultssubtitle = TRUE): argument \"grvar\" is missing, with no default  # Grouped histogram by disease stage jjhistostats(   data = jjhistostats_test_data,   dep = \"psa_level\",   grvar = \"disease_stage\",   typestatistics = \"nonparametric\",   changebinwidth = TRUE,   binwidth = 2.0 ) #> Error: object 'jjhistostats_test_data' not found # }"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostatsClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram — jjhistostatsClass","title":"Histogram — jjhistostatsClass","text":"Histogram Histogram","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostatsClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Histogram — jjhistostatsClass","text":"jmvcore::Analysis -> jjstatsplot::jjhistostatsBase -> jjhistostatsClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostatsClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Histogram — jjhistostatsClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jjhistostatsBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostatsClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Histogram — jjhistostatsClass","text":"jjhistostatsClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostatsClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Histogram — jjhistostatsClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostatsClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram — jjhistostatsClass","text":"","code":"jjhistostatsClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjhistostatsClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram — jjhistostatsClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestats.html","id":null,"dir":"Reference","previous_headings":"","what":"Pie Charts — jjpiestats","title":"Pie Charts — jjpiestats","text":"'Wrapper Function ggstatsplot::ggpiestats ggstatsplot::grouped_ggpiestats generate Pie Charts statistical analysis.'","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pie Charts — jjpiestats","text":"","code":"jjpiestats(   data,   dep,   group = NULL,   grvar = NULL,   typestatistics = \"parametric\",   originaltheme = FALSE,   counts = NULL,   ratio = \"\",   paired = FALSE,   label = \"percentage\",   digits = 2,   conflevel = 0.95,   proportiontest = TRUE,   bfmessage = TRUE,   messages = FALSE,   clinicalpreset = \"custom\",   showexplanations = TRUE,   resultssubtitle = FALSE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pie Charts — jjpiestats","text":"data data data frame. dep categorical variable display pie chart. variable used create pie slices representing proportion category. Must factor variable. group Optional grouping variable creating contingency table analysis. specified, creates 2x2 2xN contingency table performs association tests (Chi-square, Fisher's exact test, etc.). grvar Optional variable create separate pie charts level grouping variable. Creates panel pie charts, one group level (e.g., separate charts treatment center study site). typestatistics Type statistical test categorical association analysis. 'parametric' uses Pearson's Chi-square test, 'nonparametric' uses contingency table tests, 'robust' uses robust association measures, 'bayes' provides Bayesian analysis Bayes factors. originaltheme Whether apply original ggstatsplot theme layer plot. TRUE, uses ggstatsplot's default styling. FALSE, uses jamovi's default ggplot2 theme consistency analyses. counts variable data containing counts, NULL row represents single observation. Use data  already aggregated/tabulated. ratio comma-separated list expected proportions proportion test  (sum 1). example: '0.5,0.5' two equal groups  '0.25,0.25,0.25,0.25' four equal groups. Leave empty equal  theoretical proportions. paired Logical indicating whether data came within-subjects repeated measures design study (Default: FALSE). TRUE, McNemar's test used. FALSE, Pearson's chi-square test used. label information needs displayed label  pie slice. digits Number digits decimal point statistical results. conflevel Confidence/credible interval level. proportiontest Decides whether proportion test x variable  carried level y. bfmessage Display Bayes Factor favor null hypothesis. relevant parametric test. messages Display statistical messages console.  Disabling improves performance. clinicalpreset Predefined configurations common clinical scenarios.  Automatically sets appropriate statistical methods parameters. showexplanations Display detailed explanations statistical methods, assumptions,  clinical interpretations guide analysis result interpretation. resultssubtitle Whether display statistical test results subtitle pie chart. Shows test statistics, p-values, effect sizes, confidence intervals categorical association tests. Provides detailed statistical summary.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pie Charts — jjpiestats","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pie Charts — jjpiestats","text":"","code":"# \\donttest{ # Load test data data(jjpiestats_test_data) #> Warning: data set ‘jjpiestats_test_data’ not found  # Basic pie chart jjpiestats(   data = jjpiestats_test_data,   dep = \"treatment_response\",   typestatistics = \"parametric\" ) #> Error: object 'jjpiestats_test_data' not found  # Pie chart with grouping jjpiestats(   data = jjpiestats_test_data,   dep = \"treatment_response\",   group = \"treatment_arm\",   resultssubtitle = TRUE ) #> Error: object 'jjpiestats_test_data' not found  # Grouped pie charts by split variable jjpiestats(   data = jjpiestats_test_data,   dep = \"disease_severity\",   group = \"gender\",   grvar = \"hospital_site\",   typestatistics = \"nonparametric\" ) #> Error: object 'jjpiestats_test_data' not found # }"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestatsClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Pie Charts — jjpiestatsClass","title":"Pie Charts — jjpiestatsClass","text":"Pie Charts Pie Charts","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestatsClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Pie Charts — jjpiestatsClass","text":"jmvcore::Analysis -> jjstatsplot::jjpiestatsBase -> jjpiestatsClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestatsClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Pie Charts — jjpiestatsClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jjpiestatsBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestatsClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Pie Charts — jjpiestatsClass","text":"jjpiestatsClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestatsClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Pie Charts — jjpiestatsClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestatsClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pie Charts — jjpiestatsClass","text":"","code":"jjpiestatsClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjpiestatsClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pie Charts — jjpiestatsClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridges.html","id":null,"dir":"Reference","previous_headings":"","what":"Ridge Plot — jjridges","title":"Ridge Plot — jjridges","text":"'Create advanced ridgeline plots. Visualize distributions across groups multiple style options, annotations, statistical overlays, publication-ready formatting. Supports basic complex ridge plots inside plots, double ridgelines, color gradients.'","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ridge Plot — jjridges","text":"","code":"jjridges(   data,   x_var,   y_var,   fill_var = NULL,   facet_var = NULL,   plot_type = \"density_ridges\",   scale = 1,   bandwidth = \"nrd0\",   bandwidth_value = 1,   binwidth = 1,   add_boxplot = FALSE,   add_points = FALSE,   point_alpha = 0.3,   add_quantiles = FALSE,   quantiles = \"0.25, 0.5, 0.75\",   add_mean = FALSE,   add_median = FALSE,   show_stats = FALSE,   test_type = \"parametric\",   p_adjust_method = \"none\",   effsize_type = \"d\",   alpha = 0.8,   color_palette = \"clinical_colorblind\",   custom_colors = \"#3498db,#e74c3c,#2ecc71,#f39c12\",   gradient_low = \"#0000FF\",   gradient_high = \"#FF0000\",   fill_ridges = TRUE,   reverse_order = FALSE,   show_fill_legend = TRUE,   show_facet_legend = TRUE,   theme_style = \"theme_ridges\",   grid_lines = FALSE,   expand_panels = TRUE,   legend_position = \"none\",   plot_title = \"\",   plot_subtitle = \"\",   plot_caption = \"\",   x_label = \"\",   y_label = \"\",   add_sample_size = FALSE,   add_density_values = FALSE,   custom_annotations = \"\",   width = 800,   height = 600,   dpi = 300 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ridge Plot — jjridges","text":"data data data frame. x_var continuous variable display distributions (e.g., biomarker values, age, tumor size). group show distribution pattern variable. y_var grouping variable comparison (e.g., disease stage, treatment group, pathology grade). group creates separate ridge visual comparison. fill_var Optional variable color/fill mapping within ridges. Creates color-coded segments within ridge. facet_var Optional variable creating separate panels. Useful comparing ridge plots across another dimension. plot_type Type ridge plot. 'density_ridges' smooth curves, 'density_ridges_gradient' adds color gradients, 'histogram_ridges' discrete bins, 'violin_ridges' violin-style plots, 'double_ridges' comparing two distributions. scale Controls ridge height overlap. Values > 1 create overlapping ridges, < 1 creates separation ridges. bandwidth Bandwidth selection density estimation. Controls smoothness curves. bandwidth_value Custom bandwidth value bandwidth method 'custom'. binwidth Width bins histogram-style ridges. add_boxplot Add boxplot elements inside ridge enhanced visualization quartiles outliers. add_points Show individual data points ridges jittered points. point_alpha Transparency data points shown. add_quantiles Add vertical lines specified quantiles within ridge. quantiles Comma-separated quantile values display vertical lines. add_mean Add vertical line mean distribution. add_median Add vertical line median distribution. show_stats Display statistical annotations including p-values effect sizes using ggstatsplot functionality. test_type Type statistical test group comparisons show_stats TRUE. p_adjust_method Method adjusting p-values multiple comparisons. effsize_type Type effect size calculate display. skewed data (like lymph node counts),  consider using nonparametric effect sizes: Cliff's Delta shows probability one group  higher values, Hodges-Lehmann shift shows typical difference units. alpha Transparency level ridge fills. color_palette Color palette ridges. 'Clinical' optimized accessibility medical publications. Viridis family also colorblind-friendly. custom_colors Comma-separated list custom colors palette 'custom'. gradient_low Low value color gradient plots. gradient_high High value color gradient plots. fill_ridges Whether fill ridges color show outlines. reverse_order Reverse vertical order groups. show_fill_legend Show legend fill variable fill variable specified. show_facet_legend Show facet labels faceting used. theme_style Overall plot theme style. grid_lines Whether show grid lines plot. expand_panels Remove space around plot area cleaner look. legend_position Position color legend. plot_title Main plot title. plot_subtitle Plot subtitle additional context. plot_caption Caption data source notes. x_label Custom label X axis. y_label Custom label Y axis. add_sample_size Display sample size (n) group. add_density_values Display density values peaks. custom_annotations Custom text annotations format 'x,y,text;x2,y2,text2'. width Width plot pixels. height Height plot pixels. dpi Resolution plot export.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ridge Plot — jjridges","text":"results object containing: Tables can converted data frames asDF .data.frame. example: results$statistics$asDF .data.frame(results$statistics)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ridge Plot — jjridges","text":"","code":"# \\donttest{ # Basic ridgeline plot jjridges(   data = iris,   x_var = \"Sepal.Length\",   y_var = \"Species\" ) #> Warning: Ignoring unknown parameters: `size` #>  #>  ADVANCED RIDGE PLOT #>  #>  <div class='clinical-summary' style='background:#f8f9fa; #>  border-left:4px solid #007bff; padding:15px; margin:10px 0;'><h4 #>  style='color:#007bff; margin-top:0;'>Clinical Summary #>  #>  Analysis: Ridge plot comparing the distribution of Sepal.Length across #>  3 groups defined by Species. #>  #>  Sample: n = 150 total observations across all groups. #>  #>  Interpretation Guide: #>  #>  <ul style='margin-bottom:10px;'>Ridge Shape: Wider ridges = more #>  variability; Narrow ridges = consistent valuesRidge Position: #>  Left/right shift indicates lower/higher average valuesMultiple Peaks: #>  May indicate subgroups or distinct clinical phenotypesOverlap: Similar #>  distributions between groups; Separation = distinct patterns #>  #>  Statistical Summary                                                                                              #>  ───────────────────────────────────────────────────────────────────────────────────────────────────────────────  #>    Group         N     Mean         SD           Median       Q1           Q3           Min          Max          #>  ───────────────────────────────────────────────────────────────────────────────────────────────────────────────  #>    setosa        50    5.0060000    0.3524897    5.0000000    4.8000000    5.2000000    4.3000000    5.8000000    #>    versicolor    50    5.9360000    0.5161711    5.9000000    5.6000000    6.3000000    4.9000000    7.0000000    #>    virginica     50    6.5880000    0.6358796    6.5000000    6.2250000    6.9000000    4.9000000    7.9000000    #>  ───────────────────────────────────────────────────────────────────────────────────────────────────────────────  #>  #>  #>  <div class='clinical-summary' style='background:#f8f9fa; #>  border-left:4px solid #007bff; padding:15px; margin:10px 0;'><h4 #>  style='color:#007bff; margin-top:0;'>Clinical Summary #>  #>  Analysis: Ridge plot comparing the distribution of Sepal.Length across #>  3 groups defined by Species. #>  #>  Sample: n = 150 total observations across all groups. #>  #>  Interpretation Guide: #>  #>  <ul style='margin-bottom:10px;'>Ridge Shape: Wider ridges = more #>  variability; Narrow ridges = consistent valuesRidge Position: #>  Left/right shift indicates lower/higher average valuesMultiple Peaks: #>  May indicate subgroups or distinct clinical phenotypesOverlap: Similar #>  distributions between groups; Separation = distinct patterns #>  #>  Technical Interpretation #>  #>  The ridge plot displays the distribution of Sepal.Length across 3 #>  groups defined by Species. #>  #>  Each ridge: Shows the probability density or frequency distribution #>  for a groupOverlapping areas: Indicate similar value ranges between #>  groupsRidge height and spread: Indicate the concentration and #>  variability of valuesPeaks: Show the most common values (modes) within #>  each group   # Advanced with statistics jjridges(   data = mtcars,   x_var = \"mpg\",   y_var = \"cyl\",   plot_type = \"density_ridges_gradient\",   show_stats = TRUE,   add_boxplot = TRUE ) #>  #>  ADVANCED RIDGE PLOT #>  #>  <div class='clinical-summary' style='background:#f8f9fa; #>  border-left:4px solid #007bff; padding:15px; margin:10px 0;'><h4 #>  style='color:#007bff; margin-top:0;'>Clinical Summary #>  #>  Analysis: Ridge plot comparing the distribution of mpg across 3 groups #>  defined by cyl. #>  #>  Sample: n = 32 total observations across all groups. #>  #>  Interpretation Guide: #>  #>  <ul style='margin-bottom:10px;'>Ridge Shape: Wider ridges = more #>  variability; Narrow ridges = consistent valuesRidge Position: #>  Left/right shift indicates lower/higher average valuesMultiple Peaks: #>  May indicate subgroups or distinct clinical phenotypesOverlap: Similar #>  distributions between groups; Separation = distinct patterns #>  #>  Statistical Summary                                                                                               #>  ────────────────────────────────────────────────────────────────────────────────────────────────────────────────  #>    Group    N     Mean          SD           Median        Q1            Q3            Min           Max           #>  ────────────────────────────────────────────────────────────────────────────────────────────────────────────────  #>    4        11    26.6636364    4.5098277    26.0000000    22.8000000    30.4000000    21.4000000    33.9000000    #>    6         7    19.7428571    1.4535670    19.7000000    18.6500000    21.0000000    17.8000000    21.4000000    #>    8        14    15.1000000    2.5600481    15.2000000    14.4000000    16.2500000    10.4000000    19.2000000    #>  ────────────────────────────────────────────────────────────────────────────────────────────────────────────────  #>  #>  #>  Statistical Tests                                                                                   #>  ──────────────────────────────────────────────────────────────────────────────────────────────────  #>    Comparison    Statistic     P-value      P-adj        Effect Size    CI Lower       CI Upper      #>  ──────────────────────────────────────────────────────────────────────────────────────────────────  #>    6 vs 4        -4.7190594    0.0004048    0.0004048     -1.8833246    -10.0901820    -3.7513765    #>    6 vs 8         5.2911346    0.0000454    0.0000454      2.0456036      2.8029253     6.4827890    #>    4 vs 8         7.5966641    0.0000016    0.0000016      3.2645335      8.3185176    14.8087551    #>  ──────────────────────────────────────────────────────────────────────────────────────────────────  #>  #>  #>  <div class='clinical-summary' style='background:#f8f9fa; #>  border-left:4px solid #007bff; padding:15px; margin:10px 0;'><h4 #>  style='color:#007bff; margin-top:0;'>Clinical Summary #>  #>  Analysis: Ridge plot comparing the distribution of mpg across 3 groups #>  defined by cyl. #>  #>  Sample: n = 32 total observations across all groups. #>  #>  Interpretation Guide: #>  #>  <ul style='margin-bottom:10px;'>Ridge Shape: Wider ridges = more #>  variability; Narrow ridges = consistent valuesRidge Position: #>  Left/right shift indicates lower/higher average valuesMultiple Peaks: #>  May indicate subgroups or distinct clinical phenotypesOverlap: Similar #>  distributions between groups; Separation = distinct patterns #>  #>  Technical Interpretation #>  #>  The ridge plot displays the distribution of mpg across 3 groups #>  defined by cyl. #>  #>  Each ridge: Shows the probability density or frequency distribution #>  for a groupOverlapping areas: Indicate similar value ranges between #>  groupsRidge height and spread: Indicate the concentration and #>  variability of valuesPeaks: Show the most common values (modes) within #>  each group<div style='background:#e3f2fd; padding:10px; margin:10px 0; #>  border-radius:4px;'>🎨 Gradient Coloring: Colors represent the value #>  of mpg along each ridge, helping visualize how values are distributed #>  within groups.<div style='background:#e8f5e8; padding:10px; #>  margin:10px 0; border-radius:4px;'>📊 Boxplots: Show median (center #>  line), quartiles (box boundaries), and outliers for each group. #>  Compare medians and quartile ranges across groups for clinical #>  significance.<div style='background:#fff3e0; padding:10px; margin:10px #>  0; border-radius:4px;'>📈 Statistical Tests: Pairwise comparisons test #>  whether group differences are statistically significant. Consider #>  effect sizes alongside p-values for clinical importance. Adjust for #>  multiple comparisons when appropriate.  # }"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridgesClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Advanced Ridge Plot — jjridgesClass","title":"Advanced Ridge Plot — jjridgesClass","text":"Creates advanced ridgeline plots combining features ggridges ggstatsplot","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridgesClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Advanced Ridge Plot — jjridgesClass","text":"jmvcore::Analysis -> jjstatsplot::jjridgesBase -> jjridgesClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridgesClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Advanced Ridge Plot — jjridgesClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jjridgesBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridgesClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Advanced Ridge Plot — jjridgesClass","text":"jjridgesClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridgesClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Advanced Ridge Plot — jjridgesClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridgesClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Advanced Ridge Plot — jjridgesClass","text":"","code":"jjridgesClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjridgesClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Advanced Ridge Plot — jjridgesClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter Plot — jjscatterstats","title":"Scatter Plot — jjscatterstats","text":"Wrapper Function ggstatsplot::ggscatterstats ggstatsplot::grouped_ggscatterstats generate scatter plots correlation analysis optional marginal distributions.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter Plot — jjscatterstats","text":"","code":"jjscatterstats(   data,   dep,   group,   grvar = NULL,   typestatistics = \"parametric\",   mytitle = \"\",   xtitle = \"\",   ytitle = \"\",   originaltheme = FALSE,   resultssubtitle = FALSE,   conflevel = 0.95,   bfmessage = FALSE,   k = 2,   marginal = FALSE,   xsidefill = \"#009E73\",   ysidefill = \"#D55E00\",   pointsize = 3,   pointalpha = 0.4,   smoothlinesize = 1.5,   smoothlinecolor = \"blue\",   plotwidth = 600,   plotheight = 450 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter Plot — jjscatterstats","text":"data data data frame. dep First continuous variable correlation analysis (e.g., biomarker levels, age, tumor size).  appear horizontal axis. Use numeric variables like lab values, measurements, scores. group Second continuous variable correlation analysis (e.g., expression levels, treatment response, survival time).  appear vertical axis. Use numeric variables want correlate x-axis variable. grvar Optional categorical variable create separate correlation plots group  (e.g., treatment group, tumor stage, gender). Creates multiple panels comparison. typestatistics Choose based data distribution. Pearson assumes normality (common lab values transformation).  Spearman works monotonic relationship (tumor grades, symptom scores). Robust methods handle outlying patients. Bayesian analysis quantifies evidence strength clinical decision-making. mytitle . xtitle . ytitle . originaltheme . resultssubtitle . conflevel Confidence level confidence intervals (0 1). bfmessage Whether display Bayes Factor subtitle using Bayesian analysis. k Number decimal places displaying statistics subtitle. marginal Whether display marginal histogram plots axes using ggside. xsidefill Fill color x-axis marginal histogram. ysidefill Fill color y-axis marginal histogram. pointsize Size scatter plot points. pointalpha Transparency level scatter plot points. smoothlinesize Width regression/smooth line. smoothlinecolor Color regression/smooth line. plotwidth Width plot pixels. Default 600. plotheight Height plot pixels. Default 450.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter Plot — jjscatterstats","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter Plot — jjscatterstats","text":"","code":"# \\donttest{ # Load test data data(\"mtcars\")  # Basic scatter plot with correlation jjscatterstats(   data = mtcars,   dep = \"mpg\",       # x-axis   group = \"hp\",      # y-axis   typestatistics = \"parametric\",   conflevel = 0.95,   k = 2 ) #>  #>  SCATTER PLOT #>  #>  You have selected to use a scatter plot with correlation analysis.   # Scatter plot with marginal histograms jjscatterstats(   data = mtcars,   dep = \"mpg\",   group = \"hp\",   marginal = TRUE,   xsidefill = \"#009E73\",   ysidefill = \"#D55E00\",   pointsize = 4,   pointalpha = 0.6,   smoothlinesize = 2,   smoothlinecolor = \"red\" ) #>  #>  SCATTER PLOT #>  #>  You have selected to use a scatter plot with correlation analysis.   # Grouped scatter plot by number of cylinders jjscatterstats(   data = mtcars,   dep = \"mpg\",   group = \"hp\",   grvar = \"cyl\",   typestatistics = \"nonparametric\",   bfmessage = FALSE,   resultssubtitle = TRUE ) #>  #>  SCATTER PLOT #>  #>  You have selected to use a scatter plot with correlation analysis. #> Error in terms.formula(formula): invalid model formula in ExtractVars # }"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstatsClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter Plot — jjscatterstatsClass","title":"Scatter Plot — jjscatterstatsClass","text":"Scatter Plot Scatter Plot","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstatsClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Scatter Plot — jjscatterstatsClass","text":"jmvcore::Analysis -> jjstatsplot::jjscatterstatsBase -> jjscatterstatsClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstatsClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Scatter Plot — jjscatterstatsClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jjscatterstatsBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstatsClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Scatter Plot — jjscatterstatsClass","text":"jjscatterstatsClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstatsClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Scatter Plot — jjscatterstatsClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstatsClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter Plot — jjscatterstatsClass","text":"","code":"jjscatterstatsClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjscatterstatsClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter Plot — jjscatterstatsClass","text":"deep Whether make deep clone.","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjsegmentedtotalbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segmented Total Bar Charts — jjsegmentedtotalbar","text":"","code":"jjsegmentedtotalbar(   data,   analysis_preset = \"custom\",   x_var,   y_var,   fill_var,   facet_var = NULL,   show_ggplot2_plot = FALSE,   show_ggsegmented_plot = FALSE,   ggsegmented_labels = TRUE,   ggsegmented_alpha = 0.3,   chart_style = \"clinical\",   color_palette = \"clinical\",   show_percentages = TRUE,   percentage_format = \"integer\",   show_counts = FALSE,   label_threshold = 5,   orientation = \"vertical\",   sort_categories = \"none\",   plot_title = \"\",   x_title = \"\",   y_title = \"Percentage\",   legend_title = \"\",   legend_position = \"right\",   bar_width = 0.8,   plot_width = 10,   plot_height = 6,   add_outline = TRUE,   outline_color = \"white\",   export_ready = TRUE,   show_statistical_tests = FALSE,   confidence_level = 0.95 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjsegmentedtotalbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segmented Total Bar Charts — jjsegmentedtotalbar","text":"data data data frame. analysis_preset Predefined clinical analysis configurations. x_var Categorical variable x-axis categories. y_var Numeric variable segment values. fill_var Categorical variable bar segment colors composition. facet_var Optional variable creating multiple panels. show_ggplot2_plot Show plot using built-ggplot2 implementation. show_ggsegmented_plot Show plot using ggsegmentedtotalbar package. ggsegmented_labels Show value labels ggsegmentedtotalbar plot. ggsegmented_alpha Transparency background boxes ggsegmentedtotalbar. chart_style Overall visual style chart. color_palette Color palette segment fills. show_percentages Whether display percentage labels segments. percentage_format Format percentage display. show_counts Whether display raw count values segments. label_threshold Minimum percentage showing labels (0-50\\ orientationOrientation bars. sort_categoriesHow sort categories. plot_titleMain title plot. x_titleTitle x-axis. y_titleTitle y-axis. legend_titleTitle legend. legend_positionPosition legend. bar_widthWidth bars (0.1 1.0). plot_widthWidth plot inches. plot_heightHeight plot inches. add_outlineWhether add white outlines around segments. outline_colorColor segment outlines. export_readyWhether optimize plot high-quality export. show_statistical_testsWhether perform chi-square tests proportion differences. confidence_levelConfidence level statistical tests (0.80-0.99). results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjsegmentedtotalbarClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Segmented Total Bar Charts — jjsegmentedtotalbarClass","title":"Segmented Total Bar Charts — jjsegmentedtotalbarClass","text":"Create segmented total bar charts (100% stacked bars) show proportional breakdowns within categories. Perfect displaying composition data bar represents 100% segments show relative proportions.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjsegmentedtotalbarClass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Segmented Total Bar Charts — jjsegmentedtotalbarClass","text":"module creates segmented total bar charts using ggplot2, : bar represents 100% total category Segments within bars show relative proportions Colors distinguish different segments Labels can show percentages /raw counts","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjsegmentedtotalbarClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Segmented Total Bar Charts — jjsegmentedtotalbarClass","text":"jmvcore::Analysis -> jjstatsplot::jjsegmentedtotalbarBase -> jjsegmentedtotalbarClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjsegmentedtotalbarClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Segmented Total Bar Charts — jjsegmentedtotalbarClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jjsegmentedtotalbarBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjsegmentedtotalbarClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Segmented Total Bar Charts — jjsegmentedtotalbarClass","text":"jjsegmentedtotalbarClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjsegmentedtotalbarClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Segmented Total Bar Charts — jjsegmentedtotalbarClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjsegmentedtotalbarClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segmented Total Bar Charts — jjsegmentedtotalbarClass","text":"","code":"jjsegmentedtotalbarClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjsegmentedtotalbarClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segmented Total Bar Charts — jjsegmentedtotalbarClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjstatsplot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"jjstatsplot: Wrapper for ggstatsplot — jjstatsplot-package","title":"jjstatsplot: Wrapper for ggstatsplot — jjstatsplot-package","text":"jjstatsplot wrapper ggstatsplot: jjstatsplot help researchers generate plots jamovi based ggstatsplot package. documentation, see Website.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjstatsplot-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"jjstatsplot: Wrapper for ggstatsplot — jjstatsplot-package","text":"jjstatsplot","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjstatsplot-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"jjstatsplot: Wrapper for ggstatsplot — jjstatsplot-package","text":"Maintainer: Serdar Balci serdarbalci@serdarbalci.com (ORCID)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Box-Violin Plots to Compare Within Groups — jjwithinstats","title":"Box-Violin Plots to Compare Within Groups — jjwithinstats","text":"Wrapper Function ggstatsplot::ggwithinstats ggstatsplot::grouped_ggwithinstats generate violin plots repeated measurements within-subjects analysis statistical annotations significance testing.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box-Violin Plots to Compare Within Groups — jjwithinstats","text":"","code":"jjwithinstats(   data,   dep1,   dep2,   dep3 = NULL,   dep4 = NULL,   pointpath = FALSE,   centralitypath = FALSE,   centralityplotting = FALSE,   centralitytype = \"parametric\",   clinicalpreset = \"custom\",   typestatistics = \"parametric\",   pairwisecomparisons = FALSE,   pairwisedisplay = \"significant\",   padjustmethod = \"holm\",   effsizetype = \"biased\",   violin = TRUE,   boxplot = TRUE,   point = FALSE,   mytitle = \"Within Group Comparison\",   xtitle = \"\",   ytitle = \"\",   originaltheme = FALSE,   resultssubtitle = FALSE,   bfmessage = FALSE,   conflevel = 0.95,   k = 2,   plotwidth = 650,   plotheight = 450 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box-Violin Plots to Compare Within Groups — jjwithinstats","text":"data data data frame. dep1 . dep2 . dep3 . dep4 . pointpath . centralitypath . centralityplotting Display mean/median lines across time points visualize overall trend.  Helps identify group whole improving, declining, stable time. centralitytype . clinicalpreset Choose preset optimized common clinical scenarios, select Custom manual configuration. typestatistics Parametric: Assumes normal distribution, powerful appropriate.  Nonparametric: distribution assumptions, robust skewed biomarker data. Robust: Uses trimmed means, reduces outlier influence. Bayesian: Provides evidence strength rather p-values. pairwisecomparisons Enable see specific time points differ significantly (e.g., baseline vs month 3, month 3 vs month 6).  Useful identifying changes occur treatment disease progression. pairwisedisplay . padjustmethod . effsizetype . violin . boxplot . point . mytitle . xtitle . ytitle . originaltheme . resultssubtitle . bfmessage Whether display Bayes Factor subtitle using Bayesian analysis. conflevel Confidence level confidence intervals. k Number decimal places displaying statistics subtitle. plotwidth Width plot pixels. Default 650. plotheight Height plot pixels. Default 450.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Box-Violin Plots to Compare Within Groups — jjwithinstats","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Box-Violin Plots to Compare Within Groups — jjwithinstats","text":"","code":"# Basic within-subjects analysis with iris dataset (simulated repeated measures) data(iris) iris_wide <- data.frame(     Subject = 1:50,     Time1 = iris$Sepal.Length[1:50],     Time2 = iris$Sepal.Width[1:50] * 2.5,     Time3 = iris$Petal.Length[1:50] * 1.8 ) jjwithinstats(     data = iris_wide,     dep1 = \"Time1\",     dep2 = \"Time2\",     dep3 = \"Time3\",     typestatistics = \"parametric\" ) #>  #>  VIOLIN PLOTS TO COMPARE WITHIN GROUPS #>  #>  ✅ Ready for analysis: Violin Plot comparing 3 repeated measurements. #>  #>  <div style='background-color:#f8f9fa;padding:15px;margin:10px #>  0;border-left:4px solid #007bff;'><h4 #>  style='margin-top:0;color:#007bff;'>Clinical Context #>  #>  This analysis compares 3 measurements from the same subjects. Useful #>  for: biomarker tracking, treatment response monitoring, disease #>  progression assessment. #>  #>  Test Used: Repeated measures ANOVA tests whether means differ #>  significantly across time points, assuming normal distribution. #>  #>  🔍 What to look for: #>  • Statistical significance (p < 0.05) indicates real changes over time #>  • Effect sizes show practical importance #>  • Individual trajectories reveal response patterns #>  • Outliers may indicate treatment non-responders or measurement errors #>  #>  <div style='background-color:#f0f8f0;padding:10px;border:1px solid #>  #28a745;'>Analysis: Repeated measures ANOVA with 3 measurements per #>  subject   # Advanced within-subjects analysis with custom settings jjwithinstats(     data = iris_wide,     dep1 = \"Time1\",     dep2 = \"Time2\",     dep3 = \"Time3\",     typestatistics = \"nonparametric\",     pairwisecomparisons = TRUE,     pairwisedisplay = \"significant\",     centralityplotting = TRUE,     centralitytype = \"nonparametric\",     pointpath = TRUE,     mytitle = \"Repeated Measurements Over Time\",     xtitle = \"Time Point\",     ytitle = \"Measurement Value\" ) #>  #>  VIOLIN PLOTS TO COMPARE WITHIN GROUPS #>  #>  ✅ Ready for analysis: Violin Plot comparing 3 repeated measurements. #>  #>  <div style='background-color:#f8f9fa;padding:15px;margin:10px #>  0;border-left:4px solid #007bff;'><h4 #>  style='margin-top:0;color:#007bff;'>Clinical Context #>  #>  This analysis compares 3 measurements from the same subjects. Useful #>  for: biomarker tracking, treatment response monitoring, disease #>  progression assessment. #>  #>  Test Used: Friedman test compares medians across time points without #>  assuming normal distribution (robust for skewed biomarker data). #>  #>  🔍 What to look for: #>  • Statistical significance (p < 0.05) indicates real changes over time #>  • Effect sizes show practical importance #>  • Individual trajectories reveal response patterns #>  • Outliers may indicate treatment non-responders or measurement errors #>  #>  <div style='background-color:#f0f8f0;padding:10px;border:1px solid #>  #28a745;'>Analysis: Friedman test with 3 measurements per subject #>  Configuration: #>  ✓ Pairwise comparisons enabled #>  ✓ Central tendency displayed #>  ✓ Individual trajectories shown   # Robust analysis with mtcars dataset (horsepower measurements) data(mtcars) mtcars_wide <- data.frame(     Car = rownames(mtcars)[1:20],     HP_Stock = mtcars$hp[1:20],     HP_Tuned = mtcars$hp[1:20] * 1.15,     HP_Racing = mtcars$hp[1:20] * 1.35 ) jjwithinstats(     data = mtcars_wide,     dep1 = \"HP_Stock\",     dep2 = \"HP_Tuned\",     dep3 = \"HP_Racing\",     typestatistics = \"robust\",     centralityplotting = TRUE,     centralitytype = \"robust\",     effsizetype = \"unbiased\",     conflevel = 0.99,     k = 3 ) #>  #>  VIOLIN PLOTS TO COMPARE WITHIN GROUPS #>  #>  ✅ Ready for analysis: Violin Plot comparing 3 repeated measurements. #>  #>  <div style='background-color:#f8f9fa;padding:15px;margin:10px #>  0;border-left:4px solid #007bff;'><h4 #>  style='margin-top:0;color:#007bff;'>Clinical Context #>  #>  This analysis compares 3 measurements from the same subjects. Useful #>  for: biomarker tracking, treatment response monitoring, disease #>  progression assessment. #>  #>  Test Used: Robust test uses trimmed means, reducing influence of #>  outliers common in clinical measurements. #>  #>  🔍 What to look for: #>  • Statistical significance (p < 0.05) indicates real changes over time #>  • Effect sizes show practical importance #>  • Individual trajectories reveal response patterns #>  • Outliers may indicate treatment non-responders or measurement errors #>  #>  <div style='background-color:#f0f8f0;padding:10px;border:1px solid #>  #28a745;'>Analysis: Robust repeated measures test with 3 measurements #>  per subject #>  Configuration: #>  ✓ Central tendency displayed   # Bayesian analysis with ToothGrowth dataset (growth measurements) data(ToothGrowth) tooth_wide <- data.frame(     Subject = 1:20,     Week1 = ToothGrowth$len[1:20],     Week2 = ToothGrowth$len[21:40],     Week3 = ToothGrowth$len[41:60] ) jjwithinstats(     data = tooth_wide,     dep1 = \"Week1\",     dep2 = \"Week2\",     dep3 = \"Week3\",     typestatistics = \"bayes\",     bfmessage = TRUE,     centralityplotting = TRUE,     mytitle = \"Tooth Growth Over Time\" ) #>  #>  VIOLIN PLOTS TO COMPARE WITHIN GROUPS #>  #>  ✅ Ready for analysis: Violin Plot comparing 3 repeated measurements. #>  #>  <div style='background-color:#f8f9fa;padding:15px;margin:10px #>  0;border-left:4px solid #007bff;'><h4 #>  style='margin-top:0;color:#007bff;'>Clinical Context #>  #>  This analysis compares 3 measurements from the same subjects. Useful #>  for: biomarker tracking, treatment response monitoring, disease #>  progression assessment. #>  #>  Test Used: Bayesian analysis provides evidence for/against #>  differences, useful when traditional p-values are inconclusive. #>  #>  🔍 What to look for: #>  • Statistical significance (p < 0.05) indicates real changes over time #>  • Effect sizes show practical importance #>  • Individual trajectories reveal response patterns #>  • Outliers may indicate treatment non-responders or measurement errors #>  #>  <div style='background-color:#f0f8f0;padding:10px;border:1px solid #>  #28a745;'>Analysis: Bayesian repeated measures analysis with 3 #>  measurements per subject #>  Configuration: #>  ✓ Central tendency displayed"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstatsClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Violin Plots to Compare Within Group — jjwithinstatsClass","title":"Violin Plots to Compare Within Group — jjwithinstatsClass","text":"Violin Plots Compare Within Group Violin Plots Compare Within Group","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstatsClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Violin Plots to Compare Within Group — jjwithinstatsClass","text":"jmvcore::Analysis -> jjstatsplot::jjwithinstatsBase -> jjwithinstatsClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstatsClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Violin Plots to Compare Within Group — jjwithinstatsClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jjwithinstatsBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstatsClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Violin Plots to Compare Within Group — jjwithinstatsClass","text":"jjwithinstatsClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstatsClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Violin Plots to Compare Within Group — jjwithinstatsClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstatsClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Violin Plots to Compare Within Group — jjwithinstatsClass","text":"","code":"jjwithinstatsClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jjwithinstatsClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Violin Plots to Compare Within Group — jjwithinstatsClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffle.html","id":null,"dir":"Reference","previous_headings":"","what":"Waffle Charts — jwaffle","title":"Waffle Charts — jwaffle","text":"'Creates waffle charts visualize categorical distributions proportions using colored squares. Ideal showing parts--whole relationships clinical data disease subtypes, treatment outcomes, risk category distributions. square represents proportion total sample, making easy see relative frequencies across categories.'","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Waffle Charts — jwaffle","text":"","code":"jwaffle(   data,   counts = NULL,   groups,   facet = NULL,   rows = 5,   flip = FALSE,   color_palette = \"default\",   show_legend = TRUE,   mytitle = \"\",   legendtitle = \"\",   showSummaries = FALSE,   showExplanations = FALSE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Waffle Charts — jwaffle","text":"data data data frame. counts Optional numeric weight variable cases different weights. Leave empty count row equally (recommended clinical data). needed data pre-aggregated weighted. groups categorical grouping variable waffle squares. category displayed proportional colored squares 10x10 grid. Examples: Tumor grade (G1/G2/G3), Treatment outcome (Complete/Partial/response), Risk categories (Low/Medium/High). facet Optional variable split waffle chart another categorical variable compare distributions across subgroups (e.g., treatment arm, patient cohort, time period). Creates separate waffle charts level. rows Number rows waffle chart flip Whether flip orientation waffle chart color_palette Color scheme waffle squares show_legend Whether display legend mytitle Custom title plot legendtitle Custom title legend showSummaries Generate natural language summary waffle chart results including proportions, dominant categories, clinical interpretation. showExplanations Show detailed methodology explanations waffle charts, use , interpret results clinical contexts.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Waffle Charts — jwaffle","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffleClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Waffle Charts — jwaffleClass","title":"Waffle Charts — jwaffleClass","text":"Create Waffle Charts visualize distributions.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffleClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Waffle Charts — jwaffleClass","text":"function produces waffle chart.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffleClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Waffle Charts — jwaffleClass","text":"jmvcore::Analysis -> jjstatsplot::jwaffleBase -> jwaffleClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffleClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Waffle Charts — jwaffleClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::jwaffleBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffleClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Waffle Charts — jwaffleClass","text":"jwaffleClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffleClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Waffle Charts — jwaffleClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffleClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Waffle Charts — jwaffleClass","text":"","code":"jwaffleClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/jwaffleClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Waffle Charts — jwaffleClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechart.html","id":null,"dir":"Reference","previous_headings":"","what":"Line Chart — linechart","title":"Line Chart — linechart","text":"Creates line charts time series analysis trend visualization, support multiple groups, confidence intervals, statistical overlays.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line Chart — linechart","text":"","code":"linechart(   data,   xvar,   yvar,   groupby,   confidence = FALSE,   trendline = FALSE,   points = TRUE,   smooth = FALSE,   refline,   reflineLabel = \"Reference\",   colorPalette = \"default\",   theme = \"default\",   xlabel,   ylabel,   title,   width = 800,   height = 600 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line Chart — linechart","text":"data data data frame. xvar variable x-axis. Typically represents time, sequence, ordered categories. yvar variable y-axis. Must numeric (continuous variable). groupby Optional grouping variable create multiple lines (e.g., treatment groups, patient categories). confidence Whether display confidence intervals around line(s). trendline Whether add trend line (linear regression) plot. points Whether show individual data points line(s). smooth Whether apply smoothing (loess) line(s). refline Optional reference line value (e.g., normal range, threshold). reflineLabel Label reference line. colorPalette Color palette multiple groups. theme Overall theme/appearance plot. xlabel Custom label x-axis. ylabel Custom label y-axis. title Custom title plot. width Width plot pixels. height Height plot pixels.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Line Chart — linechart","text":"results object containing: Tables can converted data frames asDF .data.frame. example: results$summary$asDF .data.frame(results$summary)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Line Chart — linechart","text":"","code":"# Basic line chart linechart(     data = clinical_data,     xvar = \"time_point\",     yvar = \"lab_value\" ) #> Error in linechart(data = clinical_data, xvar = \"time_point\", yvar = \"lab_value\"): argument \"groupby\" is missing, with no default  # Grouped line chart with confidence intervals linechart(     data = clinical_data,     xvar = \"time_point\",     yvar = \"lab_value\",     groupby = \"treatment_group\",     confidence = TRUE,     trendline = TRUE ) #> Error: object 'clinical_data' not found"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechartClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Line Chart for Time Series and Trend Analysis — linechartClass","title":"Line Chart for Time Series and Trend Analysis — linechartClass","text":"Creates comprehensive line charts time series analysis trend visualization clinical pathological research. function supports multiple groups, confidence intervals, trend lines, statistical overlays, making ideal analyzing longitudinal data, treatment responses, biomarker trends time.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechartClass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Line Chart for Time Series and Trend Analysis — linechartClass","text":"line chart function designed specifically clinical research applications visualization trends patterns time ordered categories crucial. provides extensive customization options statistical features create publication-ready plots clinical studies. Key features: Multiple group support comparative analysis Confidence intervals trend lines Clinical color palettes themes Reference lines normal ranges/thresholds Statistical correlation analysis Professional publication-ready appearance Common clinical applications: Laboratory values time Treatment response monitoring Biomarker evolution Dose-response relationships Survival probability trends Quality metrics tracking","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechartClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Line Chart for Time Series and Trend Analysis — linechartClass","text":"jmvcore::Analysis -> jjstatsplot::linechartBase -> linechartClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechartClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Line Chart for Time Series and Trend Analysis — linechartClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::linechartBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechartClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Line Chart for Time Series and Trend Analysis — linechartClass","text":"linechartClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechartClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Line Chart for Time Series and Trend Analysis — linechartClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechartClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line Chart for Time Series and Trend Analysis — linechartClass","text":"","code":"linechartClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechartClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line Chart for Time Series and Trend Analysis — linechartClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/linechartClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Line Chart for Time Series and Trend Analysis — linechartClass","text":"","code":"if (FALSE) { # \\dontrun{ # Basic time series analysis result <- linechart(   data = patient_data,   xvar = \"visit_month\",   yvar = \"hemoglobin_level\" )  # Grouped analysis with confidence intervals result <- linechart(   data = treatment_data,   xvar = \"time_point\",   yvar = \"tumor_size\",   groupby = \"treatment_arm\",   confidence = TRUE,   trendline = TRUE )  # Clinical monitoring with reference line result <- linechart(   data = lab_data,   xvar = \"days_post_treatment\",   yvar = \"white_blood_cell_count\",   refline = 4000,   reflineLabel = \"Normal Lower Limit\" ) } # }"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/load_required_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Load required packages with error handling — load_required_package","title":"Load required packages with error handling — load_required_package","text":"Load required packages error handling","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/load_required_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load required packages with error handling — load_required_package","text":"","code":"load_required_package(package_name, install_if_missing = TRUE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/load_required_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load required packages with error handling — load_required_package","text":"package_name Character string package name install_if_missing Logical, whether install package missing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/load_required_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load required packages with error handling — load_required_package","text":"Logical indicating success","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipop.html","id":null,"dir":"Reference","previous_headings":"","what":"Lollipop Chart — lollipop","title":"Lollipop Chart — lollipop","text":"Creates lollipop charts categorical data visualization following R Graph Gallery best practices, emphasis clinical applications like patient timelines, treatment outcomes, biomarker comparisons. Uses geom_segment() geom_point() optimal visual presentation.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lollipop Chart — lollipop","text":"","code":"lollipop(   data,   dep,   group,   useHighlight = FALSE,   highlight,   sortBy = \"original\",   orientation = \"vertical\",   showValues = FALSE,   showMean = FALSE,   colorScheme = \"default\",   theme = \"default\",   pointSize = 3,   lineWidth = 1,   lineType = \"solid\",   baseline = 0,   conditionalColor = FALSE,   colorThreshold = 0,   xlabel,   ylabel,   title,   width = 800,   height = 600 )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lollipop Chart — lollipop","text":"data data data frame. dep numeric variable values (lollipop heights/lengths). group categorical variable grouping (lollipop categories). useHighlight Enable disable highlighting specific levels plot. highlight Specific level highlight plot different color/style. sortBy sort lollipops chart. orientation Chart orientation (vertical horizontal lollipops). showValues Whether display value labels lollipops. showMean Whether display reference line mean value. colorScheme Color scheme lollipops. theme Overall theme/appearance plot. pointSize Size lollipop points. lineWidth Width lollipop stems. lineType Type line lollipop stems. baseline Starting point lollipop stems (default 0). conditionalColor Enable coloring based value thresholds. colorThreshold Threshold value conditional coloring (values /get different colors). xlabel Custom label x-axis. ylabel Custom label y-axis. title Custom title plot. width Width plot pixels. height Height plot pixels.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lollipop Chart — lollipop","text":"results object containing: Tables can converted data frames asDF .data.frame. example: results$summary$asDF .data.frame(results$summary)","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lollipop Chart — lollipop","text":"","code":"# Load clinical lab data clinical_lab_data <- read.csv(\"clinical_lab_data.csv\") #> Warning: cannot open file 'clinical_lab_data.csv': No such file or directory #> Error in file(file, \"rt\"): cannot open the connection # Or load from package: data(\"clinical_lab_data\", package = \"ClinicoPath\")  # Basic lollipop chart - Hemoglobin by treatment group lollipop(     data = clinical_lab_data,     dep = \"hemoglobin\",     group = \"treatment_group\",     sortBy = \"value_desc\",     title = \"Hemoglobin Levels by Treatment\" ) #> Error: object 'clinical_lab_data' not found  # Highlighting severe disease cases - Albumin levels lollipop(     data = clinical_lab_data,     dep = \"albumin\",     group = \"disease_severity\",     useHighlight = TRUE,     highlight = \"Severe\",     orientation = \"horizontal\",     showValues = TRUE,     colorScheme = \"clinical\",     title = \"Albumin Levels by Disease Severity\" ) #> Error: object 'clinical_lab_data' not found  # Conditional coloring for abnormal creatinine (>1.2 mg/dL) lollipop(     data = clinical_lab_data,     dep = \"creatinine\",     group = \"age_group\",     conditionalColor = TRUE,     colorThreshold = 1.2,     lineType = \"dashed\",     sortBy = \"value_asc\",     title = \"Creatinine by Age (Threshold: 1.2 mg/dL)\" ) #> Error: object 'clinical_lab_data' not found  # Advanced - Platelet count with clinical baseline lollipop(     data = clinical_lab_data,     dep = \"platelet_count\",     group = \"hospital\",     baseline = 150,  # Lower normal limit     useHighlight = TRUE,     highlight = \"Hospital A\",     lineType = \"dotted\",     pointSize = 4,     showMean = TRUE,     colorScheme = \"clinical\",     title = \"Platelet Counts by Hospital (Normal >150)\" ) #> Error: object 'clinical_lab_data' not found  # Compare WBC across multiple factors lollipop(     data = clinical_lab_data,     dep = \"white_blood_cells\",     group = \"treatment_group\",     conditionalColor = TRUE,     colorThreshold = 11,  # Upper normal limit     orientation = \"horizontal\",     sortBy = \"value_desc\",     lineWidth = 2,     title = \"WBC Count by Treatment (ULN: 11)\" ) #> Error: object 'clinical_lab_data' not found"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipopClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Lollipop Charts for Categorical Data Visualization — lollipopClass","title":"Lollipop Charts for Categorical Data Visualization — lollipopClass","text":"Creates comprehensive lollipop charts categorical data visualization emphasis clinical applications. Lollipop charts particularly effective displaying categorical data focus individual values, making ideal patient timelines, treatment outcomes, biomarker levels, comparative clinical assessments.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipopClass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lollipop Charts for Categorical Data Visualization — lollipopClass","text":"lollipop chart function designed specifically clinical research applications categorical data visualization emphasis individual values crucial. Unlike bar charts, lollipop charts reduce ink--data ratio provide cleaner visualization sparse data highlighting specific categories. Key features: Flexible orientation (vertical/horizontal) Advanced sorting options (value, alphabetical) Clinical color schemes themes Highlighting capabilities specific categories Statistical summary integration Professional publication-ready appearance Common clinical applications: Patient timeline visualization Biomarker level comparisons Treatment outcome rankings Survey response visualization Quality metric displays Diagnostic test results","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipopClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Lollipop Charts for Categorical Data Visualization — lollipopClass","text":"jmvcore::Analysis -> jjstatsplot::lollipopBase -> lollipopClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipopClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Lollipop Charts for Categorical Data Visualization — lollipopClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::lollipopBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipopClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Lollipop Charts for Categorical Data Visualization — lollipopClass","text":"lollipopClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipopClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Lollipop Charts for Categorical Data Visualization — lollipopClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipopClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lollipop Charts for Categorical Data Visualization — lollipopClass","text":"","code":"lollipopClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipopClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lollipop Charts for Categorical Data Visualization — lollipopClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/lollipopClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lollipop Charts for Categorical Data Visualization — lollipopClass","text":"","code":"if (FALSE) { # \\dontrun{ # Basic lollipop chart result <- lollipop(   data = patient_data,   dep = \"biomarker_level\",   group = \"patient_id\" )  # Horizontal lollipop with sorting result <- lollipop(   data = treatment_data,   dep = \"response_score\",   group = \"treatment_type\",   sortBy = \"value_desc\",   orientation = \"horizontal\",   showValues = TRUE )  # Clinical timeline with highlighting result <- lollipop(   data = timeline_data,   dep = \"days_to_event\",   group = \"patient_id\",   highlight = \"high_risk_patient\",   showMean = TRUE ) } # }"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/na-coalescing.html","id":null,"dir":"Reference","previous_headings":"","what":"NA-coalescing operator — na-coalescing","title":"NA-coalescing operator — na-coalescing","text":"NA-coalescing operator","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/na-coalescing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NA-coalescing operator — na-coalescing","text":"","code":"lhs %|% rhs"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/not-in-alt.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative not-in operator — not-in-alt","title":"Alternative not-in operator — not-in-alt","text":"Alternative -operator","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/not-in-alt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative not-in operator — not-in-alt","text":"","code":"lhs %!in% rhs"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/not-in.html","id":null,"dir":"Reference","previous_headings":"","what":"Not-in operator — not-in","title":"Not-in operator — not-in","text":"-operator","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/not-in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Not-in operator — not-in","text":"","code":"lhs %notin% rhs"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/null-coalescing.html","id":null,"dir":"Reference","previous_headings":"","what":"Null-coalescing operator — null-coalescing","title":"Null-coalescing operator — null-coalescing","text":"Null-coalescing operator","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/null-coalescing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Null-coalescing operator — null-coalescing","text":"","code":"lhs %||% rhs"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Pipe operator","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/print.sensSpecTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Print formatted HTML table for sensitivity/specificity results — print.sensSpecTable","title":"Print formatted HTML table for sensitivity/specificity results — print.sensSpecTable","text":"Creates HTML table confusion matrix visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/print.sensSpecTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print formatted HTML table for sensitivity/specificity results — print.sensSpecTable","text":"","code":"# S3 method for class 'sensSpecTable' print(Title, TP, FP, TN, FN)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/print.sensSpecTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print formatted HTML table for sensitivity/specificity results — print.sensSpecTable","text":"Title Title confusion matrix table TP Number true positives FP Number false positives TN Number true negatives FN Number false negatives","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/print.sensSpecTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print formatted HTML table for sensitivity/specificity results — print.sensSpecTable","text":"HTML string containing formatted table","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/prop_to_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert proportion to percentage string — prop_to_percent","title":"Convert proportion to percentage string — prop_to_percent","text":"Converts numeric proportion formatted percentage","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/prop_to_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert proportion to percentage string — prop_to_percent","text":"","code":"prop_to_percent(x, digits = 1)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/prop_to_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert proportion to percentage string — prop_to_percent","text":"x Numeric proportion (0-1) digits Number decimal places","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/prop_to_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert proportion to percentage string — prop_to_percent","text":"Character string percentage formatting","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Raincloud Plot — raincloud","title":"Raincloud Plot — raincloud","text":"Creates Raincloud plots visualize data distributions using ggdist package. Raincloud plots combine three visualization techniques: half-violin plots showing distribution density, box plots showing summary statistics, dot plots showing individual data points. provides comprehensive view data distribution reveals patterns traditional box plots might miss, including multimodality distribution shape. Based ggdist R-Bloggers tutorial.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raincloud Plot — raincloud","text":"","code":"raincloud(   data,   dep_var,   group_var,   facet_var = NULL,   color_var = NULL,   show_violin = TRUE,   show_boxplot = TRUE,   show_dots = TRUE,   dots_side = \"left\",   violin_width = 0.7,   box_width = 0.2,   dots_size = 1.2,   alpha_violin = 0.7,   alpha_dots = 0.8,   orientation = \"horizontal\",   color_palette = \"clinical\",   plot_theme = \"clinical\",   plot_title = \"Raincloud Plot - Distribution Visualization\",   x_label = \"\",   y_label = \"\",   show_statistics = TRUE,   show_outliers = FALSE,   outlier_method = \"iqr\",   normality_test = FALSE,   comparison_test = FALSE,   comparison_method = \"auto\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raincloud Plot — raincloud","text":"data data data frame. dep_var Continuous variable whose distribution visualized raincloud plot. group_var Categorical variable grouping. group raincloud visualization. facet_var Optional variable creating separate panels. Creates multiple raincloud plots  grid layout. color_var Optional variable coloring different elements. specified, uses grouping variable. show_violin TRUE, displays half-violin plot showing probability density distribution. show_boxplot TRUE, displays box plot median, quartiles, outliers. show_dots TRUE, displays individual data points dots. dots_side Position data point dots relative violin plot. violin_width Width scaling factor violin plot component. box_width Width box plot component. dots_size Size individual data point dots. alpha_violin Transparency level violin plot (0 = transparent, 1 = opaque). alpha_dots Transparency level data point dots. orientation Orientation plot. Horizontal creates classic \"raincloud\" appearance. color_palette Color palette different groups including GraphPad Prism palettes. plot_theme Overall visual theme plot. plot_title Custom title raincloud plot. x_label Custom label X-axis. empty, uses variable name. y_label Custom label Y-axis. empty, uses variable name. show_statistics TRUE, displays summary statistics table group. show_outliers TRUE, identifies highlights outliers visualization. outlier_method Method detecting outliers highlight outliers enabled. normality_test TRUE, performs normality tests (Shapiro-Wilk) group. comparison_test TRUE, performs statistical tests compare groups. comparison_method Statistical test method comparing groups.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raincloud Plot — raincloud","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raincloud Plot — raincloud","text":"","code":"# Load example dataset data(histopathology)  # Basic raincloud plot raincloud(   data = histopathology,   dep_var = \"Age\",   group_var = \"Group\" ) #>  #>  RAINCLOUD PLOT #>  #> character(0) #>  #>  <div style='background-color: #f8f9fa; padding: 20px; border-radius: #>  8px; margin-bottom: 20px;'><h3 style='color: #495057; margin-top: #>  0;'>📊 Distribution Summary Statistics #>  #>  <table style='width: 100%; border-collapse: collapse; font-family: #>  Arial, sans-serif;'><tr style='background-color: #6c757d; color: #>  white;'><th style='padding: 8px; border: 1px solid #dee2e6;'>Group<th #>  style='padding: 8px; border: 1px solid #dee2e6;'>N<th style='padding: #>  8px; border: 1px solid #dee2e6;'>Mean<th style='padding: 8px; border: #>  1px solid #dee2e6;'>Median<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>SD<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>IQR<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>Range<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>Skewness<tr style='background-color: #f8f9fa;'><td #>  style='padding: 8px; border: 1px solid #dee2e6;'>Control<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>120<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>49.825<td style='padding: 8px; border: 1px solid #>  #dee2e6; text-align: center;'>49.5<td style='padding: 8px; border: 1px #>  solid #dee2e6; text-align: center;'>14.415<td style='padding: 8px; #>  border: 1px solid #dee2e6; text-align: center;'>26.5<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>26 - 73<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>-0.017<tr style='background-color: #ffffff;'><td #>  style='padding: 8px; border: 1px solid #dee2e6;'>Treatment<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>128<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>48.969<td style='padding: 8px; border: 1px solid #>  #dee2e6; text-align: center;'>49<td style='padding: 8px; border: 1px #>  solid #dee2e6; text-align: center;'>13.256<td style='padding: 8px; #>  border: 1px solid #dee2e6; text-align: center;'>21.25<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>25 - 73<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>-0.046<p style='font-size: 12px; color: #6c757d; #>  margin-top: 15px;'>*IQR = Interquartile Range, SD = Standard #>  Deviation. Skewness: 0 = symmetric, >0 = right-skewed, <0 = #>  left-skewed.* #>  #>  <div style='background-color: #e8f5e8; padding: 20px; border-radius: #>  8px;'><h3 style='color: #2e7d32; margin-top: 0;'>📋 Raincloud Plot #>  Interpretation Guide #>  #>  <h4 style='color: #2e7d32;'>Plot Summary: #>  #>  Variable: Age (distribution analysis)Groups: 2 groups defined by #>  GroupObservations: 248 data pointsVisualization: Half-violin (density) #>  + Box plot (quartiles) + Data points (individual values)<h4 #>  style='color: #2e7d32;'>How to Read Raincloud Plots: #>  #>  Half-Violin: Shows probability density - wider areas indicate more #>  data pointsBox Plot: Shows median (line), quartiles (box), and #>  outliers (points)Data Points: Individual observations reveal #>  fine-grained patternsShape Patterns: Symmetric, skewed, bimodal, or #>  multimodal distributions<h4 style='color: #2e7d32;'>Distribution #>  Patterns to Look For: #>  #>  Symmetry: Bell-shaped density indicates normal distributionSkewness: #>  Tail extending to one side (left-skewed or right-skewed)Multimodality: #>  Multiple peaks suggest subgroups within dataOutliers: Points far from #>  the main distributionSpread: Width of distribution indicates #>  variability<h4 style='color: #2e7d32;'>Clinical/Research Applications: #>  #>  Biomarker Analysis: Compare distributions across patient #>  groupsTreatment Effects: Visualize before/after treatment #>  distributionsQuality Control: Identify unusual patterns in laboratory #>  valuesSubgroup Discovery: Detect hidden subpopulations in data<p #>  style='font-size: 12px; color: #2e7d32; margin-top: 15px;'>*💡 #>  Raincloud plots reveal distribution nuances that traditional box plots #>  miss, making them ideal for exploratory data analysis and #>  publication-quality visualizations.*   # Advanced raincloud plot with faceting and custom colors raincloud(   data = histopathology,   dep_var = \"OverallTime\",   group_var = \"Group\",   facet_var = \"Sex\",   color_var = \"Race\",   color_palette = \"clinical\",   plot_theme = \"publication\" ) #>  #>  RAINCLOUD PLOT #>  #> character(0) #>  #>  <div style='background-color: #f8f9fa; padding: 20px; border-radius: #>  8px; margin-bottom: 20px;'><h3 style='color: #495057; margin-top: #>  0;'>📊 Distribution Summary Statistics #>  #>  <table style='width: 100%; border-collapse: collapse; font-family: #>  Arial, sans-serif;'><tr style='background-color: #6c757d; color: #>  white;'><th style='padding: 8px; border: 1px solid #dee2e6;'>Group<th #>  style='padding: 8px; border: 1px solid #dee2e6;'>N<th style='padding: #>  8px; border: 1px solid #dee2e6;'>Mean<th style='padding: 8px; border: #>  1px solid #dee2e6;'>Median<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>SD<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>IQR<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>Range<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>Skewness<tr style='background-color: #f8f9fa;'><td #>  style='padding: 8px; border: 1px solid #dee2e6;'>Control<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>119<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>16.243<td style='padding: 8px; border: 1px solid #>  #dee2e6; text-align: center;'>9.7<td style='padding: 8px; border: 1px #>  solid #dee2e6; text-align: center;'>13.666<td style='padding: 8px; #>  border: 1px solid #dee2e6; text-align: center;'>15.85<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>2.9 - 57.7<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>1.448<tr style='background-color: #ffffff;'><td #>  style='padding: 8px; border: 1px solid #dee2e6;'>Treatment<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>126<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>16.933<td style='padding: 8px; border: 1px solid #>  #dee2e6; text-align: center;'>10.7<td style='padding: 8px; border: 1px #>  solid #dee2e6; text-align: center;'>13.524<td style='padding: 8px; #>  border: 1px solid #dee2e6; text-align: center;'>17.775<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>3.1 - 58.2<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>1.227<p style='font-size: 12px; color: #6c757d; #>  margin-top: 15px;'>*IQR = Interquartile Range, SD = Standard #>  Deviation. Skewness: 0 = symmetric, >0 = right-skewed, <0 = #>  left-skewed.* #>  #>  <div style='background-color: #e8f5e8; padding: 20px; border-radius: #>  8px;'><h3 style='color: #2e7d32; margin-top: 0;'>📋 Raincloud Plot #>  Interpretation Guide #>  #>  <h4 style='color: #2e7d32;'>Plot Summary: #>  #>  Variable: OverallTime (distribution analysis)Groups: 2 groups defined #>  by GroupObservations: 245 data pointsVisualization: Half-violin #>  (density) + Box plot (quartiles) + Data points (individual values)<h4 #>  style='color: #2e7d32;'>How to Read Raincloud Plots: #>  #>  Half-Violin: Shows probability density - wider areas indicate more #>  data pointsBox Plot: Shows median (line), quartiles (box), and #>  outliers (points)Data Points: Individual observations reveal #>  fine-grained patternsShape Patterns: Symmetric, skewed, bimodal, or #>  multimodal distributions<h4 style='color: #2e7d32;'>Distribution #>  Patterns to Look For: #>  #>  Symmetry: Bell-shaped density indicates normal distributionSkewness: #>  Tail extending to one side (left-skewed or right-skewed)Multimodality: #>  Multiple peaks suggest subgroups within dataOutliers: Points far from #>  the main distributionSpread: Width of distribution indicates #>  variability<h4 style='color: #2e7d32;'>Clinical/Research Applications: #>  #>  Biomarker Analysis: Compare distributions across patient #>  groupsTreatment Effects: Visualize before/after treatment #>  distributionsQuality Control: Identify unusual patterns in laboratory #>  valuesSubgroup Discovery: Detect hidden subpopulations in data<p #>  style='font-size: 12px; color: #2e7d32; margin-top: 15px;'>*💡 #>  Raincloud plots reveal distribution nuances that traditional box plots #>  miss, making them ideal for exploratory data analysis and #>  publication-quality visualizations.*   # Statistical analysis with outlier detection raincloud(   data = histopathology,   dep_var = \"Age\",   group_var = \"Group\",   show_statistics = TRUE,   show_outliers = TRUE,   outlier_method = \"iqr\",   normality_test = TRUE,   comparison_test = TRUE ) #>  #>  RAINCLOUD PLOT #>  #> character(0) #>  #>  <div style='background-color: #f8f9fa; padding: 20px; border-radius: #>  8px; margin-bottom: 20px;'><h3 style='color: #495057; margin-top: #>  0;'>📊 Distribution Summary Statistics #>  #>  <table style='width: 100%; border-collapse: collapse; font-family: #>  Arial, sans-serif;'><tr style='background-color: #6c757d; color: #>  white;'><th style='padding: 8px; border: 1px solid #dee2e6;'>Group<th #>  style='padding: 8px; border: 1px solid #dee2e6;'>N<th style='padding: #>  8px; border: 1px solid #dee2e6;'>Mean<th style='padding: 8px; border: #>  1px solid #dee2e6;'>Median<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>SD<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>IQR<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>Range<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>Skewness<tr style='background-color: #f8f9fa;'><td #>  style='padding: 8px; border: 1px solid #dee2e6;'>Control<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>120<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>49.825<td style='padding: 8px; border: 1px solid #>  #dee2e6; text-align: center;'>49.5<td style='padding: 8px; border: 1px #>  solid #dee2e6; text-align: center;'>14.415<td style='padding: 8px; #>  border: 1px solid #dee2e6; text-align: center;'>26.5<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>26 - 73<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>-0.017<tr style='background-color: #ffffff;'><td #>  style='padding: 8px; border: 1px solid #dee2e6;'>Treatment<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>128<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>48.969<td style='padding: 8px; border: 1px solid #>  #dee2e6; text-align: center;'>49<td style='padding: 8px; border: 1px #>  solid #dee2e6; text-align: center;'>13.256<td style='padding: 8px; #>  border: 1px solid #dee2e6; text-align: center;'>21.25<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>25 - 73<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>-0.046<p style='font-size: 12px; color: #6c757d; #>  margin-top: 15px;'>*IQR = Interquartile Range, SD = Standard #>  Deviation. Skewness: 0 = symmetric, >0 = right-skewed, <0 = #>  left-skewed.* #>  #>  <div style='background-color: #fff3cd; padding: 20px; border-radius: #>  8px; margin-bottom: 20px;'><h3 style='color: #856404; margin-top: #>  0;'>⚠️ Outlier Detection (Iqr Method) #>  #>  Control: 0 outliers detectedTreatment: 0 outliers detected #>  #>  Total outliers across all groups: 0 #>  #>  <p style='font-size: 12px; color: #856404; margin-top: 15px;'>*IQR #>  Method: Values beyond 1.5 × IQR from Q1/Q3. Consider investigating #>  these points for data quality or interesting patterns.* #>  #>  <div style='background-color: #d1ecf1; padding: 20px; border-radius: #>  8px; margin-bottom: 20px;'><h3 style='color: #0c5460; margin-top: #>  0;'>📈 Normality Tests (Shapiro-Wilk) #>  #>  <table style='width: 100%; border-collapse: collapse;'><tr #>  style='background-color: #e0e0e0;'><th style='padding: 8px; border: #>  1px solid #ddd;'>Group<th style='padding: 8px; border: 1px solid #>  #ddd;'>W Statistic<th style='padding: 8px; border: 1px solid #>  #ddd;'>P-value<th style='padding: 8px; border: 1px solid #>  #ddd;'>Interpretation<td style='padding: 8px; border: 1px solid #>  #ddd;'>Control<td style='padding: 8px; border: 1px solid #ddd; #>  text-align: center;'>0.9432<td style='padding: 8px; border: 1px solid #>  #ddd; text-align: center;'>1e-04<td style='padding: 8px; border: 1px #>  solid #ddd; text-align: center;'>Non-normal<td style='padding: 8px; #>  border: 1px solid #ddd;'>Treatment<td style='padding: 8px; border: 1px #>  solid #ddd; text-align: center;'>0.9594<td style='padding: 8px; #>  border: 1px solid #ddd; text-align: center;'>7e-04<td style='padding: #>  8px; border: 1px solid #ddd; text-align: center;'>Non-normal<p #>  style='font-size: 12px; color: #0c5460; margin-top: #>  15px;'>*Shapiro-Wilk test: p > 0.05 suggests normal distribution. #>  Valid for sample sizes 3-5000.* #>  #>  <div style='background-color: #f3e5f5; padding: 20px; border-radius: #>  8px; margin-bottom: 20px;'><h3 style='color: #7b1fa2; margin-top: #>  0;'>📊 Group Comparison Test #>  #>  <table style='width: 100%; border-collapse: collapse;'><td #>  style='padding: 8px; border: 1px solid #ddd;'>Test Method:<td #>  style='padding: 8px; border: 1px solid #ddd;'>Wilcoxon<td #>  style='padding: 8px; border: 1px solid #ddd;'>Test Statistic:<td #>  style='padding: 8px; border: 1px solid #ddd;'>W = 7955.5<td #>  style='padding: 8px; border: 1px solid #ddd;'>P-value:<td #>  style='padding: 8px; border: 1px solid #ddd;'>0.6261<td #>  style='padding: 8px; border: 1px solid #ddd;'>Result:<td #>  style='padding: 8px; border: 1px solid #ddd;'>Not significant<p #>  style='font-size: 12px; color: #7b1fa2; margin-top: 15px;'>** p < #>  0.05, ** p < 0.01, *** p < 0.001. Automatically selected {test_method} #>  based on data characteristics.* #>  #>  <div style='background-color: #e3f2fd; padding: 15px; border-radius: #>  5px; margin: 10px 0;'><h4 style='margin-top: 0; color: #1976d2;'>📝 #>  Copy-Ready Result #>  #>  <p style='font-family: monospace; background: white; padding: 10px; #>  border: 1px solid #ddd; border-radius: 3px;'>The Wilcoxon test #>  comparing Control vs Treatment showed not significant differences (p = #>  0.626). No significant differences detected between groups. #>  #>  <small style='color: #666;'>💡 This sentence is ready to copy into #>  your research report #>  #>  <div style='background-color: #e8f5e8; padding: 20px; border-radius: #>  8px;'><h3 style='color: #2e7d32; margin-top: 0;'>📋 Raincloud Plot #>  Interpretation Guide #>  #>  <h4 style='color: #2e7d32;'>Plot Summary: #>  #>  Variable: Age (distribution analysis)Groups: 2 groups defined by #>  GroupObservations: 248 data pointsVisualization: Half-violin (density) #>  + Box plot (quartiles) + Data points (individual values)<h4 #>  style='color: #2e7d32;'>How to Read Raincloud Plots: #>  #>  Half-Violin: Shows probability density - wider areas indicate more #>  data pointsBox Plot: Shows median (line), quartiles (box), and #>  outliers (points)Data Points: Individual observations reveal #>  fine-grained patternsShape Patterns: Symmetric, skewed, bimodal, or #>  multimodal distributions<h4 style='color: #2e7d32;'>Distribution #>  Patterns to Look For: #>  #>  Symmetry: Bell-shaped density indicates normal distributionSkewness: #>  Tail extending to one side (left-skewed or right-skewed)Multimodality: #>  Multiple peaks suggest subgroups within dataOutliers: Points far from #>  the main distributionSpread: Width of distribution indicates #>  variability<h4 style='color: #2e7d32;'>Clinical/Research Applications: #>  #>  Biomarker Analysis: Compare distributions across patient #>  groupsTreatment Effects: Visualize before/after treatment #>  distributionsQuality Control: Identify unusual patterns in laboratory #>  valuesSubgroup Discovery: Detect hidden subpopulations in data<p #>  style='font-size: 12px; color: #2e7d32; margin-top: 15px;'>*💡 #>  Raincloud plots reveal distribution nuances that traditional box plots #>  miss, making them ideal for exploratory data analysis and #>  publication-quality visualizations.*   # Customized visualization components raincloud(   data = histopathology,   dep_var = \"Age\",   group_var = \"Group\",   show_violin = TRUE,   show_boxplot = TRUE,   show_dots = TRUE,   dots_side = \"left\",   orientation = \"horizontal\",   violin_width = 0.8,   alpha_violin = 0.6 ) #>  #>  RAINCLOUD PLOT #>  #> character(0) #>  #>  <div style='background-color: #f8f9fa; padding: 20px; border-radius: #>  8px; margin-bottom: 20px;'><h3 style='color: #495057; margin-top: #>  0;'>📊 Distribution Summary Statistics #>  #>  <table style='width: 100%; border-collapse: collapse; font-family: #>  Arial, sans-serif;'><tr style='background-color: #6c757d; color: #>  white;'><th style='padding: 8px; border: 1px solid #dee2e6;'>Group<th #>  style='padding: 8px; border: 1px solid #dee2e6;'>N<th style='padding: #>  8px; border: 1px solid #dee2e6;'>Mean<th style='padding: 8px; border: #>  1px solid #dee2e6;'>Median<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>SD<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>IQR<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>Range<th style='padding: 8px; border: 1px solid #>  #dee2e6;'>Skewness<tr style='background-color: #f8f9fa;'><td #>  style='padding: 8px; border: 1px solid #dee2e6;'>Control<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>120<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>49.825<td style='padding: 8px; border: 1px solid #>  #dee2e6; text-align: center;'>49.5<td style='padding: 8px; border: 1px #>  solid #dee2e6; text-align: center;'>14.415<td style='padding: 8px; #>  border: 1px solid #dee2e6; text-align: center;'>26.5<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>26 - 73<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>-0.017<tr style='background-color: #ffffff;'><td #>  style='padding: 8px; border: 1px solid #dee2e6;'>Treatment<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>128<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>48.969<td style='padding: 8px; border: 1px solid #>  #dee2e6; text-align: center;'>49<td style='padding: 8px; border: 1px #>  solid #dee2e6; text-align: center;'>13.256<td style='padding: 8px; #>  border: 1px solid #dee2e6; text-align: center;'>21.25<td #>  style='padding: 8px; border: 1px solid #dee2e6; text-align: #>  center;'>25 - 73<td style='padding: 8px; border: 1px solid #dee2e6; #>  text-align: center;'>-0.046<p style='font-size: 12px; color: #6c757d; #>  margin-top: 15px;'>*IQR = Interquartile Range, SD = Standard #>  Deviation. Skewness: 0 = symmetric, >0 = right-skewed, <0 = #>  left-skewed.* #>  #>  <div style='background-color: #e8f5e8; padding: 20px; border-radius: #>  8px;'><h3 style='color: #2e7d32; margin-top: 0;'>📋 Raincloud Plot #>  Interpretation Guide #>  #>  <h4 style='color: #2e7d32;'>Plot Summary: #>  #>  Variable: Age (distribution analysis)Groups: 2 groups defined by #>  GroupObservations: 248 data pointsVisualization: Half-violin (density) #>  + Box plot (quartiles) + Data points (individual values)<h4 #>  style='color: #2e7d32;'>How to Read Raincloud Plots: #>  #>  Half-Violin: Shows probability density - wider areas indicate more #>  data pointsBox Plot: Shows median (line), quartiles (box), and #>  outliers (points)Data Points: Individual observations reveal #>  fine-grained patternsShape Patterns: Symmetric, skewed, bimodal, or #>  multimodal distributions<h4 style='color: #2e7d32;'>Distribution #>  Patterns to Look For: #>  #>  Symmetry: Bell-shaped density indicates normal distributionSkewness: #>  Tail extending to one side (left-skewed or right-skewed)Multimodality: #>  Multiple peaks suggest subgroups within dataOutliers: Points far from #>  the main distributionSpread: Width of distribution indicates #>  variability<h4 style='color: #2e7d32;'>Clinical/Research Applications: #>  #>  Biomarker Analysis: Compare distributions across patient #>  groupsTreatment Effects: Visualize before/after treatment #>  distributionsQuality Control: Identify unusual patterns in laboratory #>  valuesSubgroup Discovery: Detect hidden subpopulations in data<p #>  style='font-size: 12px; color: #2e7d32; margin-top: 15px;'>*💡 #>  Raincloud plots reveal distribution nuances that traditional box plots #>  miss, making them ideal for exploratory data analysis and #>  publication-quality visualizations.*"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloudClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Raincloud Plot for Distribution Visualization — raincloudClass","title":"Raincloud Plot for Distribution Visualization — raincloudClass","text":"Raincloud Plot Distribution Visualization Raincloud Plot Distribution Visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloudClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raincloud Plot for Distribution Visualization — raincloudClass","text":"Raincloud plot using ggdist comprehensive distribution analysis","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloudClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Raincloud Plot for Distribution Visualization — raincloudClass","text":"jmvcore::Analysis -> jjstatsplot::raincloudBase -> raincloudClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloudClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Raincloud Plot for Distribution Visualization — raincloudClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::raincloudBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloudClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Raincloud Plot for Distribution Visualization — raincloudClass","text":"raincloudClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloudClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Raincloud Plot for Distribution Visualization — raincloudClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloudClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raincloud Plot for Distribution Visualization — raincloudClass","text":"","code":"raincloudClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raincloudClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raincloud Plot for Distribution Visualization — raincloudClass","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raw_to_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw test values to predicted probabilities using ROC curve — raw_to_prob","title":"Convert raw test values to predicted probabilities using ROC curve — raw_to_prob","text":"Maps raw test values probabilities based position ROC curve","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raw_to_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raw test values to predicted probabilities using ROC curve — raw_to_prob","text":"","code":"raw_to_prob(values, actual, direction = \">=\")"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raw_to_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw test values to predicted probabilities using ROC curve — raw_to_prob","text":"values Raw test values actual Binary outcomes (0/1) direction Direction test (\">=\" \"<=\")","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/raw_to_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raw test values to predicted probabilities using ROC curve — raw_to_prob","text":"Vector predicted probabilities","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/safe_divide.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe division function — safe_divide","title":"Safe division function — safe_divide","text":"Performs division safe handling division zero","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/safe_divide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe division function — safe_divide","text":"","code":"safe_divide(x, y, na_value = NA_real_)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/safe_divide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe division function — safe_divide","text":"x Numerator y Denominator na_value Value return division zero occurs","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/safe_divide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe division function — safe_divide","text":"Result x/y na_value y zero","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic Plot Selection — statsplot2","title":"Automatic Plot Selection — statsplot2","text":"Automatically selects generates appropriate statistical visualization based variable data types. Features enhanced error messages contextual guidance, robust data validation, comprehensive fallback options. Supports independent repeated measures designs various plot types including violin plots, scatter plots, bar charts, alluvial diagrams.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic Plot Selection — statsplot2","text":"","code":"statsplot2(   data,   dep,   group,   grvar = NULL,   direction = \"independent\",   distribution = \"p\",   alluvsty = \"t1\",   excl = FALSE,   sampleLarge = TRUE )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic Plot Selection — statsplot2","text":"data data data frame. dep dependent variable (y-axis, 1st measurement). Can continuous categorical. group grouping variable (x-axis, 2nd measurement). Can continuous categorical. grvar Optional grouping variable creating grouped plots across multiple panels. direction Measurement design type. \"independent\" -subjects comparisons,  \"repeated\" within-subjects/repeated measures comparisons. distribution Statistical approach: \"p\" = parametric, \"np\" = nonparametric,  \"r\" = robust, \"bf\" = Bayes factor. alluvsty Style alluvial diagrams: \"t1\" = ggalluvial stratum labels,  \"t2\" = easyalluvial automatic variable selection. excl TRUE, excludes rows missing values analysis. sampleLarge TRUE, automatically samples large datasets (>10,000 rows) 5,000 rows improved performance.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic Plot Selection — statsplot2","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatic Plot Selection — statsplot2","text":"","code":"# Automatic plot selection for factor vs continuous variables statsplot2(     data = mtcars,     dep = \"mpg\",     group = \"cyl\",     direction = \"independent\",     distribution = \"p\" ) #>  #>  AUTOMATIC PLOT SELECTION BASED ON VARIABLE TYPES #> You have selected to use a scatter plot to examine the relationship between cyl (continuous) and mpg (continuous). #>  #> Clinical Interpretation: This scatter plot examines the linear relationship between cyl and mpg. The trend line shows the association with confidence bands (gray area). Positive slopes indicate that higher cyl values are associated with higher mpg values. #>  #> Parametric Approach: Assumes normally distributed data. Best for continuous variables with bell-shaped distributions. #>  #> ⚠️ STATISTICAL WARNINGS: #> With smaller samples, check data distribution visually. Consider nonparametric approach if data appears skewed.   # Repeated measures with alluvial diagram statsplot2(     data = survey_data,     dep = \"condition_baseline\",     group = \"condition_followup\",     direction = \"repeated\",     alluvsty = \"t1\" ) #> Error: object 'survey_data' not found  # Enhanced error messages provide contextual guidance: # - Variable names and types in error messages # - Specific data requirement feedback # - Package installation instructions when needed # - Actionable suggestions for unsupported combinations"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2Class.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots and Graphs Based on Variable Types — statsplot2Class","title":"Plots and Graphs Based on Variable Types — statsplot2Class","text":"Plots Graphs Based Variable Types Plots Graphs Based Variable Types","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2Class.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Plots and Graphs Based on Variable Types — statsplot2Class","text":"jmvcore::Analysis -> jjstatsplot::statsplot2Base -> statsplot2Class","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2Class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Plots and Graphs Based on Variable Types — statsplot2Class","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::statsplot2Base$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2Class.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Plots and Graphs Based on Variable Types — statsplot2Class","text":"statsplot2Class$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2Class.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Plots and Graphs Based on Variable Types — statsplot2Class","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2Class.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots and Graphs Based on Variable Types — statsplot2Class","text":"","code":"statsplot2Class$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/statsplot2Class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots and Graphs Based on Variable Types — statsplot2Class","text":"deep Whether make deep clone.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/validateROCInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate inputs for ROC analysis — validateROCInputs","title":"Validate inputs for ROC analysis — validateROCInputs","text":"Comprehensive validation ROC analysis inputs","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/validateROCInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate inputs for ROC analysis — validateROCInputs","text":"","code":"validateROCInputs(x, class_var, pos_class = NULL)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/validateROCInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate inputs for ROC analysis — validateROCInputs","text":"x Test values class_var Classification labels pos_class Positive class label","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/validateROCInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate inputs for ROC analysis — validateROCInputs","text":"List validation results cleaned data","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffle.html","id":null,"dir":"Reference","previous_headings":"","what":"Waffle Charts — waffle","title":"Waffle Charts — waffle","text":"'Creates waffle charts visualize distributions proportions'","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Waffle Charts — waffle","text":"","code":"waffle(   data,   counts,   groups,   facet,   rows = 5,   flip = FALSE,   color_palette = \"default\",   show_legend = TRUE,   mytitle = \"\",   legendtitle = \"\" )"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Waffle Charts — waffle","text":"data data data frame. counts Optional numeric values represented waffle chart. provided, use number cases. groups grouping variable waffle squares facet Optional variable create faceted waffle charts rows Number rows waffle chart flip Whether flip orientation waffle chart color_palette Color scheme waffle squares show_legend Whether display legend mytitle Custom title plot legendtitle Custom title legend","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Waffle Charts — waffle","text":"results object containing:","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffleClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Waffle Charts — waffleClass","title":"Waffle Charts — waffleClass","text":"Create Waffle Charts visualize distributions.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffleClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Waffle Charts — waffleClass","text":"function produces waffle chart.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffleClass.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Waffle Charts — waffleClass","text":"jmvcore::Analysis -> jjstatsplot::waffleBase -> waffleClass","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffleClass.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Waffle Charts — waffleClass","text":"jmvcore::Analysis$.createImage() jmvcore::Analysis$.createImages() jmvcore::Analysis$.createPlotObject() jmvcore::Analysis$.load() jmvcore::Analysis$.render() jmvcore::Analysis$.save() jmvcore::Analysis$.savePart() jmvcore::Analysis$.setCheckpoint() jmvcore::Analysis$.setParent() jmvcore::Analysis$.setReadDatasetHeaderSource() jmvcore::Analysis$.setReadDatasetSource() jmvcore::Analysis$.setResourcesPathSource() jmvcore::Analysis$.setStatePathSource() jmvcore::Analysis$addAddon() jmvcore::Analysis$asProtoBuf() jmvcore::Analysis$asSource() jmvcore::Analysis$check() jmvcore::Analysis$init() jmvcore::Analysis$optionsChangedHandler() jmvcore::Analysis$postInit() jmvcore::Analysis$print() jmvcore::Analysis$readDataset() jmvcore::Analysis$run() jmvcore::Analysis$serialize() jmvcore::Analysis$setError() jmvcore::Analysis$setStatus() jmvcore::Analysis$translate() jjstatsplot::waffleBase$initialize()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffleClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Waffle Charts — waffleClass","text":"waffleClass$clone()","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffleClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Waffle Charts — waffleClass","text":"objects class cloneable method.","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffleClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Waffle Charts — waffleClass","text":"","code":"waffleClass$clone(deep = FALSE)"},{"path":"https://www.serdarbalci.com/jjstatsplot/reference/waffleClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Waffle Charts — waffleClass","text":"deep Whether make deep clone.","code":""},{"path":[]},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"hull-plot-analysis-0-0-31-84","dir":"Changelog","previous_headings":"New Features","what":"Hull Plot Analysis","title":"jjstatsplot 0.0.31.84 (2025-10-03)","text":"Creates polygonal boundaries around data points grouped categorical variables Based ggforce::geom_mark_hull() function Perfect visualizing customer segments, patient subgroups, data clusters Customizable hull concavity (0-2 range) Optional confidence ellipses Outlier detection Group statistics summary Natural language interpretation Multiple color palettes (default, viridis, Set1, Set2, Dark2, clinical) Multiple plot themes (minimal, classic, light, dark, clinical) Support color size variables Automatic fallback convex hulls V8/concaveman packages unavailable","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"package-dependencies-0-0-31-84","dir":"Changelog","previous_headings":"Improvements","what":"Package Dependencies","title":"jjstatsplot 0.0.31.84 (2025-10-03)","text":"Added ggforce Imports hull plot functionality Added grid Imports unit handling hull plots","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"documentation-0-0-31-84","dir":"Changelog","previous_headings":"Improvements","what":"Documentation","title":"jjstatsplot 0.0.31.84 (2025-10-03)","text":"Updated DESCRIPTION new analysis count (18 analyses) Updated README include hull plot analysis types table Enhanced package description reflect expanded capabilities","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"bug-fixes-0-0-31-84","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"jjstatsplot 0.0.31.84 (2025-10-03)","text":"None release","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"release-highlights-0-0-31-57","dir":"Changelog","previous_headings":"","what":"Release Highlights","title":"jjstatsplot 0.0.31.57 (2025-09-03)","text":"Early release September 2025 Comprehensive statistical visualization suite 17+ analysis types Publication-ready plots statistical annotations","code":""},{"path":[]},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"distribution-analysis-0-0-31-57","dir":"Changelog","previous_headings":"Core Features","what":"Distribution Analysis","title":"jjstatsplot 0.0.31.57 (2025-09-03)","text":"jjhistostats - Histograms Shapiro-Wilk test robust measures jjridges - Ridge plots multiple distribution overlay jwaffle - Waffle charts part--whole visualization","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"continuous-vs-continuous-0-0-31-57","dir":"Changelog","previous_headings":"Core Features","what":"Continuous vs Continuous","title":"jjstatsplot 0.0.31.57 (2025-09-03)","text":"jjscatterstats - Scatter plots correlation analysis jjcorrmat - Correlation matrices significance testing","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"categorical-vs-continuous-0-0-31-57","dir":"Changelog","previous_headings":"Core Features","what":"Categorical vs Continuous","title":"jjstatsplot 0.0.31.57 (2025-09-03)","text":"jjbetweenstats - -groups comparisons (ANOVA, Kruskal-Wallis) jjwithinstats - Within-subjects comparisons (repeated measures) jjdotplotstats - Dot charts confidence intervals raincloud - Basic raincloud plots (distribution + individual points) advancedraincloud - Enhanced raincloud plots longitudinal support lollipop - Lollipop charts ranked data","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"categorical-vs-categorical-0-0-31-57","dir":"Changelog","previous_headings":"Core Features","what":"Categorical vs Categorical","title":"jjstatsplot 0.0.31.57 (2025-09-03)","text":"jjbarstats - Bar charts chi-square Fisher’s exact test jjpiestats - Pie charts goodness fit tests jjsegmentedtotalbar - Segmented bar charts totals","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"network-and-time-series-0-0-31-57","dir":"Changelog","previous_headings":"Core Features","what":"Network and Time Series","title":"jjstatsplot 0.0.31.57 (2025-09-03)","text":"jjarcdiagram - Arc diagrams network visualization linechart - Line charts trends time","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"advanced-features-0-0-31-57","dir":"Changelog","previous_headings":"Core Features","what":"Advanced Features","title":"jjstatsplot 0.0.31.57 (2025-09-03)","text":"statsplot2 - Automatic plot selection based variable types Dual-mode operation (single/grouped variables) Statistical flexibility (parametric, non-parametric, robust, Bayesian) Theme support (jamovi-style ggstatsplot themes) Dynamic plot sizing based data dimensions","code":""},{"path":"https://www.serdarbalci.com/jjstatsplot/news/index.html","id":"dependencies-0-0-31-57","dir":"Changelog","previous_headings":"","what":"Dependencies","title":"jjstatsplot 0.0.31.57 (2025-09-03)","text":"R (>= 4.0.0) Core: jmvcore, R6, ggstatsplot Plotting: ggplot2, ggalluvial, ggside, ggcorrplot, ggdist, ggridges, ggrain Statistical: PMCMRplus, WRS2, BayesFactor, effectsize, performance, moments","code":""}]
